{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "JSON Schema for VA Form 20-0995",
  "properties": {
    "data":{
      "type": "object",
      "properties": {
        "type": { "type": "string", "enum": ["supplementalClaim"] },
        "attributes": {
          "type": "object",
          "properties": {
            "benefitType": {
              "type": "string",
              "description": "If the contested issue is a Disability Compensation issue, acknowledgement of form 5103 is required - see form5103Acknowledged.",
              "enum": [
                "compensation",
                "pensionSurvivorsBenefits",
                "fiduciary",
                "lifeInsurance",
                "veteransHealthAdministration",
                "veteranReadinessAndEmployment",
                "loanGuaranty",
                "education",
                "nationalCemeteryAdministration"
              ]
            },
            "claimantType": {
              "type": "string",
              "enum": [ "veteran", "spouse_of_veteran", "child_of_veteran", "parent_of_veteran", "other"]
            },
            "claimantTypeOtherValue": { "type":  "string", "minLength": 1, "maxLength": 25 },
            "potentialPactAct": { "type": "boolean" },
            "veteran": {
              "type": "object",
              "properties": {
                "ssn": {
                  "allOf": [
                    { "$ref": "ssn.json" },
                    { "description": "Veteran's SSN" }
                  ]
                },
                "icn": { "$ref": "icn.json" },
                "firstName": {
                  "allOf": [
                    { "description": "Veteran's first name", "minLength": 1, "maxLength": 30 },
                    { "$comment":  "can be whitespace, to accommodate those with 1 legal name" },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "middleInitial": {
                  "allOf": [
                    { "description": "Veteran's middle initial", "minLength": 1, "maxLength": 1 },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "lastName": {
                  "allOf": [
                    { "description":  "Veteran's last name", "minLength": 1, "maxLength": 40 },
                    { "$ref":  "nonBlankString.json" }
                  ]
                },
                "birthDate": {
                  "description": "Veteran's birth date",
                  "type": "string", "format": "date"
                },
                "fileNumber": {
                  "allOf": [
                    { "description": "Veteran's VA file number (c-file / css)", "minLength": 1, "maxLength": 9 },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "serviceNumber": {
                  "allOf": [
                    { "description":  "Veteran's service number", "minLength":  1, "maxLength":  9 },
                    { "$ref":  "nonBlankString.json" }
                  ]
                },
                "insurancePolicyNumber": {
                  "allOf": [
                    { "description": "Veteran's insurance policy number", "minLength": 1, "maxLength":  18 },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "address":{ "$ref": "address.json" },
                "phone": {
                  "$ref": "phone.json",
                  "$comment": "the phone fields must not exceed 20 chars, when concatenated"
                },
                "email": { "type": "string", "format": "email", "minLength": 6, "maxLength": 255 },
                "timezone": {
                  "description": "Veteran's timezone. Used for adding the current date to the signature according to the veteran's local time. If not specified, the current UTC date will be used for the signature (which may be ahead or behind the local date).",
                  "$ref": "timezone.json"
                }
              },
              "required": ["ssn", "icn", "firstName", "lastName", "birthDate", "address", "phone", "email"]
            },
            "claimant": {
              "type": "object",
              "description": "If the claimant is a non-Veteran, claimant information is required. Without this information, we will be unable to identify the claimant. If you're a healthcare provider or an employee of a healthcare provider requesting review of a VA payment decision, you must identify the healthcare provider as the claimant and complete all relevant information in the claimant object.",
              "properties": {
                "firstName": {
                  "allOf": [
                    { "description": "Non-Veteran Claimant's first name", "minLength": 1, "maxLength": 30 },
                    { "$ref": "nonBlankString.json" },
                    { "$comment":  "Can be whitespace to accommodate those with 1 legal name" }
                  ]
                },
                "middleInitial": {
                  "allOf": [
                    { "description": "Non-Veteran Claimant's middle initial", "minLength": 1, "maxLength": 1 },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "lastName": {
                  "allOf": [
                    { "description": "Non-Veteran Claimant's last name", "minLength": 1, "maxLength": 40 },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "address":{ "$ref": "address.json" },
                "phone": {
                  "$ref": "phone.json",
                  "$comment": "the phone fields must not exceed 20 chars, when concatenated"
                },
                "email": { "type": "string", "format": "email", "minLength": 6, "maxLength": 255 },
                "timezone": {
                  "description": "Veteran's timezone. Used for adding the current date to the signature according to the veteran's local time. If not specified, the current UTC date will be used for the signature (which may be ahead or behind the local date).",
                  "$ref": "timezone.json"
                }
              },
              "dependencies": {
                "firstName": ["lastName"],
                "middleInitial": ["firstName", "lastName"],
                "lastName": ["firstName"]
              },
              "required": ["firstName", "lastName", "address", "phone", "email"]
            },
            "alternateSigner": {
              "description": "Alternate signer information",
              "type": "object",
              "properties": {
                "firstName": {
                  "allOf": [
                    { "description": "Alternate signer's first name", "minLength": 1, "maxLength": 30 },
                    { "$ref": "nonBlankString.json" },
                    { "$comment":  "Can be whitespace to accommodate those with 1 legal name" }
                  ]
                },
                "middleInitial": {
                  "allOf": [
                    { "description": "Alternate signer's middle initial", "minLength": 1, "maxLength": 1 },
                    { "$ref": "nonBlankString.json" }
                  ]
                },
                "lastName": {
                  "allOf": [
                    { "description": "Alternate signer's last name", "minLength": 1, "maxLength": 40 },
                    { "$ref": "nonBlankString.json" }
                  ]
                }
              },
              "dependencies": {
                "firstName": ["lastName"],
                "middleInitial": ["firstName", "lastName"],
                "lastName": ["firstName"]
              },
              "required": ["firstName", "lastName"]
            },
            "evidenceSubmission": {
              "description": "Evidence may be uploaded up to 7 days from the 'created_at' date of the associated Supplemental Claim via 'supplemental_claims/evidence_submissions'.",
              "type": "object",
              "properties": {
                "evidenceType":{
                  "type": "array",
                  "description": "'upload' indicates that the Veteran has supplied additional evidence as uploaded documents. 'retrieval' indicates that the Veteran has supplied contact information for facilities holding evidence relevant to the claim; the 'retrieveFrom' field will contain the facility's contact information. 'none' indicates that the Veteran has not supplied additional evidence",
                  "items": { "type": "string", "enum": ["upload", "retrieval", "none"] },
                  "minItems": 1,
                  "uniqueItems": true,
                  "if": { "contains": { "const": "none" } },
                  "then": { "maxItems": 1 },
                  "else": { "maxItems": 2 }
                },
                "retrieveFrom": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": { "type": "string", "enum": ["retrievalEvidence"] },
                      "attributes": {
                        "type": "object",
                        "properties": {
                          "locationAndName": { "type": "string", "minLength": 1, "maxLength": 255 },
                          "evidenceDates": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "startDate": { "type": "string", "format": "date" },
                                "endDate": { "type": "string", "format": "date" }
                              },
                              "required": [ "startDate", "endDate" ]
                            },
                            "minItems": 1,
                            "maxItems": 4
                          }
                        },
                        "required": [ "locationAndName", "evidenceDates" ]
                      }
                    },
                    "required": [ "type", "attributes" ]
                  },
                  "minItems": 1,
                  "uniqueItems": true
                }
              },
              "required": ["evidenceType"],
              "if": { "properties": { "evidenceType": {"contains": { "const": "retrieval" } } } },
              "then": { "required": ["retrieveFrom"] }
            },
            "form5103Acknowledged": {
              "type": "boolean",
              "description": "The 5103 Notice regarding new & relevant evidence must be acknowledged when the issue(s) being contested is a Disability Compensation issue. The notice can be found here: http://www.va.gov/disability/how-to-file-claim/evidence-needed. If the issue(s) being submitted are Disability Compensation and 'No' is selected, the API will return an error.  Please ensure the Veteran reviews the content about the 5103 Notice at the link above."
            }
          },
          "allOf": [
            { "required": ["veteran", "benefitType", "claimantType", "evidenceSubmission"] },
            {
              "if": { "properties": { "benefitType": { "const": "compensation" } } },
              "then": { "required": ["form5103Acknowledged"], "properties": { "form5103Acknowledged": { "enum": [true] } } }
            },
            {
              "if": { "properties": { "claimantType": { "const": "other" } } },
              "then": { "required": ["claimantTypeOtherValue"] }
            },
            {
              "if": { "properties": { "claimantType": { "enum": ["spouse_of_veteran", "child_of_veteran", "parent_of_veteran", "other"] } } },
              "then": { "required": ["claimant"] }
            }
          ]
        }
      },
      "required": ["type", "attributes"]
    },
    "included": {
      "type": "array",
      "items": { "type": "object",
        "properties": {
          "type":{ "type": "string", "enum": ["appealableIssue"] },
          "attributes": {
            "type": "object",
            "properties": {
              "issue": { "type": "string", "minLength": 1, "maxLength": 140 },
              "decisionDate": { "type": "string", "format": "date" },
              "decisionIssueId":{ "type": "integer" },
              "ratingIssueReferenceId":{ "type": "string", "minLength": 1, "maxLength": 255 },
              "ratingDecisionReferenceId": { "type": "string", "minLength": 1, "maxLength": 255 },
              "socDate": { "type": "string", "format": "date" }
            },
            "required": [ "issue", "decisionDate" ] }
        },
        "required": [ "type", "attributes" ] },
      "minItems": 1,
      "maxItems": 100,
      "uniqueItems": true
    }
  },
  "required": ["data", "included"]
}
