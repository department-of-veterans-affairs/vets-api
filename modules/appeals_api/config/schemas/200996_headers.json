{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "JSON Schema for Higher-Level Review Creation endpoint headers (Decision Reviews API)",
  "$ref": "#/definitions/hlrCreateParameters",
  "definitions": {
    "hlrCreateParameters": {
      "type": "object",
      "properties": {
        "X-VA-SSN": { "$ref": "#/definitions/X-VA-SSN" },
        "X-VA-First-Name": { "$ref": "#/definitions/X-VA-First-Name" },
        "X-VA-Middle-Initial": { "$ref": "#/definitions/X-VA-Middle-Initial" },
        "X-VA-Last-Name": { "$ref": "#/definitions/X-VA-Last-Name" },
        "X-VA-Birth-Date": { "$ref": "#/definitions/X-VA-Birth-Date" },
        "X-VA-File-Number": { "$ref": "#/definitions/X-VA-File-Number" },
        "X-VA-Service-Number": { "$ref": "#/definitions/X-VA-Service-Number" },
        "X-VA-Insurance-Policy-Number": { "$ref": "#/definitions/X-VA-Insurance-Policy-Number" }
      },
      "additionalProperties": false,
      "required": [
        "X-VA-SSN",
        "X-VA-First-Name",
        "X-VA-Last-Name",
        "X-VA-Birth-Date"
      ]
    },
    "X-VA-SSN": { "type": "string", "pattern": "^[0-9]{9}$", "description": "veteran's SSN" },
    "X-VA-First-Name": {
      "description": "veteran's first name",
      "$comment": "can be whitespace, to accomodate those with 1 legal name",
      "type": "string",
      "maxLength": 12
    },
    "X-VA-Middle-Initial": { "$ref": "#/definitions/nonBlankStringMaxLength1", "description": "veteran's middle initial" },
    "X-VA-Last-Name": { "$ref": "#/definitions/nonBlankStringMaxLength18", "description": "veteran's last name" },
    "X-VA-Birth-Date": { "$ref": "#/definitions/date", "description": "veteran's birth date" },
    "X-VA-File-Number": { "$ref": "#/definitions/nonBlankStringMaxLength9", "description": "veteran's file number" },
    "X-VA-Service-Number": { "$ref": "#/definitions/nonBlankStringMaxLength9", "description": "veteran's service number" },
    "X-VA-Insurance-Policy-Number": {
      "$ref": "#/definitions/nonBlankStringMaxLength18",
      "description": "veteran's insurance policy number"
    },
    "nonBlankString": {
      "type": "string",
      "pattern": "[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]",
      "$comment": "The pattern used ensures that a string has at least one non-whitespace character. The pattern comes from JavaScript's \\s character class. \"\\s Matches a single white space character, including space, tab, form feed, line feed, and other Unicode spaces. Equivalent to [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff].\": https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes  We are using simple character classes at JSON Schema's recommendation: https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-4.3"
    },
    "nonBlankStringMaxLength18": { "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 18 } ] },
    "nonBlankStringMaxLength9": { "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 9 } ] },
    "nonBlankStringMaxLength1": { "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 1 } ] },
    "date": { "type": "string", "pattern": "^[0-9]{4}(-[0-9]{2}){2}$" }
  }
}
