name: Code Checks
on: [push]
jobs:
  linting_and_security:
    name: Linting and Security
    env:
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
      RAILS_ENV: test
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install System Packages (pdftk, poppler, imagemagick)
        run: sudo apt install imagemagick pdftk poppler-utils

      - name: Run bundle-audit (checks gems for CVE issues)
        run:  bundle exec bundle-audit check --update

      - name: Run Rubocop
        run: bundle exec rubocop --parallel --format progress --format json --out rubocop.json

      - name: Run Brakeman
        run:  bundle exec brakeman --ensure-latest --confidence-level=2 -o brakeman.json

      - uses: duderman/rubocop-annotate-action@v0.1.0
        with:
          path: rubocop.json
        if: hashFiles('rubocop.json') != ''

      - uses: devmasx/brakeman-linter-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          REPORT_PATH: brakeman.json
        if: hashFiles('brakeman.json') != ''

  tests:
    name: Test
    runs-on: asg
    env:
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
      CI: true
      DATABASE_URL: "postgis://vets-api:postgres@127.0.0.1:5432/vets_api_test?pool=4"
      DISABLE_BOOTSNAP: true
      RAILS_ENV: test
      "Settings.test_database_url": "postgis://vets-api:postgres@127.0.0.1:5432/vets_api_test"
      "Settings.saml.cert_path": "spec/support/certificates/ruby-saml.crt"
      "Settings.saml.key_path": "spec/support/certificates/ruby-saml.key"
      "Settings.binaries.clamdscan": "clamscan"
      TERM: xterm-256color
      GIT_COMMIT_SHA: ${{ github.sha }}
      CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
      ImageOS: ubuntu20
      NODE_EXTRA_CA_CERTS: '/etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem' # Needed for self-hosted runners

    services:
      postgres:
        image: postgis/postgis:11-2.5
        env:
          POSTGRES_USER: vets-api
          POSTGRES_DB: vets-api_test
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 15

      redis:
        image: circleci/redis:5.0-alpine

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Database
        run: bundle exec parallel_test -n 14 -e 'bundle exec rake db:reset'

      - name: Setup Code Climate Reporting
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run Specs
        run: bundle exec parallel_rspec spec/ modules -n 14 -o '--color --tty'

      - name: Publish Code Climate coverage
        run: |
          export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
          ./cc-test-reporter after-build -t simplecov

      - name: Publish Test Results
        uses: docker://ghcr.io/enricomi/publish-unit-test-result-action:v1
        if: always()
        with:
          check_name: Test Results
          comment_on_pr: false
          files: log/*.xml
          github_token: ${{ secrets.GITHUB_TOKEN }}

  danger:
    name: Danger
    env:
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
      RAILS_ENV: test
      DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1

      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Run Danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: 'Gemfile'
          install_path: 'vendor/bundle'
          danger_file: 'Dangerfile'
          danger_id: 'danger-pr'
