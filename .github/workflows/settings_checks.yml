name: Settings Checks

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'config/settings.yml'
      - 'config/settings/*.yml'
permissions:
  id-token: write
  contents: read
  checks: write

jobs:
  validate-config-files:
    env:
      COVERBAND_DISABLE_AUTO_START: true
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
    permissions: write-all
    runs-on: ubuntu-32-cores-latest
    steps:
      - uses: actions/checkout@v5

      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install pdftk
        run: sudo apt-get update && sudo apt-get install -y pdftk-java

      - name: Run Settings Validation Rake task
        run: bundle exec rake settings:validate

      - name: Add Settings Failure label
        if: failure() && github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          number: ${{ github.event.pull_request.number }}
          labels: settings-failure

      - name: Remove Settings Failure label
        if: success() && github.event_name == 'pull_request'
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          number: ${{ github.event.pull_request.number }}
          labels: settings-failure
  check-parameters:
    runs-on: ubuntu-32-cores-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE }}
          aws-region: us-gov-west-1

      - name: Obtain GitHub Token
        uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb # latest
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Install jq
        run: |
          sudo apt update
          sudo apt install jq -y

      - name: Fetch the remote master branch
        run: git fetch origin master

      - name: Check ENV diff for aws_ssm_custom lookups
        shell: bash
        run: |
          set -euo pipefail
      
          diff_output=$(git diff --unified=0 --no-color origin/master -- \
            config/settings.yml 'config/settings/*.yml' || true)
      
          if [[ -z "$diff_output" ]]; then
            echo "No changes detected in config/settings files."
            echo "INVALID_PARAMETERS=" >> "$GITHUB_ENV"
            exit 0
          fi
      
          new_env_keys=$(
            echo "$diff_output" \
            | grep -E '^\+' \
            | grep -vE '^\+\+\+' \
            | grep -oE "ENV\[['\"][^'\"]+['\"]\]" \
            | sed -E "s/ENV\[['\"]([^'\"]+)['\"]\]/\1/" \
            | sort -u
          )
      
          if [[ -z "$new_env_keys" ]]; then
            echo "No new ENV keys introduced."
            echo "INVALID_PARAMETERS=" >> "$GITHUB_ENV"
            exit 0
          fi
      
          # Mask the keys themselves (belt & suspendersâ€”even though these are names, not values)
          for k in $new_env_keys; do
            echo "::add-mask::$k"
          done
      
          invalid_parameters=()
      
          for key in $new_env_keys; do
            # format to SSM path and mask those paths too
            formatted_key=$(echo "$key" | sed 's/__/\//g')
            for p in \
              "/dsva-vagov/vets-api/dev/env_vars/$formatted_key" \
              "/dsva-vagov/vets-api/staging/env_vars/$formatted_key" \
              "/dsva-vagov/vets-api/sandbox/env_vars/$formatted_key" \
              "/dsva-vagov/vets-api/prod/env_vars/$formatted_key"
            do
              echo "::add-mask::$p"
            done
      
            names=( \
              "/dsva-vagov/vets-api/dev/env_vars/$formatted_key" \
              "/dsva-vagov/vets-api/staging/env_vars/$formatted_key" \
              "/dsva-vagov/vets-api/sandbox/env_vars/$formatted_key" \
              "/dsva-vagov/vets-api/prod/env_vars/$formatted_key" \
            )
      
            set +e
            # We only query InvalidParameters; we never request values/decryption
            ssm_output=$(aws ssm get-parameters --names "${names[@]}" --query "InvalidParameters" --output json 2>&1)
            ec=$?
            set -e
      
            if [[ $ec -ne 0 ]]; then
              # Do not echo AWS output to avoid any accidental leakage
              echo "Warning: AWS SSM query failed for one key (skipping)."
              continue
            fi
      
            # Collect invalid parameter names silently
            if [[ "$ssm_output" != "[]" && "$ssm_output" != "null" ]]; then
              while read -r param; do
                [[ -n "$param" ]] && invalid_parameters+=("$param")
              done < <(echo "$ssm_output" | jq -r '.[]' 2>/dev/null || true)
            fi
          done
      
          if [[ ${#invalid_parameters[@]} -gt 0 ]]; then
            # Also mask invalid parameter names before exporting
            for p in "${invalid_parameters[@]}"; do
              echo "::add-mask::$p"
            done
      
            {
              echo "INVALID_PARAMETERS<<EOF"
              printf -- '- %s\n' "${invalid_parameters[@]}"
              echo "EOF"
            } >> "$GITHUB_ENV"
            echo "Found invalid parameters (count: ${#invalid_parameters[@]})."
          else
            echo "INVALID_PARAMETERS=" >> "$GITHUB_ENV"
            echo "No invalid parameters found."
          fi
      - name: Respond to PR if invalid parameters are found
        if: env.INVALID_PARAMETERS != ''
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3.0.1
        with:
          message: |
            :warning: The following Parameter Store values are invalid. Please make sure the values are correct and exist in AWS Parameter Store before merging:
            ${{ env.INVALID_PARAMETERS }}
          github-token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}

      - name: Fail if invalid parameters are found
        if: env.INVALID_PARAMETERS != ''
        run: exit 1

      - name: Respond to PR if no invalid parameters are found
        if: env.INVALID_PARAMETERS == ''
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3.0.1
        with:
          message: |
            :+1: All Parameter Store values in this PR are valid
          github-token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
