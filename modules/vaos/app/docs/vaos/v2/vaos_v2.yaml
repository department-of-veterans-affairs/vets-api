openapi: "3.0.0"
info:
  version: 1.0.0
  title: VAOS
  description: |
    ## The API for managing Veterans Affairs Online Scheduling

    These endpoints give hooks into VAOS, an existing product suite, containing a veteran-facing healthcare appointment online scheduling tool of
    the same name (formerly named VAR - Veteran Appointment Request), a scheduler-facing appointment management tool named Schedule Manager, and a schedule configuration utility for VA facilities, named VATS (VA Tool Set).
  contact:
    name: va.gov
tags:
  - name: appointments
    description: Appointments
  - name: patients
    description: Patients
  - name: systems
    description: Systems
servers:
  - url: https://sandbox-api.va.gov/v2/vaos/{version}
    description: VA.gov API sandbox environment
    variables:
      version:
        default: v2
  - url: https://api.va.gov/v2/vaos/{version}
    description: VA.gov API production environment
    variables:
      version:
        default: v2
paths:
  "/appointments":
    get:
      tags:
        - appointments
      summary: Returns a list of appointments for a given patient
      operationId: getAppointments
      security:
        - bearerAuth: []
      parameters:
        - name: start
          in: query
          description: The start date for the query.
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: The end date for the query.
          required: true
          schema:
            type: string
            format: date-time
        - name: statuses
          in: query
          description:
            A CSV list of the desired appointment statuses to fetch/filter
            by.
          schema:
            "$ref": "#/components/schemas/AppointmentStatus"
          style: form
          explode: false
      responses:
        "200":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AppointmentsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
    post:
      tags:
        - appointments
      summary: Creates a new appointment
      operationId: postAppointments
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppointmentRequest"
      responses:
        "201":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AppointmentResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/appointments/{appointment-id}":
    get:
      tags:
        - appointments
      summary: Retrieve appointment by id
      operationId: fetchAppointment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: "appointment-id"
          schema:
            type: integer
      responses:
        "200":
          description: Appointment retrieved successfully
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AppointmentResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
    put:
      tags:
        - appointments
      summary: Updates the appointment status
      operationId: updateAppointment
      security:
        - bearerAuth: []
      parameters:
        - name: appointment-id
          in: path
          description: The id of the appointment to update.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: The new status to update the appointment. Currently only the cancelled update is supported.
          required: true
          schema:
            type: string
            enum: 
              - cancelled
              - proposed
              - pending
              - booked
              - arrived
              - noshow
              - fulfilled
      responses:
        "200":
          description: The appointment status is updated  
          content:
            application/json:
              schema:
                required: 
                  - id
                  - type
                  - attributes
                properties:
                  id:
                    type: string
                  type:
                    type: string
                    example: appointments
                  attributes:
                    $ref: "#/components/schemas/Appointment"   
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"            
  "/locations/{location_id}/clinics":
    get:
      tags:
        - facilities
      summary: Returns a list of clinics for a given facility
      operationId: getClinics
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: location_id
          schema:
            type: string
        - in: query
          required: false
          name: patient_icn
          schema:
            type: string
        - in: query
          required: false
          name: clinic_ids
          schema:
            type: string
        - in: query
          required: false
          name: clinical_service
          schema:
            $ref: "#/components/schemas/ClinicalServiceType"
        - in: query
          required: false
          name: page_size
          schema:
            type: integer
        - in: query
          required: false
          name: page_number
          schema:
            type: integer
      responses:
        "200":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Clinic"
              example:
                data:
                  - id: "983"
                    type: "clinic"
                    attributes:
                      vista_site: "983"
                      id: "308"
                      service_name: "CHY PC KILPATRICK"
                      physical_location: "Green Team Clinic1"
                      phone_number: "111-222-3333"
                      station_id: ""
                      station_name: ""
                      primary_stop_code: "323"
                      primary_stop_code_name: ""
                      secondary_stop_code: ""
                      secondary_stop_code_name: ""
                      patient_direct_scheduling: true
                      patient_display: true
                      char4: "CDQC"
                  - id: "983"
                    type: "clinic"
                    attributes:
                      vista_site: "983"
                      id: "308"
                      service_name: "CHY PC KILPATRICK"
                      physical_location: "Green Team Clinic1"
                      phone_number: "111-222-3333"
                      station_id: ""
                      station_name: ""
                      primary_stop_code: "323"
                      primary_stop_code_name: ""
                      secondary_stop_code: ""
                      secondary_stop_code_name: ""
                      patient_direct_scheduling: true
                      patient_display: true
                      char4: "CDQC"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/locations/{location_id}/clinics/{clinic_id}/slots":
    get:
      tags:
        - appointments
      summary: Returns a list of available appointment slots for a given clinic
      operationId: getAppointmentSlots
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: location_id
          description: The facility division ID
          schema:
            type: string
        - in: path
          required: true
          name: clinic_id
          description: The clinic IEN
          schema:
            type: string
        - in: query
          required: true
          name: start
          description: The start date for the query
          schema:
            type: string
        - in: query
          required: true
          name: end
          description: The end date for the query
          schema:
            type: string
      responses:
        "200":
          description: Retrives a list of available appointment slots for a given clinic
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Slot"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/patients":
    get:
      tags:
        - patients
      summary: Returns patient appointment metadata
      operationId: getPatients
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - id
                  - type
                  - attributes
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  attributes:
                    type: object
                    properties:
                      hasRequiredAppointmentHistory:
                        type: boolean
                      isEligibleForNewAppointmentRequest:
                        type: boolean
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"

components:
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
  schemas:
    Appointment:
      description: Information about a future or past meeting.
      type: object
      properties:
        id:
          description: A unique identifier for this appointment.
          type: string
          maxLength: 64
        kind:
          "$ref": "#/components/schemas/AppointmentKind"
        status:
          "$ref": "#/components/schemas/AppointmentStatus"
        serviceType:
          description: the care type for the appointment
          type: string
        patientIcn:
          description: The patient ICN
          type: string
          nullable: false
        locationId:
          description: The sta6aid for the VAfacility where the appointment is registered.
          type: string
        clinic:
          description: The clinic ID for the Appointment
          type: string
        telehealth:
          "$ref": "#/components/schemas/TelehealthInfo"
        practitioners:
          description: The practitioners participating in this appointment.
          type: array
          items:
            "$ref": "#/components/schemas/Practitioner"
        reason:
          description:
            The reason for an Express Care request, or the purpose for
            a a non-Express Care request.
          type: string
        start:
          description: The start time of the appointment.
          type: string
          format: date-time
        end:
          description: The end time of the appointment.
          type: string
          format: date-time
        minutesDuration:
          type: integer
          description: The duration of the meeting, in minutes.
        slot:
          "$ref": "#/components/schemas/Slot"
        requestedPeriods:
          type: array
          description: a list of requested periods for appointment
          items:
            "$ref": "#/components/schemas/Period"
        contact:
          "$ref": "#/components/schemas/PatientContact"
        preferredTimesForPhoneCall:
          type: array
          description: a list of times the patient prefers to be contacted by phone
          items:
            type: string
            enum:
              - Morning
              - Afternoon
              - Evening
        priority:
          description: an unsigned integer
          type: integer
          minimum: 0
        cancellationReason:
          description: The reason the appointment was cancelled.
          type: string
        description:
          description: Not used.
          type: string
        comment:
          type: string
    AppointmentKind:
      type: string
      enum:
        - clinic
        - cc
        - telehealth
        - phone
      description: |
        The kind of appointment:
         * clinic - A clinic (in-person) appointment
         * cc - A community-care appointment
         * telehealth - A virtual appointment
         * phone - A phone appointment
    AppointmentsResponse:
      description: An array of appointments
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Appointment"
    AppointmentResponse:
      description: A single appointment
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Appointment"
    AppointmentStatus:
      type: string
      enum:
        - proposed
        - pending
        - booked
        - arrived
        - noshow
        - fulfilled
        - cancelled
    Errors:
      required:
        - "errors"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              status:
                type: "string"
              code:
                type: "string"
              title:
                type: "string"
              detail:
                type: "string"
    Clinic:
      type: "object"
      required:
        - "id"
        - "type"
        - "attributes"
      properties:
        id:
          type: "string"
        type:
          type: "string"
        attributes:
          type: "object"
          required:
            - "vista_site"
            - "id"
            - "service_name"
            - "physical_location"
            - "phone_number"
            - "station_id"
            - "station_name"
            - "primary_stop_code"
            - "primary_stop_code_name"
            - "secondary_stop_code"
            - "secondary_stop_code_name"
            - "patient_direct_scheduling"
            - "patient_display"
            - "char4"
          properties:
            vista_site:
              type: "integer"
            id:
              type: "string"
            service_name:
              type: "string"
            physical_location:
              type: "string"
            phone_number:
              type: "string"
            station_id:
              type: "string"
            station_name:
              type: "string"
            primary_stop_code:
              type: "integer"
            primary_stop_code_name:
              type: "string"
            secondary_stop_code:
              type: "integer"
            secondary_stop_code_name:
              type: "string"
            patient_direct_scheduling:
              type: "boolean"
            patient_display:
              type: "boolean"
            char4:
              type: "string"
    ClinicalServiceType:
      type: "string"
      enum:
        - "primaryCare"
        - "socialWork"
        - "optometry"
        - "clinicalPharmacyPrimaryCare"
        - "ophthalmology"
        - "foodAndNutrition"
        - "audiology"
        - "amputation"
        - "homeSleepTesting"
        - "moveProgram"
        - "cpap"
        - "outpatientMentalHealth"
        - "covid"
    CreateAppointmentRequest:
      description: A request to create a new appointment.
      type: object
      properties:
        kind:
          "$ref": "#/components/schemas/AppointmentKind"
        status:
          "$ref": "#/components/schemas/AppointmentStatus"
        patientIcn:
          description: The patient ICN
          type: string
          nullable: false
        locationId:
          description: The sta6aid for the VAfacility where the appointment is registered.
          type: string
        clinic:
          description: The clinic ID for the Appointment
          type: string
        reason:
          description:
            The reason for an Express Care request, or the purpose for
            a a non-Express Care request.
          type: string
        slot:
          "$ref": "#/components/schemas/Slot"
        contact:
          "$ref": "#/components/schemas/PatientContact"
        serviceType:
          type: string
          description: the care type for the appointment
        requestedPeriods:
          type: array
          description: a list of requested periods for appointment
          items:
            "$ref": "#/components/schemas/Period"
    Slot:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          example: ee003057-84b6-4df6-989b-ffac9c8c52d2
        type:
          type: string
          example: slots
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              example: "2020-01-01T12:30:00Z"
            end:
              type: string
              example: "2020-01-01T13:00:00Z"
    ContactPoint:
      type: object
      properties:
        type:
          type: string
          enum:
            - email
            - phone
          nullable: false
        value:
          type: string
          nullable: false
    PatientContact:
      description: Patient contact information
      type: object
      properties:
        telecom:
          type: array
          items:
            "$ref": "#/components/schemas/ContactPoint"
    Period:
      type: object
      properties:
        start:
          type: string
          description: start time of period
          format: date-time
        end:
          type: string
          description: end time of period
          format: date-time
    Practitioner:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/PractitionerId"
        firstName:
          type: string
        lastName:
          type: string
        practiceName:
          type: string
      description: Details about the practitioner.
    PractitionerId:
      description: A practitioner ID from an external system.
      type: object
      properties:
        system:
          type: string
          description: HSRM, Cerner, etc
        value:
          type: string
          description: the practitioner ID
    # Slot:
    #   type: object
    #   properties:
    #     id:
    #       description: The slot ID
    #       type: string
    #       pattern: "[A-Za-z0-9\\-\\.]{1,64}"
    #     start:
    #       description: Date/Time that the slot is to begin.
    #       type: string
    #       format: date-time
    #     end:
    #       description: Date/Time that the slot is to end.
    #       type: string
    #       format: date-time
    TasAddress:
      type: object
      properties:
        streetAddress:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        latitutde:
          description: Latitude of the site
          type: number
          format: double
        longitude:
          description: Longitude of the site
          type: number
          format: double
        additionalDetails:
          description: AdditionalDetails of the site
          type: string
    TasInfo:
      type: object
      properties:
        siteCode:
          description: The telehealth access site (TAS) site ID.
          type: string
        confirmationCode:
          type: string
        address:
          "$ref": "#/components/schemas/TasAddress"
    TelehealthInfo:
      description: Details about a telehealth (virtual) meeting.
      type: object
      properties:
        url:
          description: The meeting URL.
          type: string
        atlas:
          "$ref": "#/components/schemas/TasInfo"
  responses:
    "BadGateway":
      description: "The server was acting as a gateway or proxy and received an invalid response from the upstream server."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "BadRequest":
      description: "Bad Request, the server cannot or will not process the request due to an apparent client error."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Conflict":
      description: "Conflict, indicates that the request could not be processed because of conflict in the current state of the appointment."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Forbidden":
      description: "Forbidden, user does not have access to VAOS scheduling."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "GatewayTimeout":
      description: "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "InternalServerError":
      description: "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "NotFound":
      description: "Requested resource could not be found."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "NotImplemented":
      description: "The server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API)."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "ServiceUnavailable":
      description: "The server cannot handle the request (because it is overloaded or down for maintenance). Generally, this is a temporary state."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Unauthorized":
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Unprocessable":
      description: "Unprocessable Entity, the request was well-formed but was unable to be followed due to parameter validation errors."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"

