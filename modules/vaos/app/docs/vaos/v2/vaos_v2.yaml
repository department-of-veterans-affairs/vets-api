openapi: "3.0.0"
info:
  version: 1.0.0
  title: VAOS
  description: |
    ## The API for managing Veterans Affairs Online Scheduling

    These endpoints give hooks into VAOS, an existing product suite, containing a veteran-facing healthcare appointment online scheduling tool of
    the same name (formerly named VAR - Veteran Appointment Request), a scheduler-facing appointment management tool named Schedule Manager, and a schedule configuration utility for VA facilities, named VATS (VA Tool Set).
  contact:
    name: va.gov
tags:
  - name: appointments
    description: Appointments
  - name: patients
    description: Patients
  - name: systems
    description: Systems
servers:
  - url: https://sandbox-api.va.gov/vaos/v2
    description: VA.gov API sandbox environment
    variables:
      version:
        default: v2
  - url: https://api.va.gov/vaos/v2
    description: VA.gov API production environment
    variables:
      version:
        default: v2
paths:
  "/appointments":
    get:
      tags:
        - appointments
      summary: Returns a list of appointments for a given patient
      operationId: getAppointments
      security:
        - bearerAuth: []
      parameters:
        - name: start
          in: query
          description: The start date for the query.
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: The end date for the query.
          required: true
          schema:
            type: string
            format: date-time
        - name: statuses
          in: query
          description:
            A CSV list of the desired appointment statuses to fetch/filter
            by.
          schema:
            "$ref": "#/components/schemas/AppointmentStatus"
          style: form
          explode: false
        - name: _include
          in: query
          description:
            A comma delimted list list of the desired appointment statuses to fetch/filter
            by.
          schema:
            "$ref": "#/components/schemas/AppointmentIncludes"
          style: form
          explode: false
      responses:
        "200":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      required:
                        - id
                        - type
                        - attributes
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                          example: appointments
                        attributes:
                          $ref: "#/components/schemas/Appointment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
    post:
      tags:
        - appointments
      summary: Creates a new appointment
      operationId: postAppointments
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppointmentRequest"
      responses:
        "201":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - attributes
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        $ref: "#/components/schemas/Appointment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/appointments/{appointment-id}":
    get:
      tags:
        - appointments
      summary: Retrieve appointment by id
      operationId: fetchAppointment
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: "appointment-id"
          schema:
            type: integer
      responses:
        "200":
          description: Appointment retrieved successfully
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - attributes
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                      attributes:
                        $ref: "#/components/schemas/Appointment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
    put:
      tags:
        - appointments
      summary: Updates the appointment
      operationId: updateAppointment
      security:
        - bearerAuth: []
      parameters:
        - name: appointment-id
          in: path
          description: The id of the appointment to cancel.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAppointmentRequest"
      responses:
        "200":
          description: The appointment status is updated
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - attributes
                    type: object
                    properties:
                      id:
                        type: string
                      type:
                        type: string
                        example: appointments
                      attributes:
                        $ref: "#/components/schemas/Appointment"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/community_care/eligibility/{service_type}":
    get:
      tags:
        - patients
      summary: Returns cc eligibility status for a user
      operationId: getEligibility
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: "service_type"
          description: "type of service, e.g. 'PrimaryCare' "
          schema:
            type: string
      responses:
        "200":
          description: Eligibility retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CCEligibility"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"  
  "/facilities":
    get:
      tags:
        - mobile facility service
      summary: Search for facilities matching criteria.
      operationId: getFacilities
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Not implemented and will be ignored if present.
        - in: query
          name: ids
          required: true
          schema:
            type: string
          description: A comma-separated list of facility IDs.
          example: '534,534gb,442'
        - in: query
          name: children
          schema:
            type: boolean
          description: Indicates whether child facilities should be returned for matching parent facilities.
        - in: query
          name: schedulable
          required: true
          schema:
            type: boolean
          description: Indicates whether returned facilities should be filtered on those that are accepting appointments.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - attributes
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                          example: appointments
                        attributes:
                          $ref: "#/components/schemas/Facility"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/v2/locations/last_visited_clinic":
    get:
      tags:
        - facilities
      description: Returns the latest clinic visited
      responses:
        "200":
          description: Returns the latest clinic visited
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Clinic"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/locations/{location_id}/clinics":
    get:
      tags:
        - facilities
      summary: Returns a list of clinics for a given facility
      operationId: getClinics
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: location_id
          schema:
            type: string
        - in: query
          required: false
          name: patient_icn
          schema:
            type: string
        - in: query
          required: false
          name: clinic_ids
          schema:
            type: string
        - in: query
          required: false
          name: clinical_service
          schema:
            $ref: "#/components/schemas/ClinicalServiceType"
        - in: query
          required: false
          name: page_size
          schema:
            type: integer
        - in: query
          required: false
          name: page_number
          schema:
            type: integer
      responses:
        "200":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Clinic"
              example:
                data:
                  - id: "983"
                    type: "clinic"
                    attributes:
                      vistaSite: "983"
                      id: "308"
                      serviceName: "CHY PC KILPATRICK"
                      physicalLocation: "Green Team Clinic1"
                      phoneNumber: "111-222-3333"
                      stationId: ""
                      stationName: ""
                      primaryStopCode: "323"
                      primaryStopCodeName: ""
                      secondaryStopCode: ""
                      secondaryStopCodeName: ""
                      patientDirectScheduling: true
                      patientDisplay: true
                      char4: "CDQC"
                  - id: "983"
                    type: "clinic"
                    attributes:
                      vistaSite: "983"
                      id: "308"
                      serviceName: "CHY PC KILPATRICK"
                      physicalLocation: "Green Team Clinic1"
                      phoneNumber: "111-222-3333"
                      stationId: ""
                      stationName: ""
                      primaryStopCode: "323"
                      primaryStopCodeame: ""
                      secondaryStopCode: ""
                      secondaryStopCodeName: ""
                      patientDirectScheduling: true
                      patientDisplay: true
                      char4: "CDQC"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/locations/{location_id}/clinics/{clinic_id}/slots":
    get:
      tags:
        - appointments
      summary: Returns a list of available appointment slots for a given clinic
      operationId: getAppointmentSlots
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: location_id
          description: The facility division ID
          schema:
            type: string
        - in: path
          required: true
          name: clinic_id
          description: The clinic IEN
          schema:
            type: string
        - in: query
          required: true
          name: start
          description: The start date for the query
          schema:
            type: string
        - in: query
          required: true
          name: end
          description: The end date for the query
          schema:
            type: string
      responses:
        "200":
          description: Retrives a list of available appointment slots for a given clinic
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Slot"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/locations/{location_id}/slots":
    get:
      tags:
        - appointments
      summary: Returns a list of available appointment slots for a given facility
      operationId: getFacilityAppointmentSlots
      security:
        - bearerAuth: []
      parameters:
        - in: path
          required: true
          name: location_id
          description: The facility division ID
          schema:
            type: string
        - in: query
          required: false
          name: clinic_id
          description: The clinic IEN. Required if clinical_service not provided.
          schema:
            type: string
        - in: query
          required: false
          name: clinical_service
          description: The clinical service (type of care) to find appointment slots for. Required if clinic_id not provided.
          schema:
            type: string
        - in: query
          required: true
          name: start
          description: The start date for the query
          schema:
            type: string
        - in: query
          required: true
          name: end
          description: The end date for the query
          schema:
            type: string
      responses:
        "200":
          description: Retrieves a list of available appointment slots for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Slot"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/eligibility":
    parameters:
     - in: query
       required: true
       name: clinical_service_id
       description: The clinical service (type of care) ID for the scheduling eligibility decision. The currently supported/available VAOS clinical service IDs can be discovered from Mobile Facility Service v2.
       schema:
         type: string
     - in: query
       required: true
       name: facility_id
       schema:
         type: string
     - in: query
       required: true
       name: type
       schema: {
         type: string,
         enum: [
           direct,
           request
         ]
       }
    get:
      tags:
        - patients
      summary: Returns patient appointment metadata
      operationId: getPatients
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Retrieves patient appointment metadata
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/PatientEligibilityResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  "/scheduling/configurations":
    get:
      tags:
        - mobile facility service
      summary: Returns scheduling configuration data
      operationId: getSchedulingConfigurations
      security:
        - bearerAuth: []
      parameters:
        - in: query
          required: true
          name: facility_ids
          description: A comma-separated list of facility IDs.
          schema:
            type: string
        - in: query
          name: cc_enabled
          description: If true, then only scheduling configurations for community care-enabled sites will be returned. If false, then only scheduling configurations for community care-disabled sites will be returned. If not provided, then community care status will be ignored.
          schema:
            type: string
      responses:
        "200":
          description: Retrives a list of clincs for a given facility
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SchedulingConfiguration"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/Unprocessable"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
        "502":
          $ref: "#/components/responses/BadGateway"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
components:
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
  schemas:
    Address:
      type: object
      properties:
        type:
          type: string
          enum:
            - postal
            - physical
            - both
        line:
          type: array
          description: Street name, number, direction & P.O. Box etc. The order of the items is order in which lines should appear in an address label.
          items:
            type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        text:
          type: string
    Appointment:
      description: Information about a future or past meeting.
      type: object
      properties:
        id:
          description: A unique identifier for this appointment.
          type: string
          maxLength: 64
        identifier:
          type: array
          items:
            "$ref": "#/components/schemas/Identifier"
        kind:
          "$ref": "#/components/schemas/AppointmentKind"
        status:
          "$ref": "#/components/schemas/AppointmentStatus"
        serviceType:
          description: the care type for the appointment
          type: string
        reasonCode:
          "$ref": "#/components/schemas/CodeableConcept"
        priority:
          minimum: 0
          type: number
          format: int32
        patientIcn:
          description: The patient ICN
          type: string
          nullable: false
        locationId:
          description: The sta6aid for the VAfacility where the appointment is registered.
          type: string
        clinic:
          description: The clinic ID for the Appointment
          type: string
        clinicName:
          description: The clinic name for the Appointment
          type: string
        practitioners:
          description: The practitioners participating in this appointment.
          type: array
          items:
            "$ref": "#/components/schemas/Practitioner"
        start:
          description: The start time of the appointment.
          type: string
          format: date-time
        localStartTime:
          description: The start time set to the facility's time zone
          type: string
          format: date-time
        end:
          description: The end time of the appointment.
          type: string
          format: date-time
        minutesDuration:
          type: integer
          description: The duration of the meeting, in minutes.
        slot:
          type: object
          properties:
            id:
              pattern: '[A-Za-z0-9\-\.]{1,64}'
              type: string
              description: The slot ID
            start:
              type: string
              description: Date/Time that the slot is to begin.
              format: date-time
            end:
              type: string
              description: Date/Time that the slot is to end.
              format: date-time
        created:
          type: string
          description: The date this appointment was initially created.
          format: date-time
        preferredLocation:
          "$ref": "#/components/schemas/PreferredLocation"
        requestedPeriods:
          type: array
          description: a list of requested periods for appointment
          items:
            "$ref": "#/components/schemas/Period"
        contact:
          "$ref": "#/components/schemas/PatientContact"
        preferredTimesForPhoneCall:
          type: array
          description: a list of times the patient prefers to be contacted by phone
          items:
            type: string
            enum:
              - Morning
              - Afternoon
              - Evening
        cancelationReason:
          "$ref": "#/components/schemas/CodeableConcept"
        description:
          description: Not used.
          type: string
        comment:
          type: string
        preferredLanguage:
          type: string
        cancellable:
          type: boolean
          description: If true then this logical appointment can be cancelled.
        patientInstruction:
          type: string
          description: 'Detailed information and instructions for the patient. See: https://www.hl7.org/fhir/appointment-definitions.html#Appointment.patientInstruction'
        telehealth:
          "$ref": "#/components/schemas/TelehealthInfo"
        extension:
          "$ref": "#/components/schemas/AppointmentExtensions"
        preferredProviderName:
          type: string
        avsPath:
          type: string
          description: URL path for the After Visit Summary, for past booked appointments.
    AppointmentExtensions:
      type: object
      properties:
        desiredDate:
          type: string
          description: Optional field indicating the date and time that the patient originally desired to have the appointment. Used for reporting with VistA appointments.
          format: date-time
        ccLocation:
          $ref: '#/components/schemas/CommunityCareLocation'
        ccRequestedCancellation:
          type: boolean
          description: Indicates if a cancellation request has been submitted for an appointment request.
      description: Non-standard FHIR Appointment attributes.
    AppointmentKind:
      type: string
      enum:
        - clinic
        - cc
        - telehealth
        - phone
      description: |
        The kind of appointment:
         * clinic - A clinic (in-person) appointment
         * cc - A community-care appointment
         * telehealth - A virtual appointment
         * phone - A phone appointment
    AppointmentIncludes:
      type: string
      enum:
        - facilities
        - clinics
    AppointmentStatus:
      type: string
      enum:
        - cancelled
        - proposed
        - pending
        - booked
        - arrived
        - noshow
        - fulfilled
    Errors:
      required:
        - "errors"
      properties:
        errors:
          type: "array"
          items:
            type: "object"
            properties:
              status:
                type: "string"
              code:
                type: "string"
              title:
                type: "string"
              detail:
                type: "string"
    AppointmentReasonCodes:
      type: string
      description: |-
        | Code | Definition |
        |------|------------|
        | Routine Follow-up | This is a routine or follow-up visit. |
        | New Problem | The patient has a new medical issue. |
        | Medication Concern | The patient has a concern or question about a medication. |
      enum:
        - Routine Follow-up
        - New Problem
        - Medication Concern
    Clinic:
      type: "object"
      required:
        - "id"
        - "type"
        - "attributes"
      properties:
        id:
          type: "string"
        type:
          type: "string"
        attributes:
          type: "object"
          required:
            - "vistaSite"
            - "id"
            - "serviceName"
            - "physicalLocation"
            - "phoneNumber"
            - "stationId"
            - "stationName"
            - "primaryStopCode"
            - "primaryStopCodeName"
            - "secondaryStopCode"
            - "secondaryStopCodeName"
            - "patientDirectScheduling"
            - "patientDisplay"
            - "char4"
          properties:
            vistaSite:
              type: "integer"
            id:
              type: "string"
            serviceName:
              type: "string"
            physicalLocation:
              type: "string"
            phoneNumber:
              type: "string"
            stationId:
              type: "string"
            stationName:
              type: "string"
            primaryStopCode:
              type: "integer"
            primaryStopCodeName:
              type: "string"
            secondaryStopCode:
              type: "integer"
            secondaryStopCodeName:
              type: "string"
            patientDirectScheduling:
              type: "boolean"
            patientDisplay:
              type: "boolean"
            char4:
              type: "string"
    CCEligibility:
      type: "object"
      required:
        - "id"
        - "type"
        - "attributes"
      properties:
        id:
          type: "string"
        type:
          type: "string"
        attributes:
          type: "object"
          properties:
            eligible:
              type: "boolean"
              example: true           
    ClinicalServiceType:
      type: "string"
      enum:
        - "primaryCare"
        - "socialWork"
        - "optometry"
        - "clinicalPharmacyPrimaryCare"
        - "ophthalmology"
        - "foodAndNutrition"
        - "audiology"
        - "amputation"
        - "homeSleepTesting"
        - "moveProgram"
        - "cpap"
        - "outpatientMentalHealth"
        - "covid"
    CodeableConcept:
      properties:
        coding:
          type: array
          items:
            $ref: '#/components/schemas/Coding'
        text:
          type: string
          description: Plain text representation of the concept
      description: >-
        A CodeableConcept represents a value that is usually supplied by providing a
        reference to one or more terminologies or ontologies.
        FHIR reference: https://www.hl7.org/fhir/datatypes.html#CodeableConcept
    Coding:
      properties:
        code:
          "$ref": "#/components/schemas/AppointmentReasonCodes"
    CommunityCareLocation:
      type: object
      properties:
        practiceName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      description: Information about the location of a community care appointment.
    CreateAppointmentRequest:
      description: A request to create a new appointment.
      type: object
      properties:
        kind:
          "$ref": "#/components/schemas/AppointmentKind"
        status:
          "$ref": "#/components/schemas/AppointmentStatus"
        serviceType:
          type: string
          description: the care type for the appointment
        reasonCode:
          "$ref": "#/components/schemas/CodeableConcept"
        patientIcn:
          description: The patient ICN
          type: string
          nullable: false
        locationId:
          description: The sta6aid for the VAfacility where the appointment is registered.
          type: string
        clinic:
          description: The clinic ID for the Appointment
          type: string
        practitioners:
          type: array
          description: The practioners participating in this appointment.
          items:
            "$ref": "#/components/schemas/PractitionerIds"
        requestedPeriods:
          type: array
          description: a list of requested periods for appointment
          items:
            "$ref": "#/components/schemas/Period"
        contact:
          "$ref": "#/components/schemas/PatientContact"
        preferredTimesForPhoneCall:
          type: array
          description: A list of times the patient prefers to be contacted by phone.
          items:
            type: string
            enum:
              - Morning
              - Afternoon
              - Evening
        preferredLocation:
          $ref: '#/components/schemas/PreferredLocation'
        comment:
          description:
            A free-form comment section to provide additional information about an appointment request.
          type: string
        preferredLanguage:
          type: string
    HumanName:
      type: object
      properties:
        family:
          type: string
          description: Family name (surname).
        given:
          type: array
          description: Given names (not always first). Given Names appear in the correct order for presenting the name.
          items:
            type: string
      description: A human name.
    Identifier:
      required:
        - system
        - value
      type: object
      properties:
        system:
          type: string
        value:
          type: string
    PatientEligibilityResponse:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            id:
              type: string
            decisionDate:
              type: string
              description: The date-time (in UTC) when the eligibility decision was decided.
              format: date-time
            clinicalServiceId:
              type: string
              description: The clinical service (type of care) for the the request.
            type:
              type: string
              description: >-
                The type of appointment eligibility being considered. `direct` means a
                direct-booking request on the part of the veteran, and `request` means a
                veteran appointment request (to be processed by a scheduler).
              enum:
                - direct
                - request
            eligible:
              type: boolean
            ineligibilityReasons:
              type: array
              items:
                $ref: '#/components/schemas/CodeableConcept'
      description: The response for a patient scheduing eligibility request.
    PreferredLocation:
      type: object
      properties:
        city:
          maxLength: 64
          type: string
        state:
          maxLength: 32
          type: string
      description: The location that the veteran requested the appointment to be scheduled in. This value is only relevant for community care appointment requests.
    UpdateAppointmentRequest:
      description: A request to create a new appointment.
      type: object
      properties:
        status:
          "$ref": "#/components/schemas/AppointmentStatus"
    Slot:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          example: ee003057-84b6-4df6-989b-ffac9c8c52d2
        type:
          type: string
          example: slots
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              example: "2020-01-01T12:30:00Z"
            end:
              type: string
              example: "2020-01-01T13:00:00Z"
            locationId:
              type: string
              example: "757GC"
            practitionerName:
              type: string
              example: "Doe, John D, MD"
            clinicIen:
              type: string
              example: "32216049"
    ContactPoint:
      type: object
      properties:
        type:
          type: string
          enum:
            - email
            - phone
          nullable: false
        value:
          type: string
          nullable: false
    Facility:
      description: Describes a VA facility.
      type: object
      properties:
        id:
          description: The facility ID.
          type: string
          example: 612GJ
        vistaSite:
          description: The VistA site that this facility belongs to.
          type: string
          example: '612'
        vastParent:
          description: The VAST parent site.
          type: string
          example: 612A4
        type:
          description: 'The VA facility type. One of: health, benefits, cemetery, vetCenter'
          example: health
          type: string
        name:
          type: string
          example: Ralph H. Johnson Department of Veterans Affairs Medical Center
        classification:
          type: string
          example: VA Medical Center (VAMC)
        timezone:
          $ref: '#/components/schemas/Timezone'
        lat:
          type: number
          description: Facility latitude
          format: float
          example: 38.931114
        long:
          type: number
          description: Facility longitude
          format: float
          example: -77.01091
        website:
          type: string
          format: url
          example: 'http://www.washingtondc.va.gov'
        phone:
          $ref: '#/components/schemas/PhoneNumbers'
        hoursOfOperation:
          type: array
          items:
            $ref: '#/components/schemas/HoursOfOperation'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        physicalAddress:
          $ref: '#/components/schemas/Address'
        mobile:
          description: 'The mobile health facilities move regularly within a region. If a facility comes back from this API with "mobile": "true", the latitude/longitude and address could be inaccurate. To get the exact current location, please call the number listed.'
          type: boolean
          example: false
        healthService:
          description: 'The health services offered by this facility, such as ''PrimaryCare'' or ''Podiatry''.'
          type: array
          items:
            type: string
        operatingStatus:
          $ref: '#/components/schemas/OperatingStatus'
    HoursOfOperation:
      type: object
      properties:
        daysOfWeek:
          type: string
          enum:
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
            - sun
        allDay:
          type: boolean
        openingTime:
          type: string
          pattern: '([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?'
        closingTime:
          type: string
          pattern: '([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?'
      description: |
        Standard hours of operation. Currently formatted as descriptive text suitable for display, with no guarantee of a standard parsable format. Hours of operation may vary due to holidays or other events.
    OperatingStatus:
      type: object
      description: 'Current status of facility operations.The overall status of the facility which can be Normal Hours and Services, Facility Notice, Limited Hours and/or Services, or Closed. This field replaces active_status.'
      properties:
        code:
          description: 'The operating status of the facility. One of: NORMAL, NOTICE, LIMITED, or CLOSED.'
          type: string
        additionalInfo:
          description: 'Details of facility notices for visitors, such as messages about parking lot closures or floor visitation information.'
          type: string
          minLength: 0
          maxLength: 300
    PatientContact:
      description: Patient contact information
      type: object
      properties:
        telecom:
          type: array
          items:
            "$ref": "#/components/schemas/ContactPoint"
    Period:
      type: object
      properties:
        start:
          type: string
          description: start time of period
          format: date-time
        localStartTime:
          type: string
          description: start time of the period set to the facility's time zone
          format: date-time
        end:
          type: string
          description: end time of period
          format: date-time
    Practitioner:
      type: object
      properties:
        identifier:
          type: array
          items:
            "$ref": "#/components/schemas/Identifier"
        name:
          "$ref": "#/components/schemas/HumanName"
        address:
          "$ref": "#/components/schemas/Address"
      description: Details about the practitioner.
    PractitionerIds:
      description: Practitioner IDs from an external system.
      type: object
      properties:
        identifier:
          type: array
          items:
            "$ref": "#/components/schemas/Identifier"
    PhoneNumbers:
      type: object
      properties:
        main:
          type: string
          example: 202-555-1212
        fax:
          type: string
          example: 202-555-1212
        pharmacy:
          type: string
          example: 202-555-1212
        afterHours:
          type: string
          example: 202-555-1212
        patientAdvocate:
          type: string
          example: 202-555-1212
        mentalHealthClinic:
          type: string
          example: 202-555-1212
        enrollmentCoordinator:
          type: string
          example: 202-555-1212
    SchedulingConfiguration:
      type: object
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          required:
            - facilityId
          properties:
            facilityId:
              type: string
            services:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  stopCodes:
                    type: array
                    items:
                      type: object
                      properties:
                        primary:
                          type: string
                        secondary:
                          type: string
                  char4:
                    type: string
                  direct:
                    type: object
                    properties:
                      patientHistoryRequired:
                        type: boolean
                      patientHistoryDuration:
                        type: integer
                      canCancel:
                        type: boolean
                      enabled:
                        type: boolean
                  request:
                    type: object
                    properties:
                      patientHistoryRequired:
                        type: boolean
                      patientHistoryDuration:
                        type: integer
                      canCancel:
                        type: boolean
                      submittedRequestLimit:
                        type: integer
                      enterpriseSubmittedRequestLimit:
                        type: integer
                      supported:
                        type: boolean
                      schedulingDays:
                        type: array
                        items:
                          type: object
                          properties:
                            day:
                              type: string
                            canSchedule:
                              type: boolean
                            startTime:
                              type: string
                            endTime:
                              type: string
            communityCare:
              type: boolean
    TasAddress:
      type: object
      properties:
        streetAddress:
          type: string
        city:
          type: string
        state:
          type: string
        zipCode:
          type: string
        country:
          type: string
        latitutde:
          description: Latitude of the site
          type: number
          format: double
        longitude:
          description: Longitude of the site
          type: number
          format: double
        additionalDetails:
          description: AdditionalDetails of the site
          type: string
    TasInfo:
      type: object
      properties:
        siteCode:
          description: The telehealth access site (TAS) site ID.
          type: string
        confirmationCode:
          type: string
        address:
          "$ref": "#/components/schemas/TasAddress"
    TelehealthInfo:
      description: Details about a telehealth (virtual) meeting.
      type: object
      properties:
        url:
          description: The meeting URL.
          type: string
        group:
          type: string
        vvsKind:
          description: The kind of telehealth appointment.
          type: string
        atlas:
          "$ref": "#/components/schemas/TasInfo"
    Timezone:
      type: object
      properties:
        zoneId:
          type: string
          description: The timezone ID.
          example: America/New_York
        abbreviation:
          type: string
          description: The timezone ID abbreviation.
          example: EDT
  responses:
    "BadGateway":
      description: "The server was acting as a gateway or proxy and received an invalid response from the upstream server."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "BadRequest":
      description: "Bad Request, the server cannot or will not process the request due to an apparent client error."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Conflict":
      description: "Conflict, indicates that the request could not be processed because of conflict in the current state of the appointment."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Forbidden":
      description: "Forbidden, user does not have access to VAOS scheduling."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "GatewayTimeout":
      description: "The server was acting as a gateway or proxy and did not receive a timely response from the upstream server."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "InternalServerError":
      description: "A generic error message, given when an unexpected condition was encountered and no more specific message is suitable."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "NotFound":
      description: "Requested resource could not be found."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "NotImplemented":
      description: "The server either does not recognize the request method, or it lacks the ability to fulfil the request. Usually this implies future availability (e.g., a new feature of a web-service API)."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "ServiceUnavailable":
      description: "The server cannot handle the request (because it is overloaded or down for maintenance). Generally, this is a temporary state."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Unauthorized":
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors"
    "Unprocessable":
      description: "Unprocessable Entity, the request was well-formed but was unable to be followed due to parameter validation errors."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Errors" 
