{{- if .Values.loadtestEnabled }}
{{- $root := . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-locust-master
  namespace: {{ $root.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: locust
      role: master
  template:
    metadata:
      labels:
        app: locust
        role: master
    spec:
      securityContext:
        fsGroup: {{ $root.Values.fsGroup }}
      containers:
      - name: locust-master
        image: locustio/locust
        volumeMounts:
        - name: locust-script-volume
          mountPath: /locustfile.py
          subPath: locustfile.py
        args:
        - "-f"
        - "/locustfile.py"
        ports:
        - containerPort: 8089
      volumes:
      - name: locust-script-volume
        configMap:
          name: {{ .Values.appName }}-locust-script
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}-locust-master
  namespace: {{ $root.Release.Namespace }}
spec:
  ports:
  - protocol: TCP
    port: 8089
    targetPort: 8089
  selector:
    app: locust
    role: master
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-locust-worker
  namespace: {{ $root.Release.Namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: locust
      role: worker
  template:
    metadata:
      labels:
        app: locust
        role: worker
    spec:
      containers:
      - name: locust-worker
        image: locustio/locust
        args:
        - "--worker" # Run the container as a worker
        - "--master-host={{ .Values.appName }}-locust-master"
        volumeMounts:
        - name: locust-script-volume
          mountPath: /locustfile.py
          subPath: locustfile.py
      volumes:
      - name: locust-script-volume
        configMap:
          name: {{ .Values.appName }}-locust-script
{{- end }}
