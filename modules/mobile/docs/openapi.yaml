openapi: "3.0.0"
info:
  version: 1.0.0
  title: VA Mobile API
  license:
    name: MIT
servers:
  - url: http://api.va.gov
paths:
  /mobile:
    get:
      summary: /mobile
      description: Currently returns a welcome message. In the future given an app version it will return a map of services.
      operationId: discovery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
  /v0/letters:
    get:
      summary: /v0/letters
      description: Returns the list of letter names and types for the given user
      operationId: getLetters
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Letters"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /v0/letters/beneficiary:
    get:
      summary: /v0/letters/beneficiary
      description: Returns benefit info and options for the given user with or without a dependent
      operationId: getLettersBeneficiaryInfo
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LettersBenficiaryInfo"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /v0/letters/{id}:
    post:
      summary: /v0/letters/{id}
      description: Returns requested letter for download
      operationId: downloadLetterWithOptions
      security:
        - Bearer: [ ]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: letter type
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/letterOptions'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /mobile/v0/user:
    get:
      summary: /mobile/v0/user
      description: Returns the user profile
      operationId: get_user
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      example: "Authorization: Bearer ypXeAwQedpmAy5xFD2u5"
  schemas:
    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Error:
      required:
        - title
        - detail
        - code
        - status
      properties:
        title:
          type: string
        detail:
          type: string
        code:
          type: string
        status:
          type: string
        source:
          type: string
        meta:
          type: object
          required:
            - messages
          properties:
            messages:
              type: array
              items:
                type: object
                required:
                  - key
                  - severity
                  - text
                properties:
                  key:
                    type: string
                  severity:
                    type: string
                  text:
                    type: string
    EVSSAuthError:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            required:
              - title
              - detail
              - code
              - status
            properties:
              title:
                type: string
                example: Not Found
              detail:
                type: string
                example: "The requested resource could not be found but may be available again in the future."
              code:
                type: string
                example: '404'
              status:
                type: string
                example: '404'
    Message:
      required:
        - attributes
      properties:
        attributes:
          type: object
          required:
            - message
          properties:
            message:
              type: string
              example: "Welcome to the mobile API"
    Letters:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - fullName
            - attributes
          properties:
            type:
              type: string
              example: "letters"
            id:
              type: string
              example: "abe3f152-90b0-45cb-8776-4958bad0e0ef"
            fullName:
              type: string
              example: "MARK WEBB"
            attributes:
              type: object
              required:
                - letters
              properties:
                letters:
                  type: array
                  items:
                    type: object
                    $ref: "#/components/schemas/LettersInfo"
    LettersInfo:
      required:
        - name
        - letterType
      properties:
        name:
          type: string
          example: "Commissary Letter"
        letterType:
          type: string
          example: "commissary"
    LettersBenficiaryInfo:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              example: "evss_letters_beneficiary_responses"
            id:
              type: string
              example: ""
            attributes:
              type: object
              required:
                - letters
                - benefitInformation
              properties:
                benefitInformation:
                  type: object
                  required:
                    - awardEffectiveDate
                    - hasChapter35Eligibility
                    - monthlyAwardAmount
                    - serviceConnectedPercentage
                  properties:
                    awardEffectiveDate:
                      type: string
                      example: "2013-06-06T04:00:00.000+00:00"
                    hasChapter35Eligibility:
                      type: boolean
                      example: true
                    monthlyAwardAmount:
                      type: number
                      example: 123
                    serviceConnectedPercentage:
                      type: number
                      example: 2
                    hasDeathResultOfDisability:
                      type: boolean
                      example: false
                    hasSurvivorsIndemnityCompensationAward:
                      type: boolean
                      example: true
                    hasSurvivorsPensionAward:
                      type: boolean
                      example: false
                    hasAdaptedHousing:
                      type: boolean
                      example: true
                    hasIndividualUnemployabilityGranted:
                      type: boolean
                      example: false
                    hasNonServiceConnectedPension:
                      type: boolean
                      example: true
                    hasServiceConnectedDisabilities:
                      type: boolean
                      example: false
                    hasSpecialMonthlyCompensation:
                      type: boolean
                      example: true
                militaryService:
                  type: array
                  items:
                    type: object
                    required:
                      - branch
                      - characterOfService
                      - enteredDate
                      - releasedDate
                    properties:
                      branch:
                        type: string
                        example: "Army"
                      characterOfService:
                        type: string
                        example: "UNCHARACTERIZED_ENTRY_LEVEL"
                      enteredDate:
                        type: string
                        example: "1973-01-01T05:00:00.000+00:00"
                      releasedDate:
                        type: string
                        example: "1977-10-01T04:00:00.000+00:00"
    letterOptions:
      type: object
      required:
        - militaryService
        - serviceConnectedDisabilities
        - serviceConnectedEvaluation
        - nonServiceConnectedPension
        - monthlyAward
        - unemployable
        - specialMonthlyCompensation
        - adaptedHousing
        - chapter35Eligibility
        - deathResultOfDisability
        - survivorsAward
      properties:
        militaryService:
          type: boolean
        serviceConnectedDisabilities:
          type: boolean
        serviceConnectedEvaluation:
          type: boolean
        nonServiceConnectedPension:
          type: boolean
        monthlyAward:
          type: boolean
        unemployable:
          type: boolean
        specialMonthlyCompensation:
          type: boolean
        adaptedHousing:
          type: boolean
        chapter35Eligibility:
          type: boolean
        deathResultOfDisability:
          type: boolean
        survivorsAward:
          type: boolean
    User:
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          example: "abe3f152-90b0-45cb-8776-4958bad0e0ef"
        type:
          type: string
          example: "user"
        attributes:
          type: object
          required:
            - first_name
            - middle_name
            - last_name
            - email
          properties:
            first_name:
              type: String
              example: "John"
            middle_name:
              type: String
              example: "A"
            last_name:
              type: String
              example: "Smith"
            email:
              type: String
              example: "john.a.smith@domain.com"