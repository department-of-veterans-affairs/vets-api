---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Release.Namespace }}
  creationTimestamp: null
  name: {{ .Values.common.configMap.name }}
data:
  settings.local.yml: |
    hostname: <%= ENV['HOSTNAME'] %> # possible fallback for unsafe request.host
    vsp_environment:  <%= ENV['VSP_ENVIRONMENT'] %>
    virtual_hosts: <%= ENV['VIRTUAL_HOSTS'] %> # Safe host names
    web_origin: <%= ENV['WEB_ORIGIN'] %>
    web_origin_regex: "\\Ahttps?:\\/\\/.*\\.cms\\.va\\.gov\\z"
    db_encryption_key: <%= ENV['DB_ENCRYPTION_KEY'] %>
    database_url: <%= ENV['DATABASE_URL'] %>
    test_database_url: <%= ENV['TEST_DATABASE_URL'] %>
    secret_key_base: <%= ENV['SECRET_KEY_BASE'] %>
    old_secret_key_base: <%= ENV['OLD_SECRET_KEY_BASE'] %>
    session_cookie:
      secure: true
    lockbox:
      master_key: <%= ENV['LOCKBOX_MASTER_KEY'] %>
    sidekiq_admin_panel: false
    dmc:
      mock_debts: false
      mock_fsr: false
      client_id: <%= ENV['DMC_CLIENT_ID'] %>
      client_secret: <%= ENV['DMC_CLIENT_SECRET'] %>
      url: <%= ENV['DMC_URL'] %>
      debts_endpoint: <%= ENV['DMC_DEBTS_ENDPOINT'] %>
    mcp:
      vbs:
        mock_vista: false
    virtual_agent:
      webchat_secret_a: <%= ENV['VIRTUAL_AGENT_WEB_SECRET'] %>
      webchat_secret_b: <%= ENV['VIRTUAL_AGENT_WEB_SECRET_B'] %>
      cxdw_client_id: <%= ENV['VIRTUAL_AGENT_CXDW_CLIENT_ID'] %>
      cxdw_client_secret: <%= ENV['VIRTUAL_AGENT_CXDW_CLIENT_SECRET'] %>
      cxdw_app_uri: <%= ENV['VIRTUAL_AGENT_CXDW_APP_URI'] %>
      cxdw_dataverse_uri: <%= ENV['VIRTUAL_AGENT_CXDW_DATAVERSE_URI'] %>
      cxdw_table_prefix: <%= ENV['VIRTUAL_AGENT_CXDW_TABLE_PREFIX'] %>
    edu:
      prefill: true
      show_form: true
      sftp:
        host: ""
        pass: ""
        port: ""
        user: ""
    evss:
      prefill: true
      url: <%= ENV['EVSS_URL'] %>
      service_name: <%= ENV['EVSS_SERVICE_NAME'] %>
      alternate_service_name: <%= ENV['EVSS_ALTERNATE_SERVICE_NAME'] %>
      cert_path: <%= ENV['EVSS_CERT_PATH'] %>
      key_path: <%= ENV['EVSS_KEY_PATH'] %>
      root_cert_path: <%= ENV['EVSS_ROOT_CERT_PATH'] %>
      s3:
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        uploads_enabled: true
        bucket: <%= ENV['EVSS_S3_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
      letters:
        url: <%= ENV['EVSS_LETTERS_URL'] %>
      versions:
        documents: "3.7"
        common: "11.6"
        claims: "3.6"
      mock_claims: true
      mock_common_service: true
      mock_disabilities_form: true
      mock_gi_bill_status: true
      mock_itf: true
      mock_letters: true
      mock_pciu: true
      mock_pciu_address: true
      mock_ppiu: true
      mock_reference: true
      mock_vso_search: true
      disability_compensation_form:
        timeout: 55 # ~1 minute
        submit_timeout: 355 # ~6 minutes
      ppiu:
        timeout: 30
      pciu:
        timeout: 30
      pciu_address:
        timeout: 30
      aws:
        url: <%= ENV['EVSS_AWS_UR'] %>
        cert_path: ~
        key_path: ~
        root_ca: ~
      reference_data_service:
        enabled: false
      international_postal_codes: <%= ENV['EVSS_INTERNATIONAL_POSTAL_CODES'] %>
    form_10_10cg:
      carma:
        mulesoft:
          mock: true
          host:  <%= ENV['MULESOFT_HOST'] %>
          client_secret: <%= ENV['MULESOFT_CLIENT_SECRET'] %>
          timeout: 120
          async_timeout: 600
      poa:
        s3:
          aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
          aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
          bucket: <%= ENV['POA_S3_BUCKET'] %>
          enabled: true
          region: <%= ENV['S3_REGION'] %>
    gids:
      url: <%= ENV['GIDS_URL'] %>
    hca:
      prefill: true
      future_discharge_testing: true
      endpoint: <%= ENV['HCA_ENDPOINT'] %>
      ee:
        endpoint: <%= ENV['HCA_EE_ENDPOINT'] %>
        user: "HCASvcUsr"
        pass: <%= ENV['HCA_EE_PASS'] %>
      s3:
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        bucket: <%= ENV['HCA_S3_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
    locators:
      vha_access_satisfaction: <%= ENV['LOCATORS_VHA_ACCESS'] %>
      vha_access_waittime: <%= ENV['LOCATORS_VHA_ACCESS'] %>
      providers_enabled: true
    mhv:
      facility_range: [[358, 718], [720, 740], [743, 758], [979, 989]]
      rx:
        host: <%= ENV['MHV_HOST'] %>
        app_token: <%= ENV['MHV_RX_APP_TOKEN'] %>
      sm:
        host: <%= ENV['MHV_HOST'] %>
        app_token: <%= ENV['MHV_SM_APP_TOKEN'] %>
      inherited_proofing:
        host: <%= ENV['MHV_HOST'] %>
        app_token: <%= ENV['MHV_RX_APP_TOKEN'] %>
        mock: true
    mhv_mobile:
      sm:
        app_token: <%= ENV['MHV_MOBILE_SM_APP_TOKEN'] %>
    mvi:
      url: <%= ENV['MVI_URL'] %>
      mock: true
      processing_code: "T"
      client_cert_path: <%= ENV['MVI_CLIENT_CERT_PATH'] %>
      client_key_path: <%= ENV['MVI_CLIENT_KEY_PATH'] %>
      pii_logging: false
      cache_all_profile_responses: true
    mvi_hca:
      skip_rate_limit: true
      processing_code: "T"
      client_cert_path: <%= ENV['MVI_HCA_CLIENT_CERT_PATH'] %>
      client_key_path: <%= ENV['MVI_HCA_CLIENT_KEY_PATH'] %>
      pii_logging: false
      cache_all_profile_responses: true
    redis:
      host: <%= ENV['REDIS_HOST'] %>
      app_data:
        url: <%= ENV['REDIS_APP_DATA'] %>
      sidekiq:
        url: <%= ENV['REDIS_SIDEKIQ'] %>
      rails_cache:
        url: <%= ENV['REDIS_RAILS_CACHE'] %>
    caseflow:
      mock: "true"
      app_token: <%= ENV['CASEFLOW_API_TOKEN'] %>
      host: <%= ENV['CASEFLOW_API_HOST'] %>
    emis:
      mock: true
      host: <%= ENV['EMIS_HOST'] %>
    vic:
      url: <%= ENV['VIC_URL'] %>
      signing_key_path: <%= ENV['VIC_SIGNING_KEY_PATH'] %>
      s3:
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        bucket: <%= ENV['VIC_S3_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
    preneeds:
      host: <%= ENV['PRENEEDS_HOST'] %>
      s3:
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        bucket: <%= ENV['PRENEEDS_S3_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
    onsite_notifications:
      public_key: <%= ENV['ONSITE_NOTIFICATIONS_PUBLIC_KEY'] %>
      template_ids:
        - "f9947b27-df3b-4b09-875c-7f76594d766d"
    central_mail:
      upload:
        enabled: true
        host: <%= ENV['CENTRAL_MAIL_HOST'] %>
        token: <%= ENV['CENTRAL_MAIL_API_KEY'] %>
    govdelivery:
      staging_service: true
      server: <%= ENV['GOVDELIVERY_SERVER'] %>
      token: <%= ENV['GOV_DELIVERY_TOKEN'] %>
    iam_ssoe:
      client_cert_path: <%= ENV['IAM_SSOE_CLIENT_CERT_PATH'] %>
      client_key_path: <%= ENV['IAM_SSOE_CLIENT_KEY_PATH'] %>
      client_id: <%= ENV['IAM_SSOE_CLIENT_ID'] %>
      # oauth (rest) and sts (soap) services are on different hosts
      oauth_url: <%= ENV['IAM_SSOE_OAUTH_URL'] %>
      sts_url: <%= ENV['IAM_SSOE_STS_URL'] %>
    reports:
      send_email: true
      aws:
        access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        bucket: <%= ENV['REPORTS_AWS_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
        secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
    virtual_regional_office:
      url: <%= ENV['VIRTUAL_REGIONAL_OFFICE_URL'] %>
      api_key: <%= ENV['VRO_API_KEY'] %>
      health_assessment_path: <%= ENV['VIRTUAL_REGIONAL_OFFICE_HEALTH_ASSESSMENT_PATH'] %>
      evidence_pdf_path: <%= ENV['VIRTUAL_REGIONAL_OFFICE_EVIDENCE_PDF_PATH'] %>
    saml_ssoe:
      idp_metadata_file: <%= ENV['SAML_SSOE_IDP_METADATA_FILE'] %>
      cert_path: <%= ENV['SAML_SSOE_CERT_PATH'] %>
      key_path: <%= ENV['SAML_SSOE_KEY_PATH'] %>
      callback_url: <%= ENV['SAML_SSOE_CALLBACK_URL'] %>
      idme_authn_context: <%= ENV['SAML_SSOE_IDME_AUTHN_CONTEXT'] %>
      issuer: <%= ENV['SAML_SSOE_ISSUER'] %>
      logout_url: <%= ENV['SAML_SSOE_LOGOUT_URL'] %>
      request_signing: true
      response_signing: true
      response_encryption: true
      idp_sso_service_binding: <%= ENV['SAML_SSOE_IDP_SSO_SERVICE_BINDING'] %>
    logingov:
      client_id: <%= ENV['LOGINGOV_CLIENT_ID'] %>
      redirect_uri: <%= ENV['LOGINGOV_REDIRECT_URI'] %>
      logout_redirect_uri: <%= ENV['LOGINGOV_LOGOUT_REDIRECT_URI'] %>
      client_cert_path: <%= ENV['CLIENT_CERT_PATH'] %>
      client_key_path: <%= ENV['CLIENT_KEY_PATH'] %>
      oauth_url: <%= ENV['LOGINGOV_OAUTH_URL'] %>
      oauth_public_key: <%= ENV['LOGINGOV_OAUTH_PUBLIC_KEY'] %>
      inherited_proofing_redirect_uri: <%= ENV['LOGINGOV_INHERITED_PROOFING_REDIRECT_URI'] %>
    idme:
      client_id: <%= ENV['IDME_CLIENT_ID'] %>
      client_secret: <%= ENV['IDME_CLIENT_SECRET'] %>
      redirect_uri: <%= ENV['IDME_REDIRECT_URI'] %>
      client_cert_path: <%= ENV['CLIENT_CERT_PATH'] %>
      client_key_path: <%= ENV['CLIENT_KEY_PATH'] %>
      oauth_url: <%= ENV['IDME_OAUTH_URL'] %>
      oauth_public_key: <%= ENV['IDME_OAUTH_PUBLIC_KEY'] %>
    sign_in:
      jwt_encode_key: <%= ENV['SIGN_IN_JWT_ENCODE_KEY'] %>
      cookies_secure: true
      info_cookie_domain: <%= ENV['SIGN_IN_INFO_COOKIE_DOMAIN'] %>
      client_redirect_uris:
        mobile: <%= ENV['SIGN_IN_MOBILE'] %>
        web: <%= ENV['WEB_REDIRECT_URI'] %>
        web_logout: <%= ENV['WEB_LOGOUT_URI'] %>
        mobile_test: <%= ENV['SIGN_IN_MOBILE_TEST'] %>
    ssoe_eauth_cookie:
      name: <%= ENV['SSOE_EAUTH_COOKIE_NAME'] %>
      domain: <%= ENV['SSOE_EAUTH_COOKIE_DOMAIN'] %>
      secure: true
    oidc:
      auth_server_metadata_url: <%= ENV['AUTH_SERVER_METADATA_URL'] %>
      issuer: <%= ENV['OIDC_ISSUER'] %>
      issuer_prefix:  <%= ENV['OIDC_ISSUER_PREFIX'] %>
      audience: <%= ENV['OIDC_AUDIENCE'] %>
      isolated_audience:
        default: <%= ENV['OIDC_AUDIENCE'] %>
        veteran_verification:  <%= ENV['OIDC_VETERAN_VERIFICATION'] %>
        claims:  <%= ENV['OIDC_CLAIMS'] %>
      base_api_url: <%= ENV['BASE_API_URL'] %>
      base_api_token: <%= ENV['OKTA_TOKEN'] %>
      base_api_profile_key_icn: true
      smart_launch_url: <%= ENV['SMART_LAUNCH_URL'] %>
      issued_url: <%= ENV['ISSUED_URL'] %>
      issuers:
        - prefix: <%= ENV['OIDC_ISSUERS_PREFIX'] %>
          metadata: <%= ENV['OIDC_ISSUERS_PREFIX'] %>
          proxy: <%= ENV['ISSUED_PROXY'] %>
      opaque_clients:
        - route: <%= ENV['OPAQUE_CLIENTS_ROUTE'] %>
          client_id: <%= ENV['OIDC_OPAQUE_CLIENTS_CLIENT_ID'] %>
    sentry:
      dsn: <%= ENV['SENTRY10_DSN'] %>
    shrine:
      claims:
        access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        type: s3
        bucket: <%= ENV['SHRINE_CLAIMS_S3_BUCKET'] %>
        path: /
        region: <%= ENV['S3_REGION'] %>
        upload_options:
          server_side_encryption: AES256
          acl: private
    github:
      api_key: <%= ENV['SHRINE_CLAIMS_S3_BUCKET'] %>
    google_analytics:
      url: <%= ENV['GOOGLE_ANALYTICS_URL'] %>
      tracking_id: ~
    maintenance:
      pagerduty_api_url:  <%= ENV['MAINTENANCE_PAGERDUTY_URL'] %>
      pagerduty_api_token: <%= ENV['MAINTENANCE_PAGERDUTY_TOKEN'] %>
      service_query_prefix: <%= ENV['MAINTENANCE_SERVICE_QUERY_PREFIX'] %>
      services: <%= ENV['MAINTENANCE_SERVICES'] %>
      aws:
        access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        bucket: <%= ENV['MAINTENANCE_AWS_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
        secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
    statsd:
      host: <%= ENV.fetch('STATSD_HOST', 'localhost') %>
      port: <%= ENV.fetch('STATSD_PORT', 9125) %>
    betamocks:
      enabled: true
      recording: false
      cache_dir: <%= ENV['BETAMOCKS_CACHE_DIR'] %>
      services_config: <%= ENV['BETAMOCKS_SERVICES_CONFIG'] %>
    salesforce:
      env:  <%= ENV['TARGET_ENV'] %>
    va_profile:
      prefill: true
      url:  <%= ENV['VA_PROFILE_URL'] %>
      address_validation:
        hostname: <%= ENV['SANDBOX_HOST'] %>
        api_key: <%= ENV['VET360_ADDRESS_VALIDATION_API_KEY'] %>
      contact_information:
        cache_enabled: true
        enabled: true
        timeout: 30
        mock: false
      demographics:
        cache_enabled: false
        enabled: true
        timeout: 30
        mock: false
      military_personnel:
        cache_enabled: false
        enabled: true
        timeout: 30
        mock: false
    ihub:
      url: <%= ENV['IHUB_URL'] %>
      in_production: false
      appointments:
        mock: true
    salesforce-gibft:
      url: <%= ENV['GIBFIT_CONSUMER_URL'] %>
      env:  <%= ENV['TARGET_ENV'] %>
      consumer_key: <%= ENV['GIBFIT_CONSUMER_KEY'] %>
      signing_key_path:  <%= ENV['GIBFT_SIGNING_KEY_PATH'] %>
    claims_api:
      report_enabled: false
      audit_enabled: false
      s3:
        enabled: true
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        region: <%= ENV['S3_REGION'] %>
        bucket: <%= ENV['CLAIMS_API_S3_BUCKET'] %>
      disability_claims_mock_override: false
      v2_docs:
        enabled: true
      token_validation:
        api_key: <%= ENV['TOKEN_VALIDATION_SERVICE_API_KEY'] %>
    decision_review:
      mock: false
      url: <%= ENV['DESCISION_REVIEW_URL'] %>
      s3:
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        uploads_enabled: true
        bucket: <%= ENV['DESCISION_REVIEW_S3_BUCKET'] %>
        region: <%= ENV['S3_REGION'] %>
      v1:
        url: <%= ENV['DESCISION_REVIEW_V1_URL'] %>
    modules_appeals_api:
      slack:
        api_key: <%= ENV['DVP_APPEALS_SLACK_TOKEN'] %>
        appeals_channel_id: "C01RFUU3VU3"
      documentation:
        path_enabled_flag: true
      higher_level_review_pii_expunge_enabled: false
      higher_level_review_updater_enabled: false
      legacy_appeals_enabled: true
      supplemental_claims_enabled: true
      notice_of_disagreement_pii_expunge_enabled: false
      notice_of_disagreement_updater_enabled: false
      supplemental_claim_updater_enabled: false
      reports:
        daily_decision_review:
          enabled: false
          recipients:
            <%= ENV['MODULES_APPEALS_API_REPORTS_DAILY_DECISION_REVIEW_RECIPIENTS'] %>
        weekly_decision_review:
          enabled: false
          recipients:
            <%= ENV['MODULES_APPEALS_API_REPORTS_WEEKLY_DECISION_REVIEW_RECIPIENTS'] %>
        daily_error:
          enabled: false
          recipients:
            <%= ENV['MODULES_APPEALS_API_REPORTS_DAILY_ERROR_RECIPIENTS'] %>
      schema_dir: config/schemas
      status_simulation_enabled: true
    vba_documents:
      report_enabled: true
      monthly_report: false
      enable_status_override: true
      enable_download_endpoint: true
      enable_validate_document_endpoint: true
      v2_upload_endpoint_enabled: true
      location:
        prefix: <%= ENV['VBA_DOCS_LOCATION_PREFIX'] %>
        replacement: <%= ENV['VBA_DOCS_LOCATION_REPLACEMENT'] %>
      s3:
        enabled: true
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        region: <%= ENV['S3_REGION'] %>
        bucket: <%= ENV['VBA_DOCS_S3_BUCKET'] %>
      sns:
        topic_arns:
          - arn:aws-us-gov:sns: <%= ENV['VBA_DOCS_SNS_TOPIC_ARNS_1'] %>
          - arn:aws-us-gov:sns: <%= ENV['VBA_DOCS_SNS_TOPIC_ARNS_2'] %>
        region: <%= ENV['S3_REGION'] %>
      slack:
        enabled: false
        default_alert_url: <%= ENV['SLACK_NOTIFICATION_URL'] %>
        deployment_notification_forms_url: <%= ENV['SLACK_DEPLOYMENT_NOTIFICATION_URL'] %>
        in_flight_notification_hung_time_in_days: 14
        renotification_in_minutes: 1440
        update_stalled_notification_in_minutes: 180
        daily_notification_hour: 7
      documentation:
        path_enabled_flag: true
      v2_enabled: true
      webhooks:
        registration_next_run_minutes: 15
        registration_rescue_in_minutes: 60
    ppms:
      url: <%= ENV['PPMS_URL'] %>
      api_keys:
        Ocp-Apim-Subscription-Key: <%= ENV['PPMS_APIM'] %>
    search:
      access_key: <%= ENV['SEARCH_ACCESS_KEY'] %>
      mock_search:  <%= ENV['SEARCH_MOCK_SEARCH'] %>
      url: <%= ENV['SEARCH_URL'] %>
    search_click_tracking:
      access_key: <%= ENV['SEARCH_ACCESS_KEY'] %>
      affiliate:  <%= ENV['SEARCH_CLICK_TRACKING_AFFILIATE'] %>
      module_code:  <%= ENV['search_click_tracking_module_code'] %>
      mock:  <%= ENV['SEARCH_CLICK_TRACKING_MOCK'] %>
      url:  <%= ENV['SEARCH_CLICK_TRACKING_URL'] %>
    search_typeahead:
      api_key: <%= ENV['SEARCH_TYPEAHEAD_API_KEY'] %>
      name: <%= ENV['SEARCH_TYPEAHEAD_NAME'] %>
      url: <%= ENV['SEARCH_TYPEAHEAD_URL'] %>
    bgs:
      url: <%= ENV['BGS_URL'] %>
      application: <%= ENV['BGS_APPLICATION'] %>
      client_station_id: <%= ENV['BGS_CLIENT_STATION_ID'] %>
      client_username: <%= ENV['BGS_CLIENT_USERNAME'] %>
      external_uid: <%= ENV['BGS_EXTERNAL_UID'] %>
      external_key: <%= ENV['BGS_EXTERNAL_KEY'] %>
      env: <%= ENV['BGS_ENV'] %>
      ssl_verify_mode: <%= ENV['BGS_SSL_VERIFY_MODE'] %>
    vbms:
      url: <%= ENV['VBMS_URL'] %>
      ca_cert: <%= ENV['VBMS_CA_CERT'] %>
      cert: <%= ENV['VBMS_CERT'] %>
      client_keyfile: <%= ENV['VBMS_CLIENT_KEYFILE'] %>
      saml: <%= ENV['VBMS_SAML'] %>
      server_cert: <%= ENV['VBMS_SERVER_CERT'] %>
      environment_directory: <%= ENV['VBMS_ENVIRONMENT_DIRECTORY'] %>
      env: <%= ENV['VBMS_ENV'] %>
    directory:
      url: <%= ENV['DIRECTORY_URL'] %>
      key: <%= ENV['DIRECTORY_SECRET'] %>
      health_server_id: <%= ENV['DIRECTORY_HEALTH_SERVER_ID'] %>
      notification_service_flag: false
    flipper:
      admin_user_emails:
        <%= ENV['FLIPPER_ADMIN_USER_EMAILS'] %>
        # Please don't add any additional emails - if you need to change a toggle on dev, log in as the test user above.
    bip:
      claims:
        url: <%= ENV['BIP_CLAIMS_URL'] %>

    oit_lighthouse2:
      sql52:
        username: <%= ENV['OIT_LIGHTHOUSE2_SQL52_USERNAME'] %>
        password: <%= ENV['OIT_LIGHTHOUSE2_SQL52_PASSWORD'] %>
    va_mobile:
      key_path:  <%= ENV['VA_MOBILE_KEY_PATH'] %>
      ppms_base_url: <%= ENV['VA_MOBILE_PPMS_BASE_URL'] %>
    hqva_mobile:
      key_path: ~
      facilities:
        url: <%= ENV['HQVA_MOBILE_KEY_PATH_FACILITIES'] %>
        ids_path: <%= ENV['HQVA_MOBILE_FACILITIES_IDS_PATH'] %>
      lighthouse:
        key_path: <%= ENV['HQVA_MOBILE_LIGHTHOUSE_KEY_PATH'] %>

    forms:
      url: <%= ENV['FORMS_URL'] %>
      mock: false

    lighthouse:
      api_key: <%= ENV['LIGHTHOUSE_API_KEY'] %>
      facilities:
        url: <%= ENV['LIGHTHOUSE_FACILITIES_URL'] %>
        api_key: <%= ENV['LIGHTHOUSE_FACILITIES_API_KEY'] %>
        veterans_health:
          url: <%= ENV['LIGHTHOUSE_VETERANS_HEALTH_URL'] %>
          fast_tracker:
            api_key: <%= ENV['LIGHTHOUSE_VETERANS_HEALTH_FAST_TRACKER_API_KEY'] %>

    vet_verification:
      key_path: <%= ENV['VET_VERIFICATION_KEY_PATH'] %>
      mock_bgs: true
      mock_bgs_url: <%= ENV['VET_VERIFICATION_MOCK_BGS_URL'] %>
      mock_emis: true
      mock_emis_host: <%= ENV['VET_VERIFICATION_MOCK_EMIS_HOST'] %>

    github_stats:
      username: "github-stats-rake"
      token: <%= ENV['GITHUB_STATS_API_TOKEN'] %>

    vanotify:
      client_url: <%= ENV['VANOTIFY_CLIENT_URL'] %>
      services:
        va_gov:
          api_key: <%= ENV['VANOTIFY_SERVICES_VA_GOV_API_KEY'] %>
          template_id:
            ch31_form_confirmation_email: 0506f60b-8458-468c-87c1-a2c4b132b3f6
            contact_info_change: 732c4672-d765-4446-af04-189754ba6583
            form526_confirmation_email: 8e0998c8-db55-400f-8fee-381d92d57946
            form526_submission_failed_email: 7efb8dfc-f30c-4072-b900-ae393aa1114b
            form686c_confirmation_email: a9d720d5-cce2-4e39-8e00-86f99916d527
            covid_vaccine_registration: 5ade0ab3-7ed6-433e-b1cb-54017f1d75bc
            direct_deposit_edu: a995dfe8-ee82-4f42-9ad4-ae82677683ab
            direct_deposit_comp_pen: 779c9b42-9f53-4459-948e-54e51efc07a0
        lighthouse:
          api_key: <%= ENV['VANOTIFY_SERVICES_LIGHTHOUSE_API_KEY'] %>
          template_id:
            disconnection_template: 292efe5f-25b4-4c2f-9307-92d5e6caa2e4
            connection_template: ae317c1d-b40a-41fb-8957-2ae93a993073

    va_forms:
      drupal_username: <%= ENV['VA_FORMS_DRUPAL_USERNAME'] %>
      drupal_password: <%= ENV['VA_FORMS_DRUPAL_PASSWORD'] %>
      drupal_url: <%= ENV['VA_FORMS_DRUPAL_URL'] %>
      slack:
          enabled: false
          notification_url: <%= ENV['VA_FORMS_SLACK_NOTIFICATION_URL'] %>
          users: <%= ENV['VA_FORMS_SLACK_NOTIFICATION_USERS'] %>

    genisis:
      base_url: <%= ENV['GENISIS_BASE_URL'] %>
      service_path: <%= ENV['GENISIS_SERVICE_PATH'] %>
      user: <%= ENV['GENISIS_USER'] %>
      pass: <%= ENV['GENISIS_PASS'] %>
      form_submission_path: '/formdata'

    covid_vaccine:
      allowed_facilities: ["402", "405", "436", "437", "438", "442", "459", "459GE", "460", "463", "501", "502", "503", "504", "506", "508", "509", "512", "512A5", "512GD", "515", "516", "517", "518", "519", "520", "521", "523", "523A4", "523A5", "526", "528", "528A4", "528A5", "528A6", "528A7", "528A8", "529A4", "531", "534", "537", "538", "539", "540", "541", "542", "544", "546", "548", "549", "550", "552", "553", "554", "556", "557", "558", "561", "561A4", "562", "564", "565", "568", "570", "573", "573A4", "575", "578", "580", "581", "583", "585", "586", "589", "589A4", "589A5", "589A6", "589A7", "590", "593", "595", "596", "596A4", "598", "600", "603", "605", "607", "608", "610", "610A4", "612A4", "612GF", "613", "614", "618", "619", "619A4", "620", "620A4", "621", "623", "626", "626A4", "629", "630", "630A4", "630A5", "631", "632", "635", "636", "636A4", "636A6", "636A8", "637", "640", "640A4", "642", "644", "646", "646A4", "648", "648A4", "649", "650", "652", "653", "654", "655", "656", "657", "657A4", "657A5", "658", "659", "660", "662", "663", "663A4", "664", "666", "667", "668", "671", "671A4", "672", "672B0", "672BZ", "672GA", "672GB", "672GC", "672GE", "672QA", "672QB", "672QC", "673", "674", "674A4", "675", "676", "678", "679", "687", "688", "689", "691", "691A4", "692", "693", "695", "740", "756", "757"]
      enrollment_service:
        job_enabled: false

    vetext:
      url: <%= ENV['VETEXT_URL'] %>
      mock: false
    google_analytics_cvu:
      type: service_account
      project_id: <%= ENV['GOOGLE_ANALYTICS_CVU_PROJECT_ID'] %>
      private_key_id: <%= ENV['GOOGLE_ANALYTICS_CVU_PRIVATE_KEY_ID'] %>
      private_key:  <%= ENV['GOOGLE_ANALYTICS_CVU_PRIVATE_KEY'] %>
      client_email: <%= ENV['GOOGLE_ANALYTICS_CVU_CLIENT_EMAIL'] %>
      client_id: <%= ENV['GOOGLE_ANALYTICS_CVU_CLIENT_ID'] %>
      auth_uri: <%= ENV['GOOGLE_ANALYTICS_CVU_AUTH_URI'] %>
      token_uri: <%= ENV['GOOGLE_ANALYTICS_CVU_TOKEN_URI'] %>
      auth_provider_x509_cert_url: <%= ENV['GOOGLE_ANALYTICS_CVU_AUTH_PROVIDER_X509_CERT_URL'] %>
      client_x509_cert_url: <%= ENV['GOOGLE_ANALYTICS_CVU_CLIENT_X509_CERT_URL'] %>

    github_cvu:
      installation_id: <%= ENV['GITHUB_CVU_INSTALLATION_ID'] %>
      integration_id: <%= ENV['GITHUB_CVU_INTEGRATION_ID'] %>
      private_pem: <%= ENV['GITHUB_CVU_PRIVATE_PEM'] %>

    pg_hero:
      username: <%= ENV['PG_HERO_USERNAME'] %>
      password: <%= ENV['PG_HERO_PASSWORD'] %>

    check_in:
      travel_reimbursement_api:
        auth_url: <%= ENV['CHECK_IN_TRAVEL_REIMBURSEMENT_API_AUTH_URL'] %>
        tenant_id: <%= ENV['CIE_BTSSS_AUTH_TENANT_ID'] %>
        client_id: <%= ENV['CIE_BTSSS_AUTH_CLIENT_ID'] %>
        client_secret: <%= ENV['CIE_BTSSS_AUTH_CLIENT_SECRET'] %>
        scope: <%= ENV['CIE_BTSSS_AUTH_SCOPE'] %>
        claims_url: <%= ENV['CHECK_IN_TRAVEL_REIMBURSEMENT_API_CLAIMS_URL'] %>
        client_number: <%= ENV['CIE_BTSSS_CLAIMS_CLIENT_NUMBER'] %>
        redis_token_expiry: 3540 # 59 minutes
        service_name: <%= ENV['CHECK_IN_TRAVEL_REIMBURSEMENT_API_SERVICE_NAME'] %>
      authentication:
        max_auth_retry_limit: <%= ENV['CIE_MAX_AUTH_RETRY_LIMIT'] %>
        retry_attempt_expiry: 604800 # 7 Days
      chip_api:
        url: <%= ENV['CHIP_API_URL'] %>
        base_path:  <%= ENV['TARGET_ENV'] %>
        host: <%= ENV['CHIP_API_HOST'] %>
        tmp_api_user:  <%= ENV['CHIP_API_HOST'] %>
        tmp_api_id:  <%= ENV['CHIP_API_TMP_API_ID'] %>
        tmp_api_username:  <%= ENV['CHIP_API_TMP_API_USERNAME'] %>
        service_name:  <%= ENV['CHIP_API_TMP_API_SERVICE_NAME'] %>
        mock: false
        key_path:  <%= ENV['CHIP_API_KEY_PATH'] %>
        redis_session_prefix: <%= ENV['CHIP_API_REDIS_SESSION_PREFIX'] %>
        timeout: 30
      chip_api_v2:
        url: <%= ENV['CHIP_API_URL'] %>
        base_path: integration
        host: <%= ENV['CHIP_API_HOST'] %>
        tmp_api_user: <%= ENV['CHIP_TMP_API_USER'] %>
        tmp_api_id: <%= ENV['CHIP_TMP_API_ID'] %>
        tmp_api_username: <%= ENV['CHIP_TMP_API_USERNAME'] %>
        service_name: <%= ENV['CHIP_API_TMP_API_SERVICE_NAME'] %>
        mock: false
        key_path: <%= ENV['CHIP_API_KEY_PATH_V2'] %>
        redis_session_prefix: <%= ENV['CHIP_API_REDIS_SESSION_PREFIX_V2'] %>
        timeout: 30
      lorota_v2:
        url: <%= ENV['LOROTA_V2_URL'] %>
        host: <%= ENV['CHIP_API_HOST'] %>
        base_path: int
        api_id: 22t00c6f97
        api_key: <%= ENV['LOROTA_V2_API_KEY'] %>
        service_name: <%= ENV['LOROTA_V2_SERVICE_NAME'] %>
        mock: false
        key_path: <%= ENV['LOROTA_V2_KEY_PATH'] %>
        redis_session_prefix: <%= ENV['LOROTA_V2_REDIS_SESSION_PREFIX'] %>

    lighthouse_health_immunization:
      key_path: <%= ENV['LHI_KEY_PATH'] %>
      access_token_url: <%= ENV['LHI_ACCESS_TOKEN_URL'] %>
      api_url: <%= ENV['LHI_API_URL'] %>

    sidekiq:
      github_organization: "department-of-veterans-affairs"
      github_team: <%= ENV['SIDEKIQ_GITHUB_TEAM'] %>
      github_oauth_key: <%= ENV['SIDEKIQ_GITHUB_OAUTH_SECRET'] %>
      github_oauth_secret: <%= ENV['SIDEKIQ_GITHUB_OAUTH_SECRET'] %>
      github_api_key: <%= ENV['SIDEKIQ_GITHUB_API_KEY'] %>

    coverband:
      github_organization: "department-of-veterans-affairs"
      github_team: <%= ENV['COVERBAND_GITHUB_TEAM'] %>
      github_oauth_key: <%= ENV['COVERBAND_GITHUB_OAUTH_KEY'] %>
      github_oauth_secret: <%= ENV['COVERBAND_GITHUB_OAUTH_SECRET'] %>
      github_api_key: <%= ENV['SIDEKIQ_GITHUB_API_KEY'] %>

    bid:
      awards:
        base_url: <%= ENV['BID_AWARDS_BASE_URL'] %>
        credentials: <%= ENV['BID_AWARDS_AUTH_TOKEN'] %>

    rack:
      cookie_secret: <%= ENV['RACK_COOKIE_SECRET'] %>

    lgy:
      base_url: <%= ENV['LGY_BASE_URL'] %>
      app_id: VAGOVSERVICE
      api_key: <%= ENV['LGY_API_KEY'] %>

    token_validation:
      url:  <%= ENV['TOKEN_VALIDATION_URL'] %>

    dgi:
      jwt:
        public_key_path: <%= ENV['DGI_PUBLIC_KEY_PATH'] %>
        private_key_path: <%= ENV['DGI_PRIVATE_KEY_PATH'] %>
      vets:
        url: <%= ENV['DGI_URL'] %>

    form1095_b:
      s3:
        aws_access_key_id: <%= ENV['S3_UPLOAD_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['S3_UPLOAD_AWS_SECRET_ACCESS_KEY'] %>
        bucket: <%= ENV['FORM1095_B_S3_BUCKET'] %>
        enabled: true
        region: <%= ENV['S3_REGION'] %>

    dhp:
      fitbit:
        client_id: <%= ENV['DHP_FITBIT_CLIENT_ID'] %>
        client_secret: <%= ENV['DHP_FITBIT_CLIENT_SECRET'] %>
        redirect_uri: <%= ENV['DHP_FITBIT_REDIRECT_URI'] %>
        scope:  <%= ENV['DHP_FITBIT_SCOPE'] %>
        code_challenge: <%= ENV['DHP_FITBIT_CODE_CHALLENGE'] %>
        code_verifier: <%= ENV['DHP_FITBIT_CODE_VERIFIER'] %>
      s3:
        aws_access_key_id: <%= ENV['DHP_AWS_ACCESS_KEY_ID'] %>
        aws_secret_access_key: <%= ENV['DHP_AWS_SECRET_ACCESS_KEY'] %>
        region: <%= ENV['DHP_AWS_REGION'] %>
        bucket: <%= ENV['DHP_TOKEN_STORAGE_BUCKET'] %>


