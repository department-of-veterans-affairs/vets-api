openapi: 3.0.0
info:
  version: 1.0.0
  title: VA My Health APIs
  license:
    name: CC0 1.0 Universal
  description: |
    The Department of Veterans Affairs My Health APIs. All paths are relative to https://api.va.gov/my_health.
servers:
  - url: https://api.va.gov/my_health
security:
  - CookieAuth: []
paths:
  /v1/medical_records/allergies:
    get:
      description: List patient allergies
      operationId: list_allergies
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Bundle containing AllergyIntolerance objects. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.allergyIntolerance.html'>Allergies</a>.
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/allergies
  /v1/medical_records/allergies/{id}:
    get:
      description: Get a patient allergy
      operationId: get_allergy
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR AllergyIntolerance. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.allergyIntolerance.html'>Allergies</a>.
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/allergies/{id}
  /v1/medical_records/clinical_notes:
    get:
      description: List patient clinical notes
      operationId: list_clinical_notes
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Bundle containing DocumentReference objects. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.note.html'>Care Summaries and Notes</a>.
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/clinical_notes
  /v1/medical_records/clinical_notes/{id}:
    get:
      description: Get a clinical note
      operationId: get_clinical_note
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR DocumentReference. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.note.html'>Care Summaries and Notes</a>.
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/clinical_notes/{id}
  /v1/medical_records/conditions:
    get:
      description: List patient health conditions
      operationId: list_conditions
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Bundle containing Condition objects. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.condition.html'>Health Conditions</a>.
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/conditions
  /v1/medical_records/conditions/{id}:
    get:
      description: Get a patient health condition
      operationId: get_condition
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Condition. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.condition.html'>Health Conditions</a>.
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/conditions/{id}
  /v1/medical_records/labs_and_tests:
    get:
      description: |
        List patient labs and tests. This API call runs three separate backend calls, then merges the results. It returns results for the Chemistry/Hematology, EKG, Microbiology, Pathology, and Radiology domains.
      operationId: list_labs_and_tests
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Bundle containing DiagnosticReport and DocumentReference objects. The schemas can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.chReport.html'>Chemistry/Hematology</a>, <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.ecg.html'>EKG</a>, <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.labReport.html'>Microbiology and Pathology</a>, <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.imaging.html'>Radiology</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/labs_and_tests
  /v1/medical_records/labs_and_tests/diagrep/{id}:
    get:
      description: |
        Get a patient labs and tests record of type DiagnosticReport. This is for Chemistry/Hematology,
        Microbiology, and Pathology results.
      operationId: get_labs_and_tests_diagrep
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR DiagnosticReport. The schemas can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.chReport.html'>Chemistry/Hematology</a>, <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.labReport.html'>Microbiology and Pathology</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/labs_and_tests/diagrep/{id}
  /v1/medical_records/labs_and_tests/docref/{id}:
    get:
      description: |
        Get a patient labs and tests record of type DocumentReference. This is for EKG and Radiolody results.
      operationId: get_labs_and_tests_docref
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR DocumentReference. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.ecg.html'>EKG</a>, <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.imaging.html'>Radiology</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/labs_and_tests/docref/{id}
  /v1/medical_records/vaccines:
    get:
      description: List patient vaccines
      operationId: list_vaccines
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Bundle containing Immunization objects. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.immunization.html'>Immunization</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/vaccines
  /v1/medical_records/vaccines/{id}:
    get:
      description: Get a patient vaccine
      operationId: get_vaccine
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Immunization. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.immunization.html'>Immunization</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/vaccines/{id}
  /v1/medical_records/vitals:
    get:
      description: List patient vital records
      operationId: list_vitals
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Bundle containing Observation objects. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.vitals.html'>Vitals</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/vitals
  /v1/medical_records/vitals/{id}:
    get:
      description: Get a patient vital record
      operationId: get_vaccine
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                description: |
                  FHIR Observation. The schema can be found at <a href='https://department-of-veterans-affairs.github.io/mhv-fhir-phr-mapping/StructureDefinition-VA.MHV.PHR.vitals.html'>Vitals</a>
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Forbidden
      summary: /v1/medical_records/vitals/{id}
  /v1/messaging/folders:
    get:
      description: List available secure messaging folders
      operationId: get_folders
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessagingFolders'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/folders
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - name: requires_oh_messages
          in: query
          description: Count of folder messages includes Oracle Health messages if set to "1"
          required: false
          schema:
            type: string
            enum:
              - '0'
              - '1'
  /v1/messaging/folders/{id}:
    get:
      description: Get a secure messaging folder
      operationId: get_folder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessagingFolder'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/folders/{id}
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - name: requires_oh_messages
          in: query
          description: Count of folder messages includes Oracle Health messages if set to "1"
          required: false
          schema:
            type: string
            enum:
              - '0'
              - '1'
    put:
      description: Rename an existing folder
      operationId: post_rename_folder
      requestBody:
        content:
          application/json:
            schema:
              example:
                name: New Name for Folder
              type: object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessagingFolder'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/folders/{id}
  /v1/messaging/folders/{id}/messages:
    get:
      description: |
        List messages in a secure messaging folder.

        When listing messages, the response for each message will include most but not all of the message attributes.
        Specifically, the message body and attachment information is not included. Those attributes can be obtained by
        getting the specific message resource.
      operationId: get_folder_messages
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageList'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/folders/{id}/messages
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/folders/{id}/threads:
    get:
      description: List threads in a secure messaging folder.
      operationId: get_folder_threads
      parameters:
        - description: The id of the folder that threads are being retrieved from
          in: path
          name: folderId
          required: true
          schema:
            type: string
        - description: The size of the pagination you want
          in: query
          name: pageSize,
          required: true
          schema:
            type: string
        - description: The page number to get based on your page size
          in: query
          name: pageNumber,
          required: true
          schema:
            type: string
        - description: The field to sort the results by
          in: query
          name: sortField,
          required: true
          schema:
            type: string
            enum:
              - SENDER_NAME
              - RECIPIENT_NAME
              - SENT_DATE
              - DRAFT_DATE
        - description: The order to sort the results by
          in: query
          name: sortOrder,
          required: true
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: requires_oh_messages
          in: query
          description: Includes Oracle Health threads if set to "1"
          required: false
          schema:
            type: string
            enum:
              - '0'
              - '1'
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageThreadList'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/folders/{id}/threads
  /v1/messaging/folders/{id}/search:
    post:
      description: |
        Search messages in a secure messaging folder. If multiple search criteria are specified, each returned search
        result will match ALL criteria. Pagination is supported and is handled by the upstream MHV server.

        When listing messages, the response for each message will include most but not all of the message attributes.
        Specifically, the message body and attachment information is not included. Those attributes can be obtained by
        getting the specific message resource.
      operationId: search_folder
      parameters:
        - description: The page of results to be returned (passed through to MHV API)
          in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
        - description: The number of results per page (passed through to MHV API)
          in: query
          name: per_page,
          required: false
          schema:
            type: integer
            default: 250
        - name: requires_oh_messages
          in: query
          description: Includes Oracle Health messages in search results if set to "1"
          required: false
          schema:
            type: string
            enum:
              - '0'
              - '1'
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecureMessageSearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageSearch'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/folders/{id}/search
  /v1/messaging/message_drafts:
    post:
      description: Save a new draft message
      operationId: post_create_message_draft
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecureMessageNewMessageRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageNewMessageRequest'
          description: Created
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/message_drafts
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/message_drafts/{id}:
    put:
      description: Update an existing draft message
      operationId: post_create_message_draft
      parameters:
        - description: The id of the draft that is to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              example:
                body: the updated message
              type: object
        required: true
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/message_drafts/{id}
  /v1/messaging/message_drafts/{reply_id}/replydraft:
    post:
      description: Save a new draft message as a reply to an existing message
      operationId: post_create_message_draft_reply
      parameters:
        - description: The id of the message that will be replied to
          in: path
          name: reply_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecureMessageNewMessageRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageNewMessageRequest'
          description: Created
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/message_drafts/{reply_id}/replydraft
  /v1/messaging/message_drafts/{reply_id}/replydraft/{draft_id}:
    post:
      description: Edit a draft message that was a reply to an existing message
      operationId: post_create_message_draft_reply
      parameters:
        - description: The id of the message that will be replied to
          in: path
          name: reply_id
          required: true
          schema:
            type: string
        - description: The id of the draft that is to be updated
          in: path
          name: draft_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              example:
                body: the updated message
              type: object
        required: true
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/message_drafts/{reply_id}/replydraft/{draft_id}
  /v1/messaging/messages:
    post:
      description: Send a new secure message
      operationId: post_create_message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecureMessageNewMessageRequest'
          multipart/form-data:
            schema:
              properties:
                message:
                  description: Stringified JSON with same parameters as if this was an application/json request (e.g. '{"category":"OTHER","recipient_id":1763526,"body":"test message"}')
                  type: string
                uploads[]:
                  description: |
                    One or more message attachments.

                    <strong>NOTES:</strong>
                    <ul>
                    <li>A single message may have a maximum of 4 attachments.</li>
                    <li>A single attachment cannot exceed 3 MB</li>
                    <li>All attachments combined cannot exceed 6 MB</li>
                    <li>Supported file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.</li>
                    </ul>
                  items:
                    format: binary
                    type: string
                  type: array
              type: object
        description: |
          New message body.

          <strong>NOTES:</strong>
          <ul>
            <li>If a subject isn't included, default subject will be "{{Category}} Inquiry" (e.g. Medication Inquiry)</li>
            <li>Messages can only be replied to for 120 days.  After that, the message is considered "expired"</li>
            <li>If sending a draft, include the draft's ID in the request body as `draft_id`. Draft will be deleted once sent. Any fields included in request body will overwrite original draft contents.
            <li>If including file attachments, this request must be sent as <i>multipart/form-data</i></li>
            <li>
              File attachment restrictions (as imposed by MHV):
              <ul>
                <li>User may attach up to 4 files</li>
                <li>Accepted formats: doc, docx, jpg, pdf, png, rtf, txt, xls, xlsx</li>
                <li>Single attachment cannot exceed 3 MB</li>
                <li>Total attachment cannot exceed 6 MB</li>
              </ul>
            </li>
          </ul>
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageDetail'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/messages/categories:
    get:
      description: List available message categories
      operationId: get_categories
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageCategories'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/categories
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/messages/signature:
    get:
      description: Gets user message signature preferences
      operationId: get_signature
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageSignature'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/signature
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/messages/{id}:
    delete:
      description: Moves a secure message to the "Deleted" folder
      operationId: delete_message
      parameters:
        - description: The id of the message that is to be deleted
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: The message was deleted successfully
        '400':
          content:
            application/json:
              example:
                errors:
                  - code: SM114
                    detail: Unable to move message
                    status: '400'
                    title: Operation failed
              schema:
                $ref: '#/components/schemas/Errors'
          description: Bad Request
        '401':
          content:
            application/json:
              example:
                errors:
                  - code: '401'
                    detail: IAM user session is inactive
                    status: '401'
                    title: Not authorized
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              example:
                errors:
                  - code: '403'
                    detail: You do not have access to messaging
                    status: '403'
                    title: Forbidden
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/{id}
    get:
      description: |
        Get a secure message <strong>and mark the message as read</strong>.

        <strong>NOTES:</strong>
        <ul>
          <li>Unlike listing messages in a folder, the message resource returned from this operation will include
        the message body and attachment information.</li>
          <li>This GET operation is not fully idempotent and will set readReceipt field as 'READ'</li>
          <li>If message has an attachment included, attachmentSize is displayed in bytes</li>
        </ul>
      operationId: get_message
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageDetail'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/{id}
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
    patch:
      description: Moves a secure message to a specified folder
      operationId: post_move_message
      parameters:
        - description: The id of the message that is to be moved
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id of the folder that the message is to be moved to
          in: query
          name: folder_id,
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: The message was moved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/{id}/move
  /v1/messaging/messages/{id}/attachments/{attachment_id}:
    get:
      description: |
        Get a secure message attachment content as a direct binary download. Secure messaging supports the following file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.
      operationId: get_attachment
      parameters:
        - description: ID of the message that we are retrieving attachments of
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              description: |
                This header will have the value of "attachment", and a "filename" parameter containing the original filename of the attached content.
              schema:
                type: string
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/{id}/attachments/{attachment_id}
  /v1/messaging/messages/{id}/reply:
    post:
      description: |
        Send reply to a secure message

        <strong>NOTE:</strong> If including file attachments, this request must be sent as <i>multipart/form-data</i>

        File attachment restrictions (as imposed by MHV):
        <ul>
          <li>User may attach up to 4 files</li>
          <li>Accepted formats: doc, docx, jpg, pdf, png, rtf, txt, xls, xlsx</li>
          <li>Single attachment cannot exceed 3 MB</li>
          <li>Total attachment cannot exceed 6 MB</li>
        </ul>
      operationId: post_create_message_reply
      parameters:
        - description: ID of the message that is being replied to
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecureMessageReplyRequest'
          multipart/form-data:
            schema:
              properties:
                message:
                  description: Stringified JSON with same parameters as if this was an application/json request (e.g. '{"body":"test body with attachment"}')
                  type: string
                uploads[]:
                  description: |
                    One or more message attachments.

                    <strong>NOTES:</strong>
                    <ul>
                    <li>A single message may have a maximum of 4 attachments.</li>
                    <li>A single attachment cannot exceed 3 MB</li>
                    <li>All attachments combined cannot exceed 6 MB</li>
                    <li>Supported file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.</li>
                    </ul>
                  items:
                    format: binary
                    type: string
                  type: array
              type: object
        description: Reply message body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessageDetail'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/{id}/reply
  /v1/messaging/messages/{id}/thread:
    get:
      description: |
        Gets a list of message summaries that are related to the message of the passed id.
      operationId: get_messages_for_thread
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/SecureMessageListInThread'
                  - $ref: '#/components/schemas/SecureMessageListInThreadWithFullBody'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/messages/{id}/thread
      parameters:
        - name: full_body
          in: query
          description: Include the full body of the messages and attachments meta in the response
          required: false
          schema:
            type: boolean
        - name: requires_oh_messages
          in: query
          description: Includes Oracle Health messages if set to "1"
          required: false
          schema:
            type: string
            enum:
              - '0'
              - '1'
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/recipients:
    get:
      description: List available recipients to which messages may be sent
      operationId: get_triage_teams
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessagingRecipients'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/recipients
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/allrecipients:
    get:
      description: List available recipients to which messages may be sent with advanced attributes
      operationId: get_all_triage_teams
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecureMessagingAllRecipients'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/allrecipients
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
  /v1/messaging/threads/{id}/move:
    patch:
      description: Moves all received messages in a secure message thread to a specified folder. Sent messages, draft messages, and deleted messages will not be moved.
      operationId: post_move_thread
      parameters:
        - description: The id of the thread that is to be moved
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id of the folder that the message is to be moved to
          in: query
          name: folder_id,
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: The message thread was moved successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/messaging/threads/{id}/move
  /v1/prescriptions:
    get:
      description: List medications.
      operationId: get_prescriptions
      parameters:
        - description: One refill status to filter on
          in: query
          name: refill_status
          required: false
          schema:
            type: string
        - description: The page number to get based on your page size
          in: query
          name: page
          required: false
          schema:
            type: string
        - description: The size of the pagination you want
          in: query
          name: per_page
          required: false
          schema:
            type: string
        - description: The attribute to sort on, negated for descending
          in: query
          name: sort
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionList'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/prescriptions
  /v1/prescriptions/{id}:
    get:
      description: Get prescription.
      operationId: get_prescription
      parameters:
        - description: prescription id
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/prescriptions/{id}
  /v1/prescriptions/{id}/refill:
    patch:
      description: Refill the prescription
      operationId: patch_refill_prescription
      parameters:
        - description: The id of the prescription
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/prescriptions/{id}/refill
  /v1/prescriptions/list_refillable_prescriptions:
    get:
      description: List refillable medications.
      operationId: get_list_refillable_prescriptions
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrescriptionList'
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/prescriptions/list_refillable_prescriptions
  /v1/prescriptions/refill_prescriptions:
    patch:
      description: Refill the prescriptions
      operationId: patch_refill_prescription
      parameters:
        - description: Array of the prescription ids
          in: query
          name: ids
          required: true
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: Success
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/prescriptions/refill_prescriptions
  /v1/prescriptions/get_prescription_image/{cmopNdcNumber}:
    get:
      description: Get prescription image.
      operationId: get_prescription_image
      parameters:
        - description: cmopNdcNumber
          in: path
          name: cmopNdcNumber
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: base64-encoded file contents
                    type: string
                    format: byte
          description: OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Not authorized for access to secure messages
      summary: /v1/prescriptions/list_refillable_prescriptions
components:
  securitySchemes:
    CookieAuth:
      type: apiKey
      name: api_session
      in: cookie
      description: An authenticated session is established using the Sessions Controller to initiate federated authentication with an external credential provider, after which an API session token is established in the api_session cookie.
  parameters:
    InflectionHeader:
      in: header
      name: X-Key-Inflection
      required: false
      schema:
        type: string
        enum:
          - camel
          - snake
      description: Instructs the API to return camelCase keys rather than snake_case
    RequiresOHMessages:
      name: requires_oh_messages
      in: query
      required: false
      schema:
        type: string
        enum:
          - '0'
          - '1'
  schemas:
    Error:
      type: object
      required:
        - title
        - detail
        - code
        - status
      properties:
        title:
          type: string
        detail:
          type: string
        code:
          type: string
        status:
          type: string
        source:
          type: string
        meta:
          type: object
          required:
            - messages
          properties:
            messages:
              type: array
              items:
                type: object
                required:
                  - key
                  - severity
                  - text
                properties:
                  key:
                    type: string
                  severity:
                    type: string
                  text:
                    type: string
    Errors:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    SecureMessagingFolder:
      type: object
      required:
        - id
        - type
        - attributes
        - links
      properties:
        id:
          type: string
          example: '0'
        type:
          type: string
          example: folders
        attributes:
          type: object
          required:
            - folderId
            - name
            - count
            - unreadCount
            - systemFolder
          properties:
            folderId:
              type: integer
              example: 0
              description: |
                Unique folder identifier. Note that folder IDs may be negative integers.
            name:
              type: string
              example: Inbox
              description: Folder name.
            count:
              type: integer
              example: 15
              description: Number of total messages (read + unread) in folder.
            unreadCount:
              type: integer
              example: 2
              descripton: Number of unread messages in folder.
            systemFolder:
              type: boolean
              example: true
              description: |
                Indicates whether the folder is one of the fixed, system-generated folders, or a custom user-created folder.
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders/0
    SecureMessagingFolders:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SecureMessagingFolder'
        links:
          type: object
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders?page=2&per_page=10
            first:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders?page=1&per_page=10
            prev:
              type: string
              nullable: true
              example: https://api.va.gov/my_health/v1/messaging/folders?page=1&per_page=10
            next:
              type: string
              nullable: true
              example: https://api.va.gov/my_health/v1/messaging/folders?page=3&per_page=10
            last:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders?page=3&per_page=10
        meta:
          type: object
          required:
            - pagination
          properties:
            pagination:
              type: object
              required:
                - currentPage
                - perPage
                - totalPages
                - totalEntries
              properties:
                currentPage:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 10
                totalPages:
                  type: integer
                  example: 2
                totalEntries:
                  type: integer
                  example: 15
    SecureMessageSummary:
      type: object
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          type: string
          example: messages
        id:
          type: string
          example: '123789'
        attributes:
          type: object
          required:
            - messageId
            - category
            - subject
            - body
            - attachment
            - sentDate
            - senderId
            - senderName
            - recipientId
            - recipientName
            - readReceipt
          properties:
            messageId:
              type: integer
              example: 123789
            category:
              type: string
              enum:
                - OTHER
                - COVID
                - APPOINTMENTS
                - MEDICATIONS
                - TEST_RESULTS
                - EDUCATION
              example: MEDICATIONS
            subject:
              type: string
              example: Medication Inquiry
            body:
              type: string
              nullable: true
              example: 2
            attachment:
              type: boolean
              example: false
            sentDate:
              type: string
              example: '2017-09-01T16:09:56.000Z'
            senderId:
              type: integer
              example: 541200
            senderName:
              type: string
              example: DOE, JANE
            recipientId:
              type: integer
              example: 399955
            recipientName:
              type: string
              example: ROE, RICHARD
            readReceipt:
              type: string
              nullable: true
              enum:
                - READ
                - null
            triageGroupName:
              type: string
              nullable: true
              example: Triage_Group_5
            proxySenderName:
              type: string
              nullable: true
              example: SMITH, JOHN
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/messages/123789
    SecureMessageList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SecureMessageSummary'
        links:
          type: object
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders/0/messages?page=2&per_page=10
            first:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders/0/messages?page=1&per_page=10
            prev:
              type: string
              nullable: true
              example: https://api.va.gov/my_health/v1/messaging/folders/0/messages?page=1&per_page=10
            next:
              type: string
              nullable: true
              example: https://api.va.gov/my_health/v1/messaging/folders/0/messages?page=3&per_page=10
            last:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/folders/0/messages?page=3&per_page=10
        meta:
          type: object
          required:
            - sort
            - pagination
          properties:
            sort:
              type: object
              required: sentDate
              properties:
                sentDate:
                  type: string
                  enum:
                    - DESC
                    - ASC
            pagination:
              type: object
              required:
                - currentPage
                - perPage
                - totalPages
                - totalEntries
              properties:
                currentPage:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 10
                totalPages:
                  type: integer
                  example: 2
                totalEntries:
                  type: integer
                  example: 15
    SecureMessageThread:
      type: object
      required:
        - threadId
        - folderId
        - messageId
        - threadPageSize
        - messageCount
        - category
        - subject
        - triageGroupName
        - sentDate
        - draftDate
        - senderId
        - senderName
        - recipientName
        - recipientId
        - proxySenderName
        - hasAttachment
        - unsentDrafts
        - unreadMessages
      properties:
        threadId:
          type: integer
          example: 1234567
        folderId:
          type: integer
          example: 0
        messageId:
          type: integer
          example: 1234567
        threadPageSize:
          type: integer
          example: 123
        messageCount:
          type: integer
          example: 123
        category:
          type: string
          enum:
            - OTHERS
            - COVID
            - APPOINTMENTS
            - MEDICATIONS
            - TEST_RESULT
            - EDUCATION
          example: MEDICATIONS
        subject:
          type: string
          example: Medication Inquiry
        triageGroupName:
          type: string
          nullable: true
          example: Triage_Group_5
        sentDate:
          type: string
          nullable: true
          example: '2017-09-01T16:09:56.000Z'
        draftDate:
          type: string
          nullable: true
          example: '2017-09-01T16:09:56.000Z'
        senderId:
          type: integer
          example: 541200
        senderName:
          type: string
          example: DOE, JANE
        recipientId:
          type: integer
          example: 399955
        recipientName:
          type: string
          example: ROE, RICHARD
        proxySenderName:
          type: string
          nullable: true
          example: SMITH, JOHN
        hasAttachment:
          type: boolean
          example: false
        unsentDrafts:
          type: boolean
          example: false
        unreadMessages:
          type: boolean
          example: true
    SecureMessageThreadList:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SecureMessageThread'
    SecureMessageSearchRequest:
      type: object
      properties:
        message_id:
          type: integer
          example: 1112233
        sender:
          type: string
          example: Alice
        recipient:
          type: string
          example: Bob
        category:
          type: string
          example: COVID
        subject:
          type: string
          example: My Test Results
        from_date:
          type: string
          description: Search for messages sent after this date
          example: '2022-01-01'
        to_date:
          type: string
          description: Search for messages sent before this date
          example: '2022-12-31'
        exact_match:
          type: boolean
          description: |
            If true, search exact strings for subject, sender, and recipient fields; otherwise search for the string as a
            substring within those fields
    SecureMessageSearch:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SecureMessageSummary'
    SecureMessageNewMessageRequest:
      type: object
      required:
        - recipient_id
        - category
        - body
      properties:
        recipient_id:
          type: integer
          description: |
            The message recipient. This must be a valid recipient id that is assigned to the user. The list of valid
            recipients for a user can be obtained from the <pre>/v1/messaging/recipients</pre> endpoint.
          example: 1763526
        category:
          type: string
          description: |
            Message category. This must be one of the values returned by the 
            <pre>/v1/messaging/messages/categories</pre> endpoint.
          example: OTHER
        body:
          type: string
          example: What is the proper dosage and how long should I take this medication?
        subject:
          type: string
          example: Question about my medication
        draft_id:
          type: integer
          description: |
            Specifies draft message ID to send.  Draft message is deleted once sent. Note that the recipient_id, category, body, and subject included with this post will overwrite any of original values of the draft.
    SecureMessageAttachment:
      type: object
      required:
        - id
        - type
        - attributes
        - links
      properties:
        id:
          type: string
          example: 7775443
        type:
          type: string
          example: attachments
        attributes:
          type: object
          required:
            - name
            - messageId
            - attachmentSize
          properties:
            name:
              type: string
              example: bb_report.pdf
            messageId:
              type: integer
              example: 123789
            attachmentSize:
              type: integer
              example: 225457
        links:
          type: object
          required:
            - download
          properties:
            download:
              type: string
              format: url
              example: https://api.va.gov/my_health/v1/messaging/messages/123789/attachments/7775443
    SecureMessageDetail:
      type: object
      required:
        - type
        - id
        - attributes
        - relationships
        - links
      properties:
        type:
          type: string
          example: messages
        id:
          type: string
          example: '123789'
        attributes:
          type: object
          required:
            - messageId
            - category
            - subject
            - body
            - attachment
            - sentDate
            - senderId
            - senderName
            - recipientId
            - recipientName
            - readReceipt
          properties:
            messageId:
              type: integer
              example: 123789
            category:
              type: string
              enum:
                - OTHER
                - COVID
                - APPOINTMENTS
                - MEDICATIONS
                - TEST_RESULTS
                - EDUCATION
              example: MEDICATIONS
            subject:
              type: string
              example: Medication Inquiry
            body:
              type: string
              example: "Your prescription is ready for refill\r\nThanks,\r\n,Dr. Doe"
            attachment:
              type: boolean
              example: true
            sentDate:
              type: string
              format: datetime
              example: '2017-09-01T16:09:56.000Z'
            senderId:
              type: integer
              example: 541200
            senderName:
              type: string
              example: DOE, JANE
            recipientId:
              type: integer
              example: 399955
            recipientName:
              type: string
              example: ROE, RICHARD
            readReceipt:
              type: string
              nullable: true
              enum:
                - READ
                - null
            triageGroupName:
              type: string
              nullable: true
              example: Triage_Group_5
            proxySenderName:
              type: string
              nullable: true
              example: SMITH, JOHN
        relationships:
          type: object
          required:
            - attachments
          properties:
            attachments:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                      - type
                    properties:
                      id:
                        type: string
                        example: '7775443'
                      type:
                        type: string
                        example: attachments
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/messages/123789
        included:
          type: array
          items:
            $ref: '#/components/schemas/SecureMessageAttachment'
    SecureMessageCategories:
      properties:
        data:
          type: object
          required:
            - id
            - type
            - attributes
          properties:
            id:
              type: string
              example: '0'
            type:
              type: string
              example: categories
            attributes:
              type: object
              required:
                - messageCategoryType
              properties:
                messageCategoryType:
                  type: array
                  items:
                    type: string
                  example:
                    - OTHER
                    - COVID
                    - APPOINTMENTS
                    - MEDICATIONS
                    - TEST_RESULTS
                    - EDUCATION
    SecureMessageSignature:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - signatureName
            - includeSignature
            - signatureTitle
          properties:
            signatureName:
              type: string
              example: My Signature Name
            includeSignature:
              type: boolean
            signatureTitle:
              type: string
              example: My Signature Title
        errors:
          type: object
          example: {}
        metadata:
          type: object
          example: {}
    SecureMessageReplyRequest:
      type: object
      required:
        - recipient_id
        - category
        - subject
        - body
      properties:
        recipient_id:
          type: integer
          description: null
          example: 1112233
        category:
          type: string
          example: TEST
        subject:
          type: string
          example: My Test Results
          maxLength: 50
        body:
          type: string
          example: Dear provider, please clarify my test results. Thank you.
        draft_id:
          type: integer
          description: |
            Specifies draft message ID to send.  Draft message is deleted once sent. Note that body included with this post will overwrite any of original values of the draft.
    SecureMessageListInThread:
      type: object
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          type: string
          example: messages
        id:
          type: string
          example: '123789'
        attributes:
          type: object
          required:
            - messageId
            - category
            - subject
            - body
            - attachment
            - sentDate
            - senderId
            - senderName
            - recipientId
            - recipientName
            - readReceipt
            - threadId
            - folderId
            - messageBody
            - draftDate
            - toDate
            - hasAttachments
          properties:
            messageId:
              type: integer
              example: 123789
            category:
              type: string
              enum:
                - OTHER
                - COVID
                - APPOINTMENTS
                - MEDICATIONS
                - TEST_RESULTS
                - EDUCATION
              example: MEDICATIONS
            subject:
              type: string
              example: Medication Inquiry
            body:
              type: string
              nullable: true
              example: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
            attachment:
              type: boolean
              example: false
            sentDate:
              type: string
              example: '2017-09-01T16:09:56.000Z'
            senderId:
              type: integer
              example: 541200
            senderName:
              type: string
              example: DOE, JANE
            recipientId:
              type: integer
              example: 399955
            recipientName:
              type: string
              example: ROE, RICHARD
            readReceipt:
              type: string
              nullable: true
              enum:
                - READ
                - null
            triageGroupName:
              type: string
              nullable: true
              example: Triage_Group_5
            proxySenderName:
              type: string
              nullable: true
              example: SMITH, JOHN
            threadId:
              type: integer
              example: 2636122
            folderId:
              type: integer
              example: 0
            messageBody:
              type: string
              nullable: true
              example: test
            draftDate:
              type: string
              nullable: true
              example: '2023-01-30T14:15:28.000Z'
            toDate:
              type: string
              nullable: true
              example: '2023-01-30T14:15:28.000Z'
            hasAttachments:
              type: boolean
              example: false
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/messages/123789/thread
    SecureMessageListInThreadWithFullBody:
      type: object
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          type: string
          example: messages
        id:
          type: string
          example: '123789'
        attributes:
          type: object
          required:
            - messageId
            - category
            - subject
            - body
            - attachment
            - sentDate
            - senderId
            - senderName
            - recipientId
            - recipientName
            - readReceipt
            - threadId
            - folderId
            - messageBody
            - draftDate
            - toDate
            - hasAttachments
            - attachments
          properties:
            messageId:
              type: integer
              example: 123789
            category:
              type: string
              enum:
                - OTHER
                - COVID
                - APPOINTMENTS
                - MEDICATIONS
                - TEST_RESULTS
                - EDUCATION
              example: MEDICATIONS
            subject:
              type: string
              example: Medication Inquiry
            body:
              type: string
              nullable: true
              example: Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
            attachment:
              type: boolean
              example: false
            sentDate:
              type: string
              example: '2017-09-01T16:09:56.000Z'
            senderId:
              type: integer
              example: 541200
            senderName:
              type: string
              example: DOE, JANE
            recipientId:
              type: integer
              example: 399955
            recipientName:
              type: string
              example: ROE, RICHARD
            readReceipt:
              type: string
              nullable: true
              enum:
                - READ
                - null
            triageGroupName:
              type: string
              nullable: true
              example: Triage_Group_5
            proxySenderName:
              type: string
              nullable: true
              example: SMITH, JOHN
            threadId:
              type: integer
              example: 2636122
            folderId:
              type: integer
              example: 0
            messageBody:
              type: string
              nullable: true
              example: test
            draftDate:
              type: string
              nullable: true
              example: '2023-01-30T14:15:28.000Z'
            toDate:
              type: string
              nullable: true
              example: '2023-01-30T14:15:28.000Z'
            hasAttachments:
              type: boolean
              example: false
            attachments:
              type: array
              items:
                type: object
                required:
                  - id
                  - message_id
                  - name
                  - attachmentSize
                  - download
                properties:
                  id:
                    type: integer
                    example: 123789
                  message_id:
                    type: integer
                    example: 123788
                  name:
                    type: string
                    example: sm_file1.jpg
                  attachmentSize:
                    type: integer
                    example: 210000
                  download:
                    type: string
                    example: https://api.va.gov/my_health/v1/messaging/messages/3204755/attachments/3204753
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/messaging/messages/123789/thread
    SecureMessagingRecipients:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - type
              - attributes
            properties:
              id:
                type: string
                example: 855912
              type:
                type: string
                example: triage_teams
              attributes:
                type: object
                required:
                  - triageTeamId
                  - name
                  - relationType
                properties:
                  triageTeamId:
                    type: integer
                    example: 855912
                  name:
                    type: string
                    example: RADIOLOGY_TRIAGE_GROUP_1
                  relationType:
                    type: string
                    enum:
                      - PATIENT
                    example: PATIENT
        meta:
          type: object
          required:
            - sort
          properties:
            sort:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  enum:
                    - ASC
                    - DESC
                  example: ASC
    SecureMessagingAllRecipients:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - id
              - type
              - attributes
            properties:
              id:
                type: string
                example: 855912
              type:
                type: string
                example: al_triage_teams
              attributes:
                type: object
                required:
                  - triageTeamId
                  - name
                  - stationNumber
                  - blockedStatus
                  - preferredTeam
                  - relationshipType
                properties:
                  triageTeamId:
                    type: integer
                    example: 855912
                  name:
                    type: string
                    example: RADIOLOGY_TRIAGE_GROUP_1
                  stationNumber:
                    type: string
                    example: 989
                  blockedStatus:
                    type: boolean
                    example: false
                  preferredTeam:
                    type: boolean
                    example: true
                  relationshipType:
                    type: string
                    enum:
                      - PATIENT
                    example: PATIENT
        meta:
          type: object
          required:
            - sort
            - associatedTriageGroups
            - associatedBlockedTriageGroups
          properties:
            sort:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  enum:
                    - ASC
                    - DESC
                  example: ASC
            associatedTriageGroups:
              type: integer
              example: 38
            associatedBlockedTriageGroups:
              type: integer
              example: 1
    PrescriptionTrackingItem:
      type: object
      properties:
        carrier:
          type: string
        completeDateTime:
          type: string
          format: datetime
          example: '2023-07-24T15:48:49.000Z'
        dateLoaded:
          type: string
          format: datetime
          example: '2023-07-24T15:48:49.000Z'
        dialDivisionPhone:
          type: string
        divisionPhone:
          type: string
        id:
          type: integer
        isLocalTracking:
          type: boolean
        ndc:
          type: string
        othersInSamePackage:
          type: boolean
        rxNumber:
          type: integer
        stationNumber:
          type: integer
        trackingNumber:
          type: string
        viewImageDisplayed:
          type: boolean
      example:
        carrier: UPS
        completeDateTime: '2023-03-28T04:39:11-04:00'
        dateLoaded: '2023-06-21T13:05:19-04:00'
        dialDivisionPhone: '3082719803'
        divisionPhone: (308)271-9803
        id: 3974
        isLocalTracking: false
        ndc: '00113002239'
        othersInSamePackage: false
        rxNumber: 2719799
        stationNumber: 994
        trackingNumber: '772980271979930000002254'
        viewImageDisplayed: true
    RxRfRecord:
      type: object
      properties:
        refillStatus:
          type: string
        refillSubmitDate:
          type: string
          format: date-time
        refillDate:
          type: string
          format: date-time
        refillRemaining:
          type: integer
        facilityName:
          type: string
        facilityApiName:
          type: string
        isRefillable:
          type: boolean
        isTrackable:
          type: boolean
        prescriptionId:
          type: integer
        sig:
          type: string
        orderedDate:
          type: string
          format: date-time
        quantity:
          type: integer
        expirationDate:
          type: string
          format: date-time
        prescriptionNumber:
          type: string
        prescriptionName:
          type: string
        dispensedDate:
          type: string
          format: date-time
        stationNumber:
          type: string
        inCernerTransition:
          type: boolean
        notRefillableDisplayMessage:
          type: string
        cmopDivisionPhone:
          type: string
        cmopNdcNumber:
          type: string
        id:
          type: integer
        userId:
          type: integer
        providerFirstName:
          type: string
        providerLastName:
          type: string
        remarks:
          type: string
        divisionName:
          type: string
        modifiedDate:
          type: string
          format: date-time
        institutionId:
          type: string
        dialCmopDivisionPhone:
          type: string
        dispStatus:
          type: string
        ndc:
          type: string
        reason:
          type: string
        prescriptionNumberIndex:
          type: string
        prescriptionSource:
          type: string
        disclaimer:
          type: string
        indicationForUse:
          type: string
        indicationForUseFlag:
          type: string
        category:
          type: string
        orderableItem:
          type: string
        shape:
          type: string
        color:
          type: string
        frontImprint:
          type: string
        backImprint:
          type: string
        rxRfRecords:
          type: 'null'
        dataSourceSystem:
          type: string
        trackingList:
          type: array
          items:
            type: object
        tracking:
          type: boolean
      example:
        - refillStatus: suspended
          refillSubmitDate: Wed, 20 Mar 2024 13:43:06 EDT
          refillDate: Mon, 11 Mar 2024 00:00:00 EDT
          refillRemaining: 4
          facilityName: SLC10 TEST LAB
          facilityApiName: null
          isRefillable: false
          isTrackable: false
          prescriptionId: 23301817
          sig: null
          orderedDate: Sun, 31 Mar 2024 00:00:00 EDT
          quantity: null
          expirationDate: null
          prescriptionNumber: '3637019'
          prescriptionName: SALMETEROL 50MCG/BLSTR PO INHL DISKUS 60
          dispensedDate: Mon, 18 Mar 2024 00:00:00 EDT
          stationNumber: '979'
          inCernerTransition: false
          notRefillableDisplayMessage: null
          cmopDivisionPhone: (410)999-7019
          cmopNdcNumber: '00093721410'
          id: 23301817
          userId: 16955936
          providerFirstName: null
          providerLastName: null
          remarks: null
          divisionName: null
          modifiedDate: null
          institutionId: null
          dialCmopDivisionPhone: '4109997019'
          dispStatus: Suspended
          ndc: 00173-0521-00
          reason: null
          prescriptionNumberIndex: RF1
          prescriptionSource: RF
          disclaimer: null
          indicationForUse: null
          indicationForUseFlag: null
          category: Rx Medication
          orderableItem: null
          shape: OVAL
          color: WHITE
          frontImprint: 9,3
          backImprint: 72,14
          dataSourceSystem: VISTA
          trackingList: null
          rxRfRecords: null
          tracking: false
    PrescriptionDetail:
      type: object
      required:
        - type
        - id
        - attributes
        - links
      properties:
        type:
          type: string
          example: prescription_details
        id:
          type: string
          example: '22332759'
        attributes:
          type: object
          required:
            - prescriptionId
            - prescriptionNumber
            - prescriptionName
            - refillStatus
            - refillDate
            - refillRemaining
            - facilityName
            - orderedDate
            - quantity
            - expirationDate
            - stationNumber
            - isRefillable
            - isTrackable
            - inCernerTransition
            - userId
            - dispStatus
            - ndc
            - prescriptionNumberIndex
            - prescriptionSource
            - category
            - trackingList
            - rxRfRecords
            - tracking
          properties:
            prescriptionId:
              type: integer
              example: 22510594
            prescriptionNumber:
              type: string
              example: 3636929A
            prescriptionName:
              type: string
              example: DANAZOL 200MG CAP
            refillStatus:
              type: string
              example: active
            refillSubmitDate:
              type: string
              nullable: true
              format: datetime
              example: '2023-07-24T15:48:49.000Z'
            refillDate:
              type: string
              format: datetime
              example: '2023-08-04T04:00:00.000Z'
            refillRemaining:
              type: integer
              example: 4
            facilityName:
              type: string
              example: DAYT29
            orderedDate:
              type: string
              format: datetime
              example: '2023-08-04T04:00:00.000Z'
            quantity:
              type: integer
              example: 30
            expirationDate:
              type: string
              format: datetime
              example: '2023-08-04T04:00:00.000Z'
            dispensedDate:
              type: string
              nullable: true
              format: datetime
              example: '2023-08-04T04:00:00.000Z'
            stationNumber:
              type: string
              example: '989'
            isRefillable:
              type: boolean
              example: true
            isTrackable:
              type: boolean
              example: false
            cmopNdcNumber:
              type: string
              nullable: true
              example: '00013264681'
            inCernerTransition:
              type: boolean
              example: false
            notRefillableDisplayMessage:
              type: string
              nullable: true
              example: A refill request cannot be submitted at this time.
            sig:
              type: string
              nullable: true
              example: TAKE ONE TABLET BY MOUTH DAILY FOR 30 DAYS
            cmopDivisionPhone:
              type: string
              nullable: true
              example: (178)636-6871
            userId:
              type: integer
              example: 16955936
            providerFirstName:
              type: string
              nullable: true
              example: MOHAMMAD
            providerLastName:
              type: string
              nullable: true
              example: ISLAM
            remarks:
              type: string
              nullable: true
              example: TEST RE
            divisionName:
              type: string
              nullable: true
              example: DAYTON
            modifiedDate:
              type: string
              nullable: true
              format: datetime
              example: '2023-08-04T04:00:00.000Z'
            institutionId:
              type: string
              nullable: true
              example: institutionId
            dialCmopDivisionPhone:
              type: string
              nullable: true
              example: '1786366871'
            dispStatus:
              type: string
              example: Active
            ndc:
              type: string
              nullable: true
              example: 00597-0030-01
            reason:
              type: string
              nullable: true
              example: reason
            prescriptionNumberIndex:
              type: string
              example: RX
            prescriptionSource:
              type: string
              example: RX
            disclaimer:
              type: string
              nullable: true
              example: TEST DISCLAIMER 02222022
            indicationForUse:
              type: string
              nullable: true
              example: indicationForUse
            indicationForUseFlag:
              type: string
              nullable: true
              example: indicationForUseFlag
            category:
              type: string
              example: Rx Medication
            trackingList:
              type: array
              items:
                $ref: '#/components/schemas/PrescriptionTrackingItem'
            rxRfRecords:
              type: array
              items:
                $ref: '#/components/schemas/RxRfRecord'
            tracking:
              type: boolean
              example: false
            color:
              type: string
              nullable: true
              example: WHITE
            shape:
              type: string
              nullable: true
              example: OVAL
            frontImprint:
              type: string
              nullable: true
              example: 9,3
            backImprint:
              type: string
              nullable: true
              example: 1,1
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/prescriptions/22377949
    PrescriptionList:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PrescriptionDetail'
        links:
          type: object
          nullable: true
          properties:
            self:
              type: string
              example: https://api.va.gov/my_health/v1/prescriptions?page=1&per_page=20&sort%5B%5D=disp_status&sort%5B%5D=prescription_name&sort%5B%5D=dispensed_date"
            first:
              type: string
              example: https://api.va.gov/my_health/v1/prescriptions?page=1&per_page=20&sort%5B%5D=disp_status&sort%5B%5D=prescription_name&sort%5B%5D=dispensed_date"
            prev:
              type: string
              nullable: true
              example: https://api.va.gov/my_health/v1/prescriptions?page=2&per_page=20&sort%5B%5D=disp_status&sort%5B%5D=prescription_name&sort%5B%5D=dispensed_date"
            next:
              type: string
              nullable: true
              example: https://api.va.gov/my_health/v1/prescriptions?page=2&per_page=20&sort%5B%5D=disp_status&sort%5B%5D=prescription_name&sort%5B%5D=dispensed_date"
            last:
              type: string
              example: https://api.va.gov/my_health/v1/prescriptions?page=9&per_page=20&sort%5B%5D=disp_status&sort%5B%5D=prescription_name&sort%5B%5D=dispensed_date"
        meta:
          type: object
          required:
            - sort
            - pagination
          properties:
            sort:
              type: object
              required:
                - dispStatus
                - dispensedDate
                - prescriptionName
              properties:
                dispStatus:
                  type: string
                  enum:
                    - DESC
                    - ASC
                dispensedDate:
                  type: string
                  enum:
                    - DESC
                    - ASC
                prescriptionName:
                  type: string
                  enum:
                    - DESC
                    - ASC
            pagination:
              type: object
              required:
                - currentPage
                - perPage
                - totalPages
                - totalEntries
              properties:
                currentPage:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 10
                totalPages:
                  type: integer
                  example: 2
                totalEntries:
                  type: integer
                  example: 15
            updatedAt:
              type: string
              example: Wed, 28 Feb 2024 09:58:42 EST
            failedStationList:
              type: string
              nullable: true
    Prescription:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: object
          $ref: '#/components/schemas/PrescriptionDetail'
        meta:
          type: object
          required:
            - sort
            - pagination
          properties:
            sort:
              type: object
              required:
                - dispStatus
                - dispensedDate
                - prescriptionName
              properties:
                dispStatus:
                  type: string
                  enum:
                    - DESC
                    - ASC
                dispensedDate:
                  type: string
                  enum:
                    - DESC
                    - ASC
                prescriptionName:
                  type: string
                  enum:
                    - DESC
                    - ASC
            pagination:
              type: object
              required:
                - currentPage
                - perPage
                - totalPages
                - totalEntries
              properties:
                currentPage:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 10
                totalPages:
                  type: integer
                  example: 2
                totalEntries:
                  type: integer
                  example: 15
            updatedAt:
              type: string
              example: Wed, 28 Feb 2024 09:58:42 EST
            failedStationList:
              type: string
              nullable: true
