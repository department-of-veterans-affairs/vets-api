{
  "ignored_warnings": [
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "9fd09ce387199671367fce6b24dbcfebb3f63174d3d1e810791e62b531b7f559",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "modules/check_in/app/services/v2/chip/client.rb",
      "line": 163,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.delete(\"/#{base_path}/actions/deleteFromLorota/#{check_in_session.uuid}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "V2::Chip::Client",
        "method": "delete"
      },
      "user_input": "base_path",
      "confidence": "Medium",
      "cwe_id": [
        89
      ],
      "note": "Injecting SQL instead of UUID will not cause any data loss as downstream API deletes based on condition"
    },
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 110,
      "fingerprint": "d882f63ce96c28fb6c6e0982f2a171460e4b933bfd9b9a5421dca21eef3f76da",
      "check_name": "CookieSerialization",
      "message": "Use of unsafe cookie serialization strategy `:marshal` might lead to remote code execution",
      "file": "config/initializers/cookies_serializer.rb",
      "line": 7,
      "link": "https://brakemanscanner.org/docs/warning_types/unsafe_deserialization",
      "code": "Rails.application.config.action_dispatch.cookies_serializer = :marshal",
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "Medium",
      "cwe_id": [
        565,
        502
      ],
      "note": "We are using the cookie serialization default from Rails 4.x"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 70,
      "fingerprint": "fa4f441df6d626d9c7a4c66e2a8029898d38a37f2cb554883203f8dad01c5ec5",
      "check_name": "MassAssignment",
      "message": "Specify exact keys allowed for mass assignment instead of using `permit!` which allows any keys",
      "file": "modules/health_quest/app/controllers/health_quest/v0/questionnaire_responses_controller.rb",
      "line": 21,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.require(:questionnaire_response).permit!",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "HealthQuest::V0::QuestionnaireResponsesController",
        "method": "questionnaire_response_params"
      },
      "user_input": null,
      "confidence": "Medium",
      "cwe_id": [
        915
      ],
      "note": "This warning will be addressed by this modules maintainers. TODO: remove this ignore once the warning as been addressed"
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 113,
      "fingerprint": "fea6a166c0704d9525d109c17d6ee95eda217dfb1ef56a4d4c91ec9bd384cbf8",
      "check_name": "JSONEntityEscape",
      "message": "HTML entities in JSON are not escaped by default",
      "file": "config/environments/production.rb",
      "line": 1,
      "link": "https://brakemanscanner.org/docs/warning_types/cross-site_scripting/",
      "code": null,
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "Medium",
      "cwe_id": [
        79
      ],
      "note": "Explicitly configured years ago in https://github.com/department-of-veterans-affairs/vets-api/commit/c73c8fc5cc23262e8f708fad0f7c1052f9c88a7b"
    }
  ],
  "updated": "2023-02-23 16:58:06 -0600",
  "brakeman_version": "5.4.1"
}
