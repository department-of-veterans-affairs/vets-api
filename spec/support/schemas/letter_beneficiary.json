{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {},
  "id": "http://example.com/example.json",
  "properties": {
    "data": {
      "properties": {
        "attributes": {
          "oneOf": [
            {
              "properties": {
                // [militaryService, monthlyAwardAmount, awardEffectiveDate, hasChapter35Eligibility, hasServiceConnectedDisabilities,
                // hasNonServiceConnectedPension,
                // hasIndividualUnemployabilityGranted, hasSpecialMonthlyCompensation, hasAdaptedHousing]
                "benefit_information": {

                },
                "military_service": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "properties": {
                      "branch": {
                        "type": "string"
                      },
                      "character_of_service": {
                        "type": "string"
                      },
                      "entered_date": {
                        "type": "string"
                      },
                      "released_date": {
                        "type": "string"
                      }
                    },
                    "type": [
                      "object",
                      "null"
                    ]
                  }
                }
              },
              "required": [
                "benefit_information",
                "military_service"
              ],
              "type": "object"
            }
          ]
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "attributes"
      ],
      "type": [
        "object",
        "null"
      ]
    },
    "meta": {
      "properties": {
        "status": {
          "description": "EVSS API may return an error message in a 200 response, vets-api catches all errors other than not found as server error",
          "enum": [
            "OK",
            "NOT_AUTHORIZED",
            "NOT_FOUND",
            "SERVER_ERROR"
          ]
        }
      },
      "type": "object"
    }
  },
  "required": [
    "meta",
    "data"
  ],
  "type": "object"
}
