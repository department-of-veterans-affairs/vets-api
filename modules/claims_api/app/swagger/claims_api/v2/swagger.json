{
  "openapi": "3.0.1",
  "info": {
    "title": "Benefits Claims",
    "version": "v2",
    "description": "## Background\nVersion 2 of the Benefits Claims API supports the ability to retrieve existing claim information by claim ID for internal consumers.\nPlease see [version 1](https://developer.va.gov/explore/benefits/docs/claims?version=current) for external facing services which include the following capabilities:\n\n - Automatic claim and POA establishment\n - Direct establishment of disability compensation claims in Veterans Benefits Management System (VBMS) to avoid unnecessary manual processing and entry by Veteran Service Representatives (VSRs)\n - Faster claims processing by several days\n - End-to-end claims status and result tracking by claim ID\n\nForms not supported by the Benefits Claims API are submitted using the [Benefits Intake API](https://developer.va.gov/explore/benefits/docs/benefits?version=current), which places uploaded PDFs into the Centralized Mail Portal to be manually processed.\n\n## Technical Overview\nThis API accepts a payload of requests and responses on a per-form basis, with the payload identifying the form and Veteran. Trackable responses provide a unique ID which is used with the appropriate GET endpoint to track a submission’s processing status.\n\n### Authentication and authorization\nTo make an API request, follow our [authentication process](https://developer.va.gov/explore/authorization?api=claims) to receive an [OAuth token](https://oauth.net/2/).\n\n#### Representative authorization\nAccredited representatives may make requests to the Claims API on behalf of Veterans that they represent. To make API requests on behalf of a Veteran, representatives must:\n - be [accredited with the VA Office of the General Counsel](https://www.va.gov/ogc/apps/accreditation/index.asp)\n - be [authenticated](https://developer.va.gov/explore/authorization?api=claims) using an identity-proofed account\n - be the current Power of Attorney (POA) on record for the Veteran (accredited representatives can use the ‘/veterans/{veteranId}/power-of-attorney’ endpoint to check a Veteran’s current POA)\n\n#### Finding a Veteran's unique VA ID\nThe Claims API uses a unique Veteran identifier to identify the subject of each API request. This Veteran identifier can be retrieved by an authenticated Veteran or an accredited representative by passing name, DOB, and SSN to the ‘/veteran-id’ endpoint. This identifier should then be used as the Veteran ID parameter in request URLs.\n\n*Note: though Veteran identifiers are typically static, they may change over time. If a specific Veteran ID suddenly responds with a ‘404 not found’ error, the identifier may have changed. It’s a good idea to retrieve the current identifier for each Veteran periodically.*\n\n### Test data for sandbox environment use\n[Test data](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts.md) is used for all forms in the sandbox environment and for 21-526 submissions in the staging environment.\n"
  },
  "tags": [
    {
      "name": "Veteran Identifier",
      "description": "Allows authenticated veterans and veteran representatives to retrieve a veteran's id."
    },
    {
      "name": "Claims",
      "description": "Allows authenticated and authorized users to access claims data for a given Veteran. No data is returned if the user is not authenticated and authorized.\n"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer_token": {
        "type": "http",
        "name": "token",
        "scheme": "bearer",
        "bearer_format": "JWT"
      },
      "productionOauth": {
        "type": "oauth2",
        "description": "This API uses OAuth 2 with the authorization code grant flow. [More info](https://developer.va.gov/explore/authorization?api=claims)",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.va.gov/oauth2/authorization",
            "tokenUrl": "https://api.va.gov/oauth2/token",
            "scopes": {
              "claim.read": "Retrieve claim data",
              "claim.write": "Submit claim data"
            }
          }
        }
      },
      "sandboxOauth": {
        "type": "oauth2",
        "description": "This API uses OAuth 2 with the authorization code grant flow. [More info](https://developer.va.gov/explore/authorization?api=claims)",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://sandbox-api.va.gov/oauth2/authorization",
            "tokenUrl": "https://sandbox-api.va.gov/oauth2/token",
            "scopes": {
              "claim.read": "Retrieve claim data",
              "claim.write": "Submit claim data"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/veteran-id:find": {
      "post": {
        "summary": "Retrieve id of Veteran.",
        "tags": [
          "Veteran Identifier"
        ],
        "operationId": "postVeteranId",
        "security": [
          {
            "productionOauth": [
              "claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Allows authenticated Veterans and Veteran representatives to retrieve a Veteran's id.",
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Veteran's unique identifier",
            "content": {
              "application/json": {
                "example": {
                  "id": "1012667145V762142"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1012667145V762142"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "invalid value for ssn",
                      "detail": "blank is not valid for ssn"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Forbidden",
                      "detail": "Forbidden"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ssn",
                  "birthdate",
                  "firstName",
                  "lastName"
                ],
                "properties": {
                  "ssn": {
                    "type": "string",
                    "example": "796130115",
                    "description": "SSN of Veteran being represented"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Tamara",
                    "description": "First Name of Veteran being represented"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Ellis",
                    "description": "Last Name of Veteran being represented"
                  },
                  "birthdate": {
                    "type": "string",
                    "example": "1967-06-19",
                    "description": "Date of Birth of Veteran being represented, in iso8601 format"
                  }
                },
                "example": {
                  "ssn": "796130115",
                  "firstName": "Tamara",
                  "lastName": "Ellis",
                  "birthdate": "1967-06-19"
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/veterans/{veteranId}/claims": {
      "get": {
        "summary": "Find all benefits claims for a Veteran.",
        "tags": [
          "Claims"
        ],
        "operationId": "findClaims",
        "security": [
          {
            "productionOauth": [
              "claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Retrieves all claims for Veteran.",
        "parameters": [
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "claim response",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "555555555",
                    "@links": {
                      "rel": "self",
                      "type": "GET",
                      "url": "http://www.example.com/services/benefits/v2/veterans/1013062086V794840/claims/555555555"
                    },
                    "date_filed": "05/02/17",
                    "decision_letter_sent": false,
                    "development_letter_sent": false,
                    "documents_needed": false,
                    "requested_decision": null,
                    "status": "Complete",
                    "type": "Compensation"
                  }
                ],
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Claim details.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Claim ID",
                        "example": "600131328"
                      },
                      "type": {
                        "type": "string",
                        "description": "Name of Claim type",
                        "example": "Appeals Control"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of Claim",
                        "example": "Complete"
                      },
                      "date_filed": {
                        "type": "string",
                        "format": "date",
                        "description": "Date in YYYY-MM-DD the claim was first filed",
                        "example": "2018-06-04"
                      },
                      "documents_needed": {
                        "type": "boolean",
                        "description": "Does the claim require additional documents to be submitted",
                        "example": "false"
                      },
                      "requested_decision": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "description": "The claim filer has requested a claim decision be made",
                        "example": "false"
                      },
                      "development_letter_sent": {
                        "type": "boolean",
                        "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim",
                        "example": "false"
                      },
                      "decision_letter_sent": {
                        "type": "boolean",
                        "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim",
                        "example": "false"
                      },
                      "@links": {
                        "type": "object",
                        "description": "HATEOAS links in the HAL standard format",
                        "example": {
                          "rel": "self",
                          "type": "GET",
                          "url": "https://api.va.gov/services/claims/v2/claims/600131328"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Forbidden",
                      "detail": "Forbidden"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/veterans/{veteranId}/claims/{id}": {
      "get": {
        "summary": "Find claim by ID",
        "tags": [
          "Claims"
        ],
        "operationId": "findClaimById",
        "security": [
          {
            "productionOauth": [
              "claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the claim being requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Retrieves a specific claim for a Veteran",
        "responses": {
          "200": {
            "description": "claim response",
            "content": {
              "application/json": {
                "example": {
                  "id": "555555555",
                  "@links": {
                    "rel": "self",
                    "type": "GET",
                    "url": "http://www.example.com/services/benefits/v2/veterans/1013062086V794840/claims/555555555"
                  },
                  "contentionList": [
                    "abnormal heart (New)",
                    " abscess kidney (New)",
                    " encephalitis lethargica residuals (New)",
                    " dracunculiasis (New)",
                    " gingivitis (New)",
                    " abnormal weight loss (New)",
                    " groin condition (New)",
                    " metritis (New)"
                  ],
                  "dateFiled": "05/02/17",
                  "decisionLetterSent": false,
                  "developmentLetterSent": false,
                  "documentsNeeded": false,
                  "endProductCode": "404",
                  "requestedDecision": null,
                  "status": "Complete",
                  "supportingDocuments": [

                  ],
                  "type": "Compensation",
                  "vaRepresentative": "Random E Person"
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Claim ID",
                      "example": "600131328"
                    },
                    "@links": {
                      "type": "object",
                      "description": "HATEOAS links in the HAL standard format",
                      "example": {
                        "rel": "self",
                        "type": "GET",
                        "url": "https://api.va.gov/services/claims/v2/claims/600131328"
                      }
                    },
                    "contentionList": {
                      "type": "array",
                      "description": "The contentions being submitted with a claim",
                      "example": [
                        "abnormal heart (New)",
                        "abscess kidney (New)"
                      ]
                    },
                    "dateFiled": {
                      "type": "string",
                      "description": "The date a claim was filed",
                      "example": "5/17/20"
                    },
                    "decisionLetterSent": {
                      "type": "boolean",
                      "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim"
                    },
                    "developmentLetterSent": {
                      "type": "boolean",
                      "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim"
                    },
                    "documentsNeeded": {
                      "type": "boolean",
                      "description": "Indicates whether the claim requires additional documents to be submitted"
                    },
                    "endProductCode": {
                      "type": "string",
                      "description": "End product code of claim",
                      "example": "930"
                    },
                    "requestedDecision": {
                      "type": "boolean",
                      "nullable": true,
                      "description": "Indicates if a decision has been requested and/or if a Waiver 5103 has been submitted"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of claim",
                      "example": "Complete"
                    },
                    "supportingDocuments": {
                      "type": "array",
                      "description": "Information regarding any supported documents attached to a claim",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of document"
                          },
                          "md5": {
                            "type": "string",
                            "description": "Hashed representation of document"
                          },
                          "filename": {
                            "type": "string",
                            "description": "Name of document"
                          },
                          "uploaded_at": {
                            "type": "string",
                            "format": "date",
                            "description": "Date and time document was uploaded"
                          }
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "Name of claim type",
                      "example": "Appeals Control"
                    },
                    "vaRepresentative": {
                      "type": "string",
                      "description": "The current organization or individual representing the Veteran on a claim",
                      "example": "American Legion"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Forbidden",
                      "detail": "Forbidden"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Claim not found"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://sandbox-api.va.gov/services/benefits/{version}",
      "description": "VA.gov API sandbox environment",
      "variables": {
        "version": {
          "default": "v2"
        }
      }
    },
    {
      "url": "https://api.va.gov/services/benefits/{version}",
      "description": "VA.gov API production environment",
      "variables": {
        "version": {
          "default": "v2"
        }
      }
    }
  ]
}