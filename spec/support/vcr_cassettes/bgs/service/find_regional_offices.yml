---
http_interactions:
- request:
    method: get
    uri: https://internal-dsva-vagov-dev-fwdproxy-1893365470.us-gov-west-1.elb.amazonaws.com:4447/StandardDataWebServiceBean/StandardDataWebService?WSDL
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Host:
      - ".vba.va.gov"
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 28 Oct 2020 19:13:47 GMT
      Server:
      - Apache
      X-Frame-Options:
      - SAMEORIGIN
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/xml;charset=utf-8
    body:
      encoding: UTF-8
      string: |-
        <?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.3.0-b170407.2038 svn-revision#2eaca54d17a59d265c6fe886b7fd0027836c766c. --><!-- Generated by JAX-WS RI (http://jax-ws.java.net). RI's version is JAX-WS RI 2.3.0-b170407.2038 svn-revision#2eaca54d17a59d265c6fe886b7fd0027836c766c. --><definitions xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:wsp="http://www.w3.org/ns/ws-policy" xmlns:wsp1_2="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://standarddata.services.vetsnet.vba.va.gov/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" targetNamespace="http://standarddata.services.vetsnet.vba.va.gov/" name="StandardDataWebService">
        <types>
        <xsd:schema>
        <xsd:import namespace="http://standarddata.services.vetsnet.vba.va.gov/" schemaLocation="http://linktestbepbenefits.vba.va.gov:80/StandardDataWebServiceBean/StandardDataWebService?xsd=1"/>
        </xsd:schema>
        </types>
        <message name="findStates">
        <part name="parameters" element="tns:findStates"/>
        </message>
        <message name="findStatesResponse">
        <part name="parameters" element="tns:findStatesResponse"/>
        </message>
        <message name="MessageException">
        <part name="fault" element="tns:MessageException"/>
        </message>
        <message name="findCountries">
        <part name="parameters" element="tns:findCountries"/>
        </message>
        <message name="findCountriesResponse">
        <part name="parameters" element="tns:findCountriesResponse"/>
        </message>
        <message name="findRegionalOffices">
        <part name="parameters" element="tns:findRegionalOffices"/>
        </message>
        <message name="findRegionalOfficesResponse">
        <part name="parameters" element="tns:findRegionalOfficesResponse"/>
        </message>
        <message name="findStations">
        <part name="parameters" element="tns:findStations"/>
        </message>
        <message name="findStationsResponse">
        <part name="parameters" element="tns:findStationsResponse"/>
        </message>
        <message name="findPayeeCdsByBnftClaimTypeCd">
        <part name="parameters" element="tns:findPayeeCdsByBnftClaimTypeCd"/>
        </message>
        <message name="findPayeeCdsByBnftClaimTypeCdResponse">
        <part name="parameters" element="tns:findPayeeCdsByBnftClaimTypeCdResponse"/>
        </message>
        <message name="findSpecialIssues">
        <part name="parameters" element="tns:findSpecialIssues"/>
        </message>
        <message name="findSpecialIssuesResponse">
        <part name="parameters" element="tns:findSpecialIssuesResponse"/>
        </message>
        <message name="findBenefitClaimTypes">
        <part name="parameters" element="tns:findBenefitClaimTypes"/>
        </message>
        <message name="findBenefitClaimTypesResponse">
        <part name="parameters" element="tns:findBenefitClaimTypesResponse"/>
        </message>
        <message name="findEndProductTypes">
        <part name="parameters" element="tns:findEndProductTypes"/>
        </message>
        <message name="findEndProductTypesResponse">
        <part name="parameters" element="tns:findEndProductTypesResponse"/>
        </message>
        <message name="findPayeeTypes">
        <part name="parameters" element="tns:findPayeeTypes"/>
        </message>
        <message name="findPayeeTypesResponse">
        <part name="parameters" element="tns:findPayeeTypesResponse"/>
        </message>
        <message name="findPhoneTypes">
        <part name="parameters" element="tns:findPhoneTypes"/>
        </message>
        <message name="findPhoneTypesResponse">
        <part name="parameters" element="tns:findPhoneTypesResponse"/>
        </message>
        <message name="findListType">
        <part name="parameters" element="tns:findListType"/>
        </message>
        <message name="findListTypeResponse">
        <part name="parameters" element="tns:findListTypeResponse"/>
        </message>
        <message name="findItfCanctnReasonTypes">
        <part name="parameters" element="tns:findItfCanctnReasonTypes"/>
        </message>
        <message name="findItfCanctnReasonTypesResponse">
        <part name="parameters" element="tns:findItfCanctnReasonTypesResponse"/>
        </message>
        <message name="findSubmtrApplcnTypes">
        <part name="parameters" element="tns:findSubmtrApplcnTypes"/>
        </message>
        <message name="findSubmtrApplcnTypesResponse">
        <part name="parameters" element="tns:findSubmtrApplcnTypesResponse"/>
        </message>
        <message name="findSubmtrRoleTypes">
        <part name="parameters" element="tns:findSubmtrRoleTypes"/>
        </message>
        <message name="findSubmtrRoleTypesResponse">
        <part name="parameters" element="tns:findSubmtrRoleTypesResponse"/>
        </message>
        <message name="findPreDischargeType">
        <part name="parameters" element="tns:findPreDischargeType"/>
        </message>
        <message name="findPreDischargeTypeResponse">
        <part name="parameters" element="tns:findPreDischargeTypeResponse"/>
        </message>
        <message name="findVreFormTypes">
        <part name="parameters" element="tns:findVreFormTypes"/>
        </message>
        <message name="findVreFormTypesResponse">
        <part name="parameters" element="tns:findVreFormTypesResponse"/>
        </message>
        <message name="findFlashes">
        <part name="parameters" element="tns:findFlashes"/>
        </message>
        <message name="findFlashesResponse">
        <part name="parameters" element="tns:findFlashesResponse"/>
        </message>
        <message name="findAllBenefitClaimTypes">
        <part name="parameters" element="tns:findAllBenefitClaimTypes"/>
        </message>
        <message name="findAllBenefitClaimTypesResponse">
        <part name="parameters" element="tns:findAllBenefitClaimTypesResponse"/>
        </message>
        <message name="findMilitaryBranches">
        <part name="parameters" element="tns:findMilitaryBranches"/>
        </message>
        <message name="findMilitaryBranchesResponse">
        <part name="parameters" element="tns:findMilitaryBranchesResponse"/>
        </message>
        <message name="findOrganizationTypes">
        <part name="parameters" element="tns:findOrganizationTypes"/>
        </message>
        <message name="findOrganizationTypesResponse">
        <part name="parameters" element="tns:findOrganizationTypesResponse"/>
        </message>
        <message name="findForeignStates">
        <part name="parameters" element="tns:findForeignStates"/>
        </message>
        <message name="findForeignStatesResponse">
        <part name="parameters" element="tns:findForeignStatesResponse"/>
        </message>
        <message name="findUSStates">
        <part name="parameters" element="tns:findUSStates"/>
        </message>
        <message name="findUSStatesResponse">
        <part name="parameters" element="tns:findUSStatesResponse"/>
        </message>
        <message name="findClaimSuspnsReasons">
        <part name="parameters" element="tns:findClaimSuspnsReasons"/>
        </message>
        <message name="findClaimSuspnsReasonsResponse">
        <part name="parameters" element="tns:findClaimSuspnsReasonsResponse"/>
        </message>
        <message name="findPrefByPtcpntId">
        <part name="parameters" element="tns:findPrefByPtcpntId"/>
        </message>
        <message name="findPrefByPtcpntIdResponse">
        <part name="parameters" element="tns:findPrefByPtcpntIdResponse"/>
        </message>
        <message name="findPrefByPoaCd">
        <part name="parameters" element="tns:findPrefByPoaCd"/>
        </message>
        <message name="findPrefByPoaCdResponse">
        <part name="parameters" element="tns:findPrefByPoaCdResponse"/>
        </message>
        <message name="updatePref">
        <part name="parameters" element="tns:updatePref"/>
        </message>
        <message name="updatePrefResponse">
        <part name="parameters" element="tns:updatePrefResponse"/>
        </message>
        <message name="findCemeteries">
        <part name="parameters" element="tns:findCemeteries"/>
        </message>
        <message name="findCemeteriesResponse">
        <part name="parameters" element="tns:findCemeteriesResponse"/>
        </message>
        <message name="findBenefitClaimTypeIncrements">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrements"/>
        </message>
        <message name="findBenefitClaimTypeIncrementsResponse">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrementsResponse"/>
        </message>
        <message name="findBenefitClaimTypeIncrement">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrement"/>
        </message>
        <message name="findBenefitClaimTypeIncrementResponse">
        <part name="parameters" element="tns:findBenefitClaimTypeIncrementResponse"/>
        </message>
        <message name="findOtherMilitaryBranches">
        <part name="parameters" element="tns:findOtherMilitaryBranches"/>
        </message>
        <message name="findOtherMilitaryBranchesResponse">
        <part name="parameters" element="tns:findOtherMilitaryBranchesResponse"/>
        </message>
        <message name="findSignaturesByStationNumber">
        <part name="parameters" element="tns:findSignaturesByStationNumber"/>
        </message>
        <message name="findSignaturesByStationNumberResponse">
        <part name="parameters" element="tns:findSignaturesByStationNumberResponse"/>
        </message>
        <message name="findPoaCdByNm">
        <part name="parameters" element="tns:findPoaCdByNm"/>
        </message>
        <message name="findPoaCdByNmResponse">
        <part name="parameters" element="tns:findPoaCdByNmResponse"/>
        </message>
        <message name="findPOAs">
        <part name="parameters" element="tns:findPOAs"/>
        </message>
        <message name="findPOAsResponse">
        <part name="parameters" element="tns:findPOAsResponse"/>
        </message>
        <message name="findPayeeCdByPgmTypeCd">
        <part name="parameters" element="tns:findPayeeCdByPgmTypeCd"/>
        </message>
        <message name="findPayeeCdByPgmTypeCdResponse">
        <part name="parameters" element="tns:findPayeeCdByPgmTypeCdResponse"/>
        </message>
        <message name="findBenefitClaimLifeCycleStatuses">
        <part name="parameters" element="tns:findBenefitClaimLifeCycleStatuses"/>
        </message>
        <message name="findBenefitClaimLifeCycleStatusesResponse">
        <part name="parameters" element="tns:findBenefitClaimLifeCycleStatusesResponse"/>
        </message>
        <message name="findAllBddIntakeSites">
        <part name="parameters" element="tns:findAllBddIntakeSites"/>
        </message>
        <message name="findAllBddIntakeSitesResponse">
        <part name="parameters" element="tns:findAllBddIntakeSitesResponse"/>
        </message>
        <portType name="StandardDataWebService">
        <operation name="findStates">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStatesRequest" message="tns:findStates"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStatesResponse" message="tns:findStatesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStates/Fault/MessageException"/>
        </operation>
        <operation name="findCountries">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCountriesRequest" message="tns:findCountries"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCountriesResponse" message="tns:findCountriesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCountries/Fault/MessageException"/>
        </operation>
        <operation name="findRegionalOffices">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findRegionalOfficesRequest" message="tns:findRegionalOffices"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findRegionalOfficesResponse" message="tns:findRegionalOfficesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findRegionalOffices/Fault/MessageException"/>
        </operation>
        <operation name="findStations">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStationsRequest" message="tns:findStations"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStationsResponse" message="tns:findStationsResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findStations/Fault/MessageException"/>
        </operation>
        <operation name="findPayeeCdsByBnftClaimTypeCd">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdsByBnftClaimTypeCdRequest" message="tns:findPayeeCdsByBnftClaimTypeCd"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdsByBnftClaimTypeCdResponse" message="tns:findPayeeCdsByBnftClaimTypeCdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdsByBnftClaimTypeCd/Fault/MessageException"/>
        </operation>
        <operation name="findSpecialIssues">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSpecialIssuesRequest" message="tns:findSpecialIssues"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSpecialIssuesResponse" message="tns:findSpecialIssuesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSpecialIssues/Fault/MessageException"/>
        </operation>
        <operation name="findBenefitClaimTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypesRequest" message="tns:findBenefitClaimTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypesResponse" message="tns:findBenefitClaimTypesResponse"/>
        </operation>
        <operation name="findEndProductTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findEndProductTypesRequest" message="tns:findEndProductTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findEndProductTypesResponse" message="tns:findEndProductTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findEndProductTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPayeeTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeTypesRequest" message="tns:findPayeeTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeTypesResponse" message="tns:findPayeeTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPhoneTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPhoneTypesRequest" message="tns:findPhoneTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPhoneTypesResponse" message="tns:findPhoneTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPhoneTypes/Fault/MessageException"/>
        </operation>
        <operation name="findListType">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findListTypeRequest" message="tns:findListType"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findListTypeResponse" message="tns:findListTypeResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findListType/Fault/MessageException"/>
        </operation>
        <operation name="findItfCanctnReasonTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findItfCanctnReasonTypesRequest" message="tns:findItfCanctnReasonTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findItfCanctnReasonTypesResponse" message="tns:findItfCanctnReasonTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findItfCanctnReasonTypes/Fault/MessageException"/>
        </operation>
        <operation name="findSubmtrApplcnTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrApplcnTypesRequest" message="tns:findSubmtrApplcnTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrApplcnTypesResponse" message="tns:findSubmtrApplcnTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrApplcnTypes/Fault/MessageException"/>
        </operation>
        <operation name="findSubmtrRoleTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrRoleTypesRequest" message="tns:findSubmtrRoleTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrRoleTypesResponse" message="tns:findSubmtrRoleTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSubmtrRoleTypes/Fault/MessageException"/>
        </operation>
        <operation name="findPreDischargeType">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPreDischargeTypeRequest" message="tns:findPreDischargeType"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPreDischargeTypeResponse" message="tns:findPreDischargeTypeResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPreDischargeType/Fault/MessageException"/>
        </operation>
        <operation name="findVreFormTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findVreFormTypesRequest" message="tns:findVreFormTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findVreFormTypesResponse" message="tns:findVreFormTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findVreFormTypes/Fault/MessageException"/>
        </operation>
        <operation name="findFlashes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findFlashesRequest" message="tns:findFlashes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findFlashesResponse" message="tns:findFlashesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findFlashes/Fault/MessageException"/>
        </operation>
        <operation name="findAllBenefitClaimTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBenefitClaimTypesRequest" message="tns:findAllBenefitClaimTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBenefitClaimTypesResponse" message="tns:findAllBenefitClaimTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBenefitClaimTypes/Fault/MessageException"/>
        </operation>
        <operation name="findMilitaryBranches">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findMilitaryBranchesRequest" message="tns:findMilitaryBranches"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findMilitaryBranchesResponse" message="tns:findMilitaryBranchesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findMilitaryBranches/Fault/MessageException"/>
        </operation>
        <operation name="findOrganizationTypes">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOrganizationTypesRequest" message="tns:findOrganizationTypes"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOrganizationTypesResponse" message="tns:findOrganizationTypesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOrganizationTypes/Fault/MessageException"/>
        </operation>
        <operation name="findForeignStates">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findForeignStatesRequest" message="tns:findForeignStates"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findForeignStatesResponse" message="tns:findForeignStatesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findForeignStates/Fault/MessageException"/>
        </operation>
        <operation name="findUSStates">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findUSStatesRequest" message="tns:findUSStates"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findUSStatesResponse" message="tns:findUSStatesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findUSStates/Fault/MessageException"/>
        </operation>
        <operation name="findClaimSuspnsReasons">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findClaimSuspnsReasonsRequest" message="tns:findClaimSuspnsReasons"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findClaimSuspnsReasonsResponse" message="tns:findClaimSuspnsReasonsResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findClaimSuspnsReasons/Fault/MessageException"/>
        </operation>
        <operation name="findPrefByPtcpntId">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPtcpntIdRequest" message="tns:findPrefByPtcpntId"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPtcpntIdResponse" message="tns:findPrefByPtcpntIdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPtcpntId/Fault/MessageException"/>
        </operation>
        <operation name="findPrefByPoaCd">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPoaCdRequest" message="tns:findPrefByPoaCd"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPoaCdResponse" message="tns:findPrefByPoaCdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPrefByPoaCd/Fault/MessageException"/>
        </operation>
        <operation name="updatePref">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/updatePrefRequest" message="tns:updatePref"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/updatePrefResponse" message="tns:updatePrefResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/updatePref/Fault/MessageException"/>
        </operation>
        <operation name="findCemeteries">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCemeteriesRequest" message="tns:findCemeteries"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCemeteriesResponse" message="tns:findCemeteriesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findCemeteries/Fault/MessageException"/>
        </operation>
        <operation name="findBenefitClaimTypeIncrements">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementsRequest" message="tns:findBenefitClaimTypeIncrements"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementsResponse" message="tns:findBenefitClaimTypeIncrementsResponse"/>
        </operation>
        <operation name="findBenefitClaimTypeIncrement">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementRequest" message="tns:findBenefitClaimTypeIncrement"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrementResponse" message="tns:findBenefitClaimTypeIncrementResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimTypeIncrement/Fault/MessageException"/>
        </operation>
        <operation name="findOtherMilitaryBranches">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOtherMilitaryBranchesRequest" message="tns:findOtherMilitaryBranches"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOtherMilitaryBranchesResponse" message="tns:findOtherMilitaryBranchesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findOtherMilitaryBranches/Fault/MessageException"/>
        </operation>
        <operation name="findSignaturesByStationNumber">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSignaturesByStationNumberRequest" message="tns:findSignaturesByStationNumber"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSignaturesByStationNumberResponse" message="tns:findSignaturesByStationNumberResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findSignaturesByStationNumber/Fault/MessageException"/>
        </operation>
        <operation name="findPoaCdByNm">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPoaCdByNmRequest" message="tns:findPoaCdByNm"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPoaCdByNmResponse" message="tns:findPoaCdByNmResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPoaCdByNm/Fault/MessageException"/>
        </operation>
        <operation name="findPOAs">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPOAsRequest" message="tns:findPOAs"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPOAsResponse" message="tns:findPOAsResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPOAs/Fault/MessageException"/>
        </operation>
        <operation name="findPayeeCdByPgmTypeCd">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdByPgmTypeCdRequest" message="tns:findPayeeCdByPgmTypeCd"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdByPgmTypeCdResponse" message="tns:findPayeeCdByPgmTypeCdResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findPayeeCdByPgmTypeCd/Fault/MessageException"/>
        </operation>
        <operation name="findBenefitClaimLifeCycleStatuses">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimLifeCycleStatusesRequest" message="tns:findBenefitClaimLifeCycleStatuses"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimLifeCycleStatusesResponse" message="tns:findBenefitClaimLifeCycleStatusesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findBenefitClaimLifeCycleStatuses/Fault/MessageException"/>
        </operation>
        <operation name="findAllBddIntakeSites">
        <input wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBddIntakeSitesRequest" message="tns:findAllBddIntakeSites"/>
        <output wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBddIntakeSitesResponse" message="tns:findAllBddIntakeSitesResponse"/>
        <fault message="tns:MessageException" name="MessageException" wsam:Action="http://standarddata.services.vetsnet.vba.va.gov/StandardDataWebService/findAllBddIntakeSites/Fault/MessageException"/>
        </operation>
        </portType>
        <binding name="StandardDataWebServicePortBinding" type="tns:StandardDataWebService">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
        <operation name="findStates">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findCountries">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findRegionalOffices">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findStations">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPayeeCdsByBnftClaimTypeCd">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSpecialIssues">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findBenefitClaimTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        </operation>
        <operation name="findEndProductTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPayeeTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPhoneTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findListType">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findItfCanctnReasonTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSubmtrApplcnTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSubmtrRoleTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPreDischargeType">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findVreFormTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findFlashes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findAllBenefitClaimTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findMilitaryBranches">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findOrganizationTypes">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findForeignStates">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findUSStates">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findClaimSuspnsReasons">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPrefByPtcpntId">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPrefByPoaCd">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="updatePref">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findCemeteries">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findBenefitClaimTypeIncrements">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        </operation>
        <operation name="findBenefitClaimTypeIncrement">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findOtherMilitaryBranches">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findSignaturesByStationNumber">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPoaCdByNm">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPOAs">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findPayeeCdByPgmTypeCd">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findBenefitClaimLifeCycleStatuses">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        <operation name="findAllBddIntakeSites">
        <soap:operation soapAction=""/>
        <input>
        <soap:body use="literal"/>
        </input>
        <output>
        <soap:body use="literal"/>
        </output>
        <fault name="MessageException">
        <soap:fault name="MessageException" use="literal"/>
        </fault>
        </operation>
        </binding>
        <service name="StandardDataWebService">
        <port name="StandardDataWebServicePort" binding="tns:StandardDataWebServicePortBinding">
        <soap:address location="http://linktestbepbenefits.vba.va.gov:80/StandardDataWebServiceBean/StandardDataWebService"/>
        </port>
        </service>
        </definitions>
  recorded_at: Wed, 28 Oct 2020 19:13:47 GMT
- request:
    method: post
    uri: https://internal-dsva-vagov-dev-fwdproxy-1893365470.us-gov-west-1.elb.amazonaws.com:4447/StandardDataWebServiceBean/StandardDataWebService
    body:
      encoding: UTF-8
      string: |-
        <?xml version="1.0" encoding="UTF-8"?><env:Envelope xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://standarddata.services.vetsnet.vba.va.gov/" xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"><env:Header><wsse:Security xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd">
          <wsse:UsernameToken>
            <wsse:Username>VAgovAPI</wsse:Username>
          </wsse:UsernameToken>
          <vaws:VaServiceHeaders xmlns:vaws="http://vbawebservices.vba.va.gov/vawss">
            <vaws:CLIENT_MACHINE>192.168.0.95</vaws:CLIENT_MACHINE>
            <vaws:STN_ID>281</vaws:STN_ID>
            <vaws:applicationName>VAgovAPI</vaws:applicationName>
            <vaws:ExternalUid>64521210330757658</vaws:ExternalUid>
            <vaws:ExternalKey>abraham.lincoln@vets.gov</vaws:ExternalKey>
          </vaws:VaServiceHeaders>
        </wsse:Security>
        </env:Header><env:Body><tns:findRegionalOffices></tns:findRegionalOffices></env:Body></env:Envelope>
    headers:
      Host:
      - ".vba.va.gov"
      Soapaction:
      - '"findRegionalOffices"'
      Content-Type:
      - text/xml;charset=UTF-8
      Content-Length:
      - '980'
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 28 Oct 2020 19:13:48 GMT
      Server:
      - Apache
      X-Frame-Options:
      - SAMEORIGIN
      Transfer-Encoding:
      - chunked
      Content-Type:
      - text/xml; charset=utf-8
    body:
      encoding: UTF-8
      string: <?xml version='1.0' encoding='UTF-8'?><S:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/"
        xmlns:S="http://schemas.xmlsoap.org/soap/envelope/"><env:Header><work:WorkContext
        xmlns:work="http://oracle.com/weblogic/soap/workarea/">rO0ABXdUAB13ZWJsb2dpYy5hcHAuQ29ycG9yYXRlRGF0YUVBUgAAANYAAAAjd2VibG9naWMud29ya2FyZWEuU3RyaW5nV29ya0NvbnRleHQABjMuMS4yNAAA</work:WorkContext></env:Header><S:Body><ns0:findRegionalOfficesResponse
        xmlns:ns0="http://standarddata.services.vetsnet.vba.va.gov/"><return><lctnId>368</lctnId><nm>Albuquerque</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>340</stationNumber></return><return><lctnId>112091</lctnId><nm>Anchorage</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>363</stationNumber></return><return><lctnId>327</lctnId><nm>Anchorage
        VA Medical Center</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>463</stationNumber></return><return><lctnId>47907</lctnId><nm>Appeals
        Management Center</nm><stationNumber>397</stationNumber></return><return><lctnId>346</lctnId><nm>Atlanta</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>316</stationNumber></return><return><lctnId>343</lctnId><nm>Baltimore</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>313</stationNumber></return><return><lctnId>124285</lctnId><nm>Board
        of Veterans Appeals</nm><stationNumber>398</stationNumber></return><return><lctnId>375</lctnId><nm>Boise</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>347</stationNumber></return><return><lctnId>333</lctnId><nm>Boston</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>301</stationNumber></return><return><lctnId>338</lctnId><nm>Buffalo</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>307</stationNumber></return><return><lctnId>370</lctnId><nm>Cheyenne</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>442</stationNumber></return><return><lctnId>357</lctnId><nm>Chicago</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>328</stationNumber></return><return><lctnId>354</lctnId><nm>Cleveland</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>325</stationNumber></return><return><lctnId>349</lctnId><nm>Columbia</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>319</stationNumber></return><return><lctnId>124327</lctnId><nm>Compensation
        Service</nm><stationNumber>388</stationNumber></return><return><lctnId>124349</lctnId><nm>Compensation
        Svc Trng Facility</nm><stationNumber>387</stationNumber></return><return><lctnId>124328</lctnId><nm>Continental
        District</nm><stationNumber>384</stationNumber></return><return><lctnId>367</lctnId><nm>Denver</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>339</stationNumber></return><return><lctnId>361</lctnId><nm>Des
        Moines</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>333</stationNumber></return><return><lctnId>358</lctnId><nm>Detroit</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>329</stationNumber></return><return><lctnId>365</lctnId><nm>Fargo</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>437</stationNumber></return><return><lctnId>364</lctnId><nm>Fort
        Harrison</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>436</stationNumber></return><return><lctnId>339</lctnId><nm>Hartford</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>308</stationNumber></return><return><lctnId>324</lctnId><nm>Honolulu</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>459</stationNumber></return><return><lctnId>326</lctnId><nm>Houston</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>362</stationNumber></return><return><lctnId>345</lctnId><nm>Huntington</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>315</stationNumber></return><return><lctnId>355</lctnId><nm>Indianapolis</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>326</stationNumber></return><return><lctnId>353</lctnId><nm>Jackson</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>323</stationNumber></return><return><lctnId>362</lctnId><nm>Lincoln</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>334</stationNumber></return><return><lctnId>378</lctnId><nm>Little
        Rock</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>350</stationNumber></return><return><lctnId>372</lctnId><nm>Los
        Angeles</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>344</stationNumber></return><return><lctnId>356</lctnId><nm>Louisville</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>327</stationNumber></return><return><lctnId>330</lctnId><nm>Manchester</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>373</stationNumber></return><return><lctnId>323</lctnId><nm>Manila</nm><pmcLctnId>323</pmcLctnId><pmcNm>Manila</pmcNm><pmcStationNumber>358</pmcStationNumber><stationNumber>358</stationNumber></return><return><lctnId>388</lctnId><nm>Midwest
        Area Office</nm><stationNumber>394</stationNumber></return><return><lctnId>359</lctnId><nm>Milwaukee</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>330</stationNumber></return><return><lctnId>352</lctnId><nm>Montgomery</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>322</stationNumber></return><return><lctnId>379</lctnId><nm>Muskogee</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>351</stationNumber></return><return><lctnId>350</lctnId><nm>Nashville</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>320</stationNumber></return><return><lctnId>123725</lctnId><nm>National
        Work Queue</nm><stationNumber>499</stationNumber></return><return><lctnId>351</lctnId><nm>New
        Orleans</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>321</stationNumber></return><return><lctnId>337</lctnId><nm>New
        York</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>306</stationNumber></return><return><lctnId>340</lctnId><nm>Newark</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>309</stationNumber></return><return><lctnId>389</lctnId><nm>North
        Atlantic Area Office</nm><stationNumber>392</stationNumber></return><return><lctnId>371</lctnId><nm>Oakland</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>343</stationNumber></return><return><lctnId>52538</lctnId><nm>Pacific
        Area Office</nm><stationNumber>395</stationNumber></return><return><lctnId>341</lctnId><nm>Philadelphia</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>310</stationNumber></return><return><lctnId>373</lctnId><nm>Phoenix</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>345</stationNumber></return><return><lctnId>342</lctnId><nm>Pittsburgh</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>311</stationNumber></return><return><lctnId>376</lctnId><nm>Portland</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>348</stationNumber></return><return><lctnId>335</lctnId><nm>Providence</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>304</stationNumber></return><return><lctnId>386</lctnId><nm>RMC</nm><stationNumber>376</stationNumber></return><return><lctnId>381</lctnId><nm>Reno</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>354</stationNumber></return><return><lctnId>344</lctnId><nm>Roanoke</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>314</stationNumber></return><return><lctnId>369</lctnId><nm>Salt
        Lake City</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>341</stationNumber></return><return><lctnId>331</lctnId><nm>San
        Diego</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>377</stationNumber></return><return><lctnId>382</lctnId><nm>San
        Juan</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>355</stationNumber></return><return><lctnId>374</lctnId><nm>Seattle</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>346</stationNumber></return><return><lctnId>366</lctnId><nm>Sioux
        Falls</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>438</stationNumber></return><return><lctnId>387</lctnId><nm>Southeast
        Area Office</nm><stationNumber>393</stationNumber></return><return><lctnId>360</lctnId><nm>St.
        Louis</nm><pmcLctnId>359</pmcLctnId><pmcNm>Milwaukee</pmcNm><pmcStationNumber>330</pmcStationNumber><stationNumber>331</stationNumber></return><return><lctnId>363</lctnId><nm>St.
        Paul</nm><pmcLctnId>363</pmcLctnId><pmcNm>St. Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>335</stationNumber></return><return><lctnId>332</lctnId><nm>St.
        Paul Debt Management Center</nm><stationNumber>389</stationNumber></return><return><lctnId>347</lctnId><nm>St.
        Petersburg</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>317</stationNumber></return><return><lctnId>334</lctnId><nm>Togus</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>402</stationNumber></return><return><lctnId>99162</lctnId><nm>VBA
        Finance Center (BDN)</nm><stationNumber>390</stationNumber></return><return><lctnId>124325</lctnId><nm>VBA
        Prof Devlpmt Academy/East</nm><stationNumber>385</stationNumber></return><return><lctnId>99422</lctnId><nm>VBA
        Records Storage and Vault</nm><stationNumber>391</stationNumber></return><return><lctnId>124709</lctnId><nm>VHA</nm><stationNumber>383</stationNumber></return><return><lctnId>377</lctnId><nm>Waco</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>349</stationNumber></return><return><lctnId>329</lctnId><nm>Washington</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>372</stationNumber></return><return><lctnId>124326</lctnId><nm>Western
        Training Center</nm><stationNumber>386</stationNumber></return><return><lctnId>336</lctnId><nm>White
        River Junction</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>405</stationNumber></return><return><lctnId>380</lctnId><nm>Wichita</nm><pmcLctnId>363</pmcLctnId><pmcNm>St.
        Paul</pmcNm><pmcStationNumber>335</pmcStationNumber><stationNumber>452</stationNumber></return><return><lctnId>325</lctnId><nm>Wilmington</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>460</stationNumber></return><return><lctnId>348</lctnId><nm>Winston-Salem</nm><pmcLctnId>341</pmcLctnId><pmcNm>Philadelphia</pmcNm><pmcStationNumber>310</pmcStationNumber><stationNumber>318</stationNumber></return></ns0:findRegionalOfficesResponse></S:Body></S:Envelope>
  recorded_at: Wed, 28 Oct 2020 19:13:48 GMT
recorded_with: VCR 6.0.0
