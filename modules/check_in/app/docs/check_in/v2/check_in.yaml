openapi: '3.0.0'
info:
  version: '0.0.2'
  title: Check-in
  description: |
    ## The API for the Check-in module
  contact:
    name: va.gov
tags:
  - name: check_in
    description: Check-in
servers:
  - url: http://localhost:3000/check_in
    description: VA.gov API local environment
  - url: https://staging-api.va.gov/check_in
    description: VA.gov API staging environment
  - url: https://api.va.gov/check_in
    description: VA.gov API production environment
paths:
  /v2/sessions/{uuid}:
    get:
      tags:
        - Get session for patient check-in
      summary: Returns the session created for patient to check-in for an appointment with given UUID
      operationId: get_session
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid for getting the session
          schema:
            type: string
            example: 'ad6c9181-530c-4a8f-9fbd-5e8e8a400d4a'
      responses:
        '200':
          description: Session with authorized/unauthorized read permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPermission'
              examples:
                SuccessfulAuthorizedReadPermission:
                  value:
                    permissions: 'read.full'
                    status: 'success'
                    uuid: 'ad6c9181-530c-4a8f-9fbd-5e8e8a400d4a'
                UnauthorizedReadPermission:
                  value:
                    permissions: 'read.none'
                    status: 'success'
                    uuid: 'ad6c9181-530c-4a8f-9fbd-5e8e8a400d4a'
                InvalidUUIDError:
                  value:
                    error: true
                    message: 'Invalid last4 or last name!'
  /v2/sessions:
    post:
      tags:
        - Create session for Check-in
      summary: Creates a session for patient to check-in for an appointment
      operationId: create_check_in_session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionBody'
      responses:
        '200':
          description: Session created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorisedReadSession'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSessionError'
  /v2/patient_check_ins/${uuid}:
    get:
      tags:
        - Get Check-in
      summary: Returns patient Check-in data for a given UUID
      operationId: get_check_in
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid for getting the patient check-in data
          schema:
            type: string
            example: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
      responses:
        '200':
          description: Check-in data with given UUID retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCheckInData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPermission'
              examples:
                UnauthorizedReadPermission:
                  value:
                    permissions: 'read.none'
                    status: 'success'
                    uuid: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
              examples:
                DataExpired:
                  value:
                    status: 403
                    data:
                      error: true
                      message: 'data has expired'
                DataInaccesible:
                  value:
                    status: 403
                    data:
                      error: true
                      message: 'data is inaccesible right now due to a time constraint'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                status: 404
                data:
                  error: true
                  message: 'id not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                status: 500
                data:
                  error: true
                  message: 'Internal service error message'
  /v2/patient_check_ins:
    post:
      tags:
        - Create Check-in
      summary: Checks in a patient for their upcoming appointment
      operationId: create_check_in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckInBody'
      responses:
        '200':
          description: Patient checked in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulCheckIn'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                status: 401
                data:
                  error: true
                  message: 'Token verification failed: error message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                LorotaError:
                  value:
                    status: 500
                    data:
                      error: true
                      message: 'There was a problem: error message from lorota'
                VistaError:
                  value:
                    status: 500
                    data:
                      error: true
                      message: 'Veteran check in failed'
  /v2/pre_check_ins/${uuid}:
    get:
      tags:
        - Get PreCheck-in
      summary: Returns patient PreCheck-in data for a given UUID
      operationId: get_pre_check_in
      parameters:
        - name: uuid
          in: path
          required: true
          description: uuid for getting the patient pre-check-in data
          schema:
            type: string
            example: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
      responses:
        '200':
          description: Pre-Check-in data with given UUID retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCheckInData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPermission'
              examples:
                UnauthorizedReadPermission:
                  value:
                    permissions: 'read.none'
                    status: 'success'
                    uuid: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Forbidden'
              examples:
                DataExpired:
                  value:
                    status: 403
                    data:
                      error: true
                      message: 'data has expired'
                DataInaccesible:
                  value:
                    status: 403
                    data:
                      error: true
                      message: 'data is inaccesible right now due to a time constraint'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                status: 404
                data:
                  error: true
                  message: 'id not found'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              example:
                status: 500
                data:
                  error: true
                  message: 'Internal service error message'
  /v2/pre_check_ins:
    post:
      tags:
        - Create PreCheck-in
      summary: Confirm Pre Check-in data
      operationId: create_pre_check_in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePreCheckInBody'
      responses:
        '200':
          description: Pre Check-in data was confirmed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulPreCheckIn'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPermission'
              examples:
                UnauthorizedReadPermission:
                  value:
                    permissions: 'read.none'
                    status: 'success'
                    uuid: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
              examples:
                ChipError:
                  value:
                    status: 500
                    data:
                      error: true
                      message: 'There was a problem: error message from chip'
                VistaError:
                  value:
                    status: 500
                    data:
                      error: true
                      message: 'Pre check-in failed'
  /v0/travel_claims:
    post:
      tags:
        - Submit Travel Claims
      summary: Submit Travel Claims
      operationId: submit_travel_claims
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelClaimsBody'
      responses:
        '202':
          description: Submitted travel claims successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulTravelClaim'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadPermission'
              examples:
                UnauthorizedReadPermission:
                  value:
                    permissions: 'read.none'
                    status: 'success'
                    uuid: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'

components:
  schemas:
    ReadPermission:
      type: object
      properties:
        permissions:
          type: string
          example: 'read.full'
        status:
          type: string
          example: 'success'
        uuid:
          type: string
          example: 'ad6c9181-530c-4a8f-9fbd-5e8e8a400d4a'
      required:
        - permissions
        - status
        - uuid
    CreateSessionBody:
      type: object
      properties:
        session:
          type: object
          required:
            - uuid
            - last4
            - lastName
          properties:
            uuid:
              type: string
              example: '25c4de3b-33fd-4521-b758-6133055a453d'
            last4:
              type: string
              example: '1234'
            last_name:
              type: string
              example: 'bob'
      required:
        - session
    CreateCheckInBody:
      type: object
      properties:
        patient_check_ins:
          type: object
          required:
            - uuid
            - appointmentIen
          properties:
            uuid:
              type: string
              example: 'a7ed2558-3be5-473e-b958-2c8c9728ac3e'
            appointment_ien:
              type: string
              example: '460'
    CreatePreCheckInBody:
      type: object
      properties:
        pre_check_in:
          type: object
          required:
            - uuid
            - demographicsUpToDate
            - nextOfKinUpToDate
            - checkInType
          properties:
            uuid:
              type: string
              example: 'a7ed2558-3be5-473e-b958-2c8c9728ac3e'
            demographicsUpToDate:
              type: boolean
              example: true
            nextOfKinUpToDate:
              type: boolean
              example: true
            checkInType:
              type: string
              example: 'preCheckIn'
    TravelClaimsBody:
      type: object
      properties:
        travel_claims:
          type: object
          required:
            - uuid
            - appointmentDate
          properties:
            uuid:
              type: string
              example: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
            appointmentDate:
              type: string
              example: '2022-10-22'
    AuthorisedReadSession:
      type: object
      properties:
        permissions:
          type: string
          example: 'read.full'
        status:
          type: string
          example: 'success'
        uuid:
          type: string
          example: '25c4de3b-33fd-4521-b758-6133055a453d'
      required:
        - permissions
        - status
        - uuid
    SuccessfulCheckIn:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: string
          example: 'Checkin successful'
      required:
        - data
        - status
    SuccessfulPreCheckIn:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: string
          example: 'Pre-checkin successful'
      required:
        - data
        - status
    SuccessfulTravelClaim:
      type: object
      properties:
        status:
          type: integer
          example: 202
    GetCheckInData:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: object
          properties:
            id:
              type: string
              example: 'e602d9eb-8a31-384f-1637-33ab0b507e0d'
            scope:
              type: string
              example: 'read.full'
            payload:
              properties:
                demographics:
                  type: object
                  $ref: '#/components/schemas/Demographics'
                appointments:
                  type: array
                  items:
                    $ref: '#/components/schemas/Appointment'
                  example:
                    - appointmentIEN: '460'
                      zipCode: '96748'
                      clinicName: 'Family Wellness'
                      startTime: '2021-08-19T10:00:00'
                      clinicPhoneNumber: '555-555-5555'
                      clinicFriendlyName: 'Health Wellness'
                      facility: 'VEHU DIVISION'
                      appointmentCheckInStart: '2021-08-19T09:030:00'
                      appointmentCheckInEnds: '2021-08-19T10:050:00'
                      eligibility: 'ELIGIBLE'
                      status: ''
      required:
        - data
        - status
    Demographics:
      properties:
        nextOfKin1:
          allOf:
            - $ref: '#/components/schemas/NextOfKin'
            - example:
                name: Joe
                relationship: Brother
                phone: 738-573-2849
                workPhone: 564-438-5739
                street1: '432 Horner Street'
                street2: 'Apt 53'
                street3: ''
                city: 'Akron'
                county: 'OH'
                state: 'OH'
                zip: '44308'
                zip4: '4252'
                country: 'USA'
        nextOfKin2:
          allOf:
            - $ref: '#/components/schemas/NextOfKin'
            - example:
                name: Alicia
                relationship: Sister
                phone: 335-532-6432
                workPhone: 525-224-5322
                street1: '2819 Randall Drive'
                street2: ''
                street3: ''
                city: 'Honolulu'
                county: 'HI'
                state: 'HI'
                zip: '96813'
                zip4: '4215'
                country: 'USA'
        emergencyContact:
          allOf:
            - $ref: '#/components/schemas/EmergencyContact'
            - example:
                name: Michael
                relationship: Spouse
                phone: 415-322-9968
                workPhone: 630-835-1623
                street1: '3008 Millbrook Road'
                street2: ''
                street3: ''
                city: 'Wheeling'
                county: 'IL'
                state: 'IL'
                zip: '60090'
                zip4: '7241'
                country: 'USA'
        mailingAddress:
          allOf:
            - $ref: '#/components/schemas/Address'
            - example:
                street1: '1025 Meadowbrook Mall Road'
                street2: ''
                street3: ''
                city: 'Beverly Hills'
                county: 'Los Angeles'
                state: 'CA'
                zip: '60090'
                country: 'USA'
        homeAddress:
          allOf:
            - $ref: '#/components/schemas/Address'
            - example:
                street1: '3899 Southside Lane'
                street2: ''
                street3: ''
                city: 'Los Angeles'
                county: 'Los Angeles'
                state: 'CA'
                zip: '90017'
                country: 'USA'
        homePhone:
          type: string
          example: '323-743-2569'
        mobilePhone:
          type: string
          example: '323-896-8512'
        workPhone:
          type: string
          example: '909-992-3911'
        emailAddress:
          type: string
          example: 'utilside@goggleappsmail.com'
    NextOfKin:
      allOf:
        - $ref: '#/components/schemas/Contact'
        - type: object
          properties:
            address:
              allOf:
                - $ref: '#/components/schemas/Address'
                - type: object
                  properties:
                    zip4:
                      type: string
    EmergencyContact:
      allOf:
        - $ref: '#/components/schemas/Contact'
        - type: object
          properties:
            address:
              allOf:
              - $ref: '#/components/schemas/Address'
              - type: object
                properties:
                  zip4:
                    type: string
    Contact:
      type: object
      properties:
        name:
          type: string
        relationship:
          type: string
        phone:
          type: string
        workPhone:
          type: string
    Address:
      properties:
        street1:
          type: string
        street2:
          type: string
        street3:
          type: string
        city:
          type: string
        county:
          type: string
        state:
          type: string
        zip:
          type: string
        country:
          type: string
    Appointment:
      type: object
      properties:
        appointmentIEN:
          type: string
        zipCode:
          type: string
        clinicName:
          type: string
        startTime:
          type: string
        clinicPhoneNumber:
          type: string
        clinicFriendlyName:
          type: string
        facility:
          type: string
        appointmentCheckInStart:
          type: string
        appointmentCheckInEnds:
          type: string
        eligibility:
          type: string
        status:
          type: string
    CreateSessionError:
      type: object
      properties:
        error:
          type: boolean
          example: 'true'
        message:
          type: string
          example: 'Invalid last4 or last name!'
      required:
        - error
        - message
    Unauthorized:
      $ref: "#/components/schemas/Errors"
    Forbidden:
      $ref: "#/components/schemas/Errors"
    NotFound:
      $ref: "#/components/schemas/Errors"
    InternalServerError:
      $ref: "#/components/schemas/Errors"
    Errors:
      properties:
        status:
          type: integer
        data:
          type: object
          properties:
            error:
              type: boolean
            message:
              type: string
      required:
        - status
        - data
