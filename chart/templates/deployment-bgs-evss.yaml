{{- if .Values.web.bgsEvss.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vets-api-web-bgs-evss
  name: vets-api-web-bgs-evss
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: vets-api-web-bgs-evss
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: vets-api-web-bgs-evss
      annotations:
        ad.datadoghq.com/vets-api-web.checks: |-
          {
            "puma": {
              "instances": [
                {
                  "control_url": "http://%%host%%:9293/stats"
                }
              ]
            }
          }
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - vets-api-web-bgs-evss
                topologyKey: kubernetes.io/hostname
      securityContext:
        fsGroup: 1000
      volumes:
{{ toYaml .Values.common.volumes | indent 8 }}
      {{- if .Values.mockData.enabled }}
      initContainers:
{{ toYaml .Values.common.initContainers | indent 8 }}
      {{- end }}
      containers:
        - image: "{{ .Values.image }}:{{ .Values.image_tag }}"
          imagePullPolicy: Always
          name: vets-api-web
          ports:
            - containerPort: 3000
              name: web
            - containerPort: 9293
              name: stats
          livenessProbe: #ensure app is serving requests properly and know when to restart a container
            httpGet:
              path: /stats
              port: stats
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe: #ensure container is ready to start accepting traffic
            httpGet:
              path: /
              port: web
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
{{ toYaml .Values.web.resources | indent 12 }}
          volumeMounts:
 {{ toYaml .Values.common.volumeMounts | indent 12 }}
          env:
            - name: GIT_REVISION
              value: {{ .Values.image.tag}}
{{ toYaml .Values.web.envSecrets | indent 12 }}
          {{- range $keys, $key := .Values.common.secrets }}
          {{- range $secrets, $secret := $key }}
            - name: {{ $secret.env_var }}
              valueFrom:
                secretKeyRef:
                  name: {{ $keys }}
                  key:  {{ $secret.name }}
          {{- end }}
          {{- end }}
   {{- if .Values.web.socatProxyEnabled }}
{{ toYaml .Values.common.socatProxy | indent 8 }}
        {{- end }}
      serviceAccountName: vets-api-web-bgs-evss
{{- end }}
