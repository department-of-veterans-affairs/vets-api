name: Build, Push, & Deploy
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Code Checks"]
    branches: ["*"]
    types: [completed]
permissions:
  contents: read
jobs:
  compare_sha:
    runs-on: ubuntu-latest
    name: Compare sha
    steps:
      - name: Compare commit ids
        run: |
          echo "github.sha: ${{ github.sha }}"
          echo "github.event.push.head_commit.id: ${{ github.event.push.head_commit.id }}"
          echo "github.event.pull_request.merge_commit_sha: ${{ github.event.pull_request.merge_commit_sha }}"
          echo "github.event.head_commit.id: ${{ github.event.head_commit.id }}"
          echo "github.event.workflow_run.head_commit.id: ${{ github.event.workflow_run.head_commit.id }}"

  build_and_push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Build and Push
    permissions:
      contents: write # Explicit permission for git operations
    env:
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: ${{ secrets.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        run: echo "VETS_API_USER_ID=$(id -u)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Git Version
        id: version
        uses: codacy/git-version@2.8.0
        with:
          release-branch: master

      - name: Echo the version
        run: |
          echo ${{ steps.version.outputs.version }}

      - name: Create git tag if on master
        if: github.ref == 'refs/heads/master'
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      - name: Login to ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build Postman Docker Image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          context: ./postman
          file: ./postman/Dockerfile
          push: true
          tags: |
            ${{ steps.ecr-login.outputs.registry }}/dsva/vets-api-postman:${{ github.event.workflow_run.head_commit.id }}
      - name: Build vets-api Docker Image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
        with:
          build-args: |
            BUNDLE_ENTERPRISE__CONTRIBSYS__COM=${{ env.BUNDLE_ENTERPRISE__CONTRIBSYS__COM }}
            USER_ID=${{ env.VETS_API_USER_ID }}
            RAILS_ENV=production
          context: .
          push: true
          tags: |
            ${{ steps.ecr-login.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.event.workflow_run.head_commit.id }}
            ${{ steps.ecr-login.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ steps.version.outputs.version }}
          cache-from: |
            type=registry,ref=${{ steps.ecr-login.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}
          cache-to: type=inline,mode=max
  deploy:
    needs: build_and_push
    if: github.ref == 'refs/heads/master' && ${{ github.event.workflow_run.conclusion == 'success' }}
      uses: department-of-veterans-affairs/vets-api/.github/workflows/deploy-template.yml@master
    with:
      ecr_repository: "vets-api"
      manifests_directory: "vets-api"
      auto_deploy_envs: "dev staging prod sandbox"
      commit_sha: ${{ github.event.workflow_run.head_commit.id }}
    secrets:
      aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
