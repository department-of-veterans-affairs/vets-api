version: '3'
services:
  redis:
    image: redis:3.2-alpine
  postgres:
    image: mdillon/postgis:9.6-alpine
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
  sql52:
    image: dsva/vets-api-sql52-stubbed:latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "password1!"
    ports:
      - "1433:1433"
  vets-api:
    build:
      context: .
      args:
        sidekiq_license: "${BUNDLE_ENTERPRISE__CONTRIBSYS__COM}"
    image: "vets-api:${DOCKER_IMAGE:-latest}"
    volumes:
      - ".:/src/vets-api"
    environment:
      "Settings.sql_52.username": "sql52user"
      "Settings.sql_52.password": "sql52password!"
      "Settings.sql_52.hostname": "sql52"
      "Settings.sql_52.port": "1433"
      "Settings.database_url": "postgis://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DATABASE:-vets_api_development}?pool=4"
      "Settings.test_database_url": "postgis://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DATABASE:-vets_api_test}?pool=4"
      "Settings.saml.cert_path": "/src/vets-api/spec/support/certificates/ruby-saml.crt"
      "Settings.saml.key_path": "/src/vets-api/spec/support/certificates/ruby-saml.key"
      "Settings.redis.host": "redis"
      "Settings.redis.port": "6379"
      "Settings.binaries.clamdscan": "clamscan"           # Not running a separate process within the container for clamdscan, so we use clamscan which requires no daemon
      POSTGRES_HOST: "${POSTGRES_HOST:-postgres}"
      POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
      CI:
      RAILS_ENV:
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
