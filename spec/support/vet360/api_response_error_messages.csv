Message Code,Sub Code,Message Key,Type,Status,State,Queue,Message Description
 CORE100      ,     _CUF_UNEXPECTED_ERROR                   , _CUF_UNEXPECTED_ERROR                                ,FATAL,400, REJECTED          , RECEIVED_ERROR_QUEUE , There was an error encountered processing the Request.
 CORE101      ,                        , _CUF_ACCESS_DENIED                                   , ERROR         ,403, REJECTED          , RECEIVED_ERROR_QUEUE , You do not have access to perform the requested operation.
 CORE102      ,                        , _CUF_DATA_INTEGRITY_VIOLATION                        , ERROR         ,400,COMPLETED_FAILURE        , RECEIVED_ERROR_QUEUE , The operation could not be fulfilled due to a data integrity violation.{0}
 CORE103      ,                        , _CUF_NOT_FOUND                                       , ERROR    , 400/200       , REJECTED        , RECEIVED_ERROR_QUEUE , the {0} for id/criteria {1} could not be found. please correct your request and try again!
 CORE104      ,                        , _CUF_NO_CHANGES_DETECTED                             , INFO          ,400, REJECTED          ,COMPLETED_NO_CHANGES_DETECTED," Your request was received and processed without error, however no differences were detected between current data and the data you sent. This message is informational only, please verify your request if you believe you sent actual changes that should be applied. "
 CORE105      ,                        , _CUF_REQUEST_MALFORMED                               , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , The request was malformed and could not be processed.
 CORE106      ,                        , _CUF_REQUEST_NULL                                    , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , The request cannot be null. Please correct your request and try again.
 CORE107      , versionHash            , _CUF_VERSION_HASH_MISMATCH                           , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , Version Hash mismatch for Type {0} with a ID of {1}. Was expecting a Version Hash of {2} but received {3}.
 CORE108      , versionHash            , _CUF_VERSION_HASH_MISSING                            , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , Version Hash is null for Type {0} with a ID of {1}.
 CORE109      ,                        , _CUF_INCORRECT_RESULTSET_SIZE                        , ERROR         ,400, RECEIVED_FAILURE  ,                      ,
 CORE110      ,                        , _CUF_SOURCE_DATE_VERSION_VIOLATION                   , ERROR         ,400, , RECEIVED_ERROR_QUEUE ," Source dates are invalid for Type {0} with a ID of {1}. Previous source date was {2} but received new source date of {3}. Source dates may not be null, and new must be greater than the previous. Please correct your request and try again! "
 CORE300      , bio                    , bio.NotNull                                          , ERROR         ,               ,                   ,                      ,
 CORE301      , id (of the bio)        , id.NotNull                                           , ERROR         ,               ,                   ,                      ,
 CORE302      , pullByExampleBio       , pullByExampleBio.NotNull                             , ERROR         ,               ,                   ,                      ,
 CORE303      , txAuditId              , txAuditId.NotNull                                    , ERROR         ,               ,                   ,                      ,
 CORE500      , sourceDate             , [NODE_PATH].sourceDate.NotNull                       , ERROR         ,               ,                   ,                      ,
 CORE501      , orginatingSourceSys    , [NODE_PATH].originatingSourceSystem.Size             , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , originatingSourceSys must be between 0 and 255 characters
 CORE502      , sourceSysUser          , [NODE_PATH].sourceSystemUser.Size                    , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , sourceSysUser must be between 0 and 255 characters
 CORE503      , SourceSys              , [NODE_PATH].SourceSystem.Size                        , ERROR         ,400, REJECTED          , RECEIVED_ERROR_QUEUE , SourceSys must be between 0 and 255 characters
,,,,,,,
PERS100,vet360Id,_PERSON_NOT_FOUND,ERROR,404,REJECTED,RECEIVED_ERROR_QUEUE,Person not found
PERS101,vet360Id,vet360Id.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Vet360 ID may not be null
PERS104,effectiveStartDate,effectiveStartDate.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective Start Date may not be null
PERS300,effectiveStartDate,telephones[#].CheckEffectiveStartDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveStartDate can not be more than 6 months after current date.
PERS301,effectiveEndDate,telephones[#].CheckEffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveEndDate must be after EffectiveStartDate.
PERS302,confirmationDate,telephones[#].CheckConfirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date can not be in future
PERS303,effectiveEndDate,effectiveEndDate.Future,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective End Date must be in future
PERS304,confirmationDate,confirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,ConfirmationDate can not be greater than sourceDate
,,,,,,,
EMAIL101,emailAddressText,emailAddressText.NotNull,ERROR,400,REJECTED,,Email Address may not be null
EMAIL102,effectiveStartDate,effectiveStartDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveStartDate is invalid
EMAIL103,effectiveEndDate,effectiveEndDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveEndDate is invalid
EMAIL104,emailMessagePermInd,emailPermInd.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Email Permission Indicator must be True or False
EMAIL105,emailStatusCode,emailStatusCode.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"Email Status Code must match ""(no known problem)(returned undeliverable)(incorrect address)""                                                                                                                                                                                "
EMAIL106,confDate,confDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date is invalid
EMAIL107,effectiveStartDate,effectiveStartDate.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveStartDate may not be null
EMAIL108,sourceDate,sourceDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,SourceDate is invalid
EMAIL109,sourceDate,sourceDate.Invalid,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Source Date is missing time stamp
EMAIL110,emailId,emailId,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Email ID provided does not exist
EMAIL200,emailId,emailId.Null,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Email ID in email bio must be null for inserts/adds
EMAIL201,emailId,emailId.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Email ID may not be null
EMAIL202,effectiveStartDate,CheckEffectiveStartDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveStartDate can not be more than 6 months after sourceDate
EMAIL203,effectiveEndDate,EffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveEndDate cannot be present when adding a email
EMAIL204,confDate,CheckConfirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date can not be in future
EMAIL205,effectiveEndDate,CheckEffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveEndDate can not be in past and must be after EffectiveStartDate
EMAIL206,confDate,CheckConfirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date can not be greater than sourceDate
EMAIL300,effectiveEndDate,Emailinactive,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot modify an existing inactive record
EMAIL301,EmailAddressType,EmailAddressType,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Can not insert a record for an email address that already exists. Pull the email record and update it using the emailId provided.
EMAIL302,emailAddressText,emailAddressText.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EmailAddressText must be between 0 and 255 characters
EMAIL303,emailAddressText,CheckEmailLocalPart,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,AlphaNumeric LocalPart of email must be <=64 Char
EMAIL304,emailAddressText,CheckEmailDomain,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Alphabetic ToplevelDomainName must be <=63 Char
EMAIL305,emailAddressText,CheckEmailAddress,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"EmailAddressText cannot have 2 @ symbols, must have at least one period '.' after @ character, and cannot have  '.%' or '%.' or '%..%' or "" ( ) , : ; < > @ [ ] \ or space unless in a quoted string in local part. "
EMAIL306,emailAddressText,DuplicateEmailAddress,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot accept a request with multiple emailAddress records.
EMAIL307,EmailInactive,EmailInactive,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot modify an existing inactive record.
,,,,,,,
PHON100,internationalInd,telephones[#].internationalIndicator.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,International Indicator may not be null
PHON101,internationalInd,telephones[#].internationalIndicator.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,International Indicator must be true or false
PHON102,countryCode,telephones[#].countryCode.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code must be between 1 and 3 characters
PHON103,countryCode,telephones[#].countryCode.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code must be one of valid country codes
PHON104,areaCode,telephones[#].areaCode.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,size must be between 3 and 3
PHON105,phoneNumber,telephones[#].phoneNumber.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Phone Number may not be null
PHON106,phoneNumber,telephones[#].phoneNumber.pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"must match ""[^a-za-z]+"""
PHON107,phoneNumber,telephones[#].phoneNumber.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Phone Number must be between 1 and 14 characters
PHON108,phoneNumberExt,telephones[#].phoneNumberExt.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"must match ""^[a-za-z0-9]+$"""
PHON109,phoneType,telephones[#].phoneType.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Phone Type may not be null
PHON110,phoneType,telephones[#].phoneType.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"Phone Type must match ""(Mobile)(Work)(Fax)(Home)(Pager)(Temporary)""                                                                                                                                                                                                              "
PHON111,effectiveStartDate,telephones[#].effectiveStartDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective Start Date is invalid
PHON112,effectiveEndDate,telephones[#].effectiveEndDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective End Date is invalid
PHON113,textMessageCapableInd,telephones[#].textMessageCapableInd.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Text Message Capable must be True or False
PHON114,textMessagePermInd,telephones[#].textMessagePermInd.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Text Message Permission must be True or False
PHON115,voiceMailAcceptableInd,telephones[#].voiceMailAcceptableInd.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Voice Mail Acceptable must be True or False
PHON116,ttyInd,telephones[#].ttyInd.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,TTY Indicator must be True or False
PHON117,connectionStatusCode,telephones[#].connectionStatusCode.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"Connection Status must match ""(no known problem)(no answer)(non working number)(no correct number null)""                                                                                                                                                                                "
PHON118,confDate,telephones[#].confDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date is invalid
PHON119,sourceDate,telephones[#].sourceDate.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Source Date may not be null
PHON120,sourceDate,telephones[#].sourceDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Source Date is invalid
PHON121,sourceDate,telephones[#].sourceDate.Invalid,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Source Date is missing time stamp
PHON123,telephoneId,telephones[#].telephoneId,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Telephone ID provided does not exist
PHON124,telephoneId,telephones[#].telephoneId.Null,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Telephone ID in telephone bio must be null for inserts/adds
PHON125,telephoneId.NotNull,telephones[#].telephoneId.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,may not be null
PHON126,areaCode,telephones[#].areaCode.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,"must match ""[0-9]+"""
PHON200,effectiveStartDate,telephones[#].CheckEffectiveStartDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveStartDate can not be more than 6 months after current date
PHON204,effectiveEndDate,telephones[#].EffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective End Date cannot be present when adding a non temporary phone
PHON205,areaCode,telephones[#].CheckAreaCode,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Area Code contains an invalid value
PHON206,confDate,telephones[#].CheckConfirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,ConfirmationDate can not be in future
PHON207,phoneNumber,telephones[#].DomesticPhoneNumberInvalid,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Domestic phone numbers size must be 7 characters
PHON208,phoneNumber,telephones[#].InternationalPhoneNumberInvalid,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,International phone number must have 12 characters or less
PHON209,internationalInd,telephones[#].CheckPhoneNumberDomesticIndicated,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Domestic numbers must have an area code and country code must be 1
PHON210,internationalInd,telephones[#].CheckPhoneNumberIternationalIndicated,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,International numbers must have a valid country code that is not 1 and no area code
PHON300,PhoneInactive,telephones[#].PhoneInactive,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot modify an existing inactive record.
PHON301,TelephoneType,telephones[#].telephoneType,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Can not insert a record for a phone type that already exists. Pull the phone record and update it using the telphoneId provided.
PHON302,effectiveEndDate,telephones[#].CheckEffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveEndDate can not be in past and must be after EffectiveStartDate
PHON303,effectiveEndDate,telephones[#].CheckEffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,EffectiveEndDate must be in future for temporary phone type
PHON304,phoneType,DuplicateTelephoneType,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot accept a request with multiple phones of the same type.
PHON305,phoneType,telephones[#].phoneType,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot update record if phoneType is not matching
,,,,,,,
PERM101,permissionId,permissions[#].permissionId.Null,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Permission ID in permission bio must be null for inserts/adds
,,,,,,,
ADDR101,AddressType,addresses[#].AddressType.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Type may not be null
ADDR102,effectiveStartDate,addresses[#].effectiveStartDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective Start Date is invalid
ADDR103,effectiveEndDate,addresses[#].effectiveEndDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective End Date is invalid
ADDR104,confDate,addresses[#].confDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date is invalid
ADDR105,sourceDate,addresses[#].sourceDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Source Date is invalid
ADDR106,sourceDate,addresses[#].sourceDate.Invalid,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Missing time stamp
ADDR107,addressId,addresses[#].addressId,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Id provided does not exist
ADDR146,addressPOU,addresses[#].addressPOU,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Purpose of Use cannot be null
ADDR110,addressPOU,addresses[#].addressPOUSize,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Purpose of Use cannot be more than 35 characters
ADDR108,addressLine1,addresses[#].addressLine1Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Line 1 cannot be more than 100 characters on input and cannot be more than 40 for storage
ADDR109,addressLine1,addresses[#].addressLine1Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Line 1 must be alphanumeric
ADDR110,addressLine2,addresses[#].addressLine2.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Line 2 cannot be more than 100 characters on input and cannot be more than 40 for storage
ADDR111,addressLine2,addresses[#].addressLine2.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Line 2 must be alphanumeric
ADDR112,addressLine3,addresses[#].addressLine3.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Line 3 cannot be more than 100 characters on input and cannot be more than 40 for storage
ADDR113,addressLine3,addresses[#].addressLine3.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Address Line 3 must be alphanumeric
ADDR114,badAddressIndicator,addresses[#].badAddressIndicator.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Bad Address Indicator must be Yes or Null
ADDR115,badAddressIndicator,addresses[#].badAddressIndicator.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Bad Address indicator cannot be more than 35 characters
ADDR116,badAddressType,addresses[#].badAddressType.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Bad Address indicator cannot be more than 35 characters
ADDR117,badAddressType,addresses[#].badAddressType.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Bad Address indicator must be alphanumeric
ADDR118,cityName,addresses[#].cityName.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,City Name cannot be more than 100 characters on input and cannot be more than 40 for storage
ADDR119,cityName,addresses[#].cityName.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,City Name must be alphanumeric
ADDR120,stateCode,addresses[#].stateCode.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,State cannot be more than 2 characters
ADDR121,stateCode,addresses[#].stateCode.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,State code must be alphanumeric
ADDR122,zipCode5,addresses[#].zipCode5.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,ZipCode 5 cannot be more than 5 characters
ADDR123,zipCode5,addresses[#].zipCode5.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,ZipCode 5 must be alphanumeric
ADDR124,zipCode4,addresses[#].zipCode5.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,zipCode4 cannot be more than 4 characters
ADDR125,zipCode4,addresses[#].zipCode5.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,zipCode4 must be alphanumeric
ADDR126,provinceName,addresses[#].provinceName.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Province Name Address Line 1 cannot be more than 100 characters on input and cannot be more than 40 for storage
ADDR127,provinceName,addresses[#].provinceName.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Province Name must be alphanumeric
ADDR128,intPostalCode,addresses[#].intPostalCode.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Int Postal Code Address Line 1 cannot be more than 100 characters on input and cannot be more than 40 for storage
ADDR129,intPostalCode,addresses[#].intPostalCode.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Int Postal Code must be alphanumeric
ADDR130,countryName,addresses[#].countryName.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Name cannot be more than 35 characters
ADDR131,countryName,addresses[#].countryName.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Name must be alphanumeric
ADDR132,countryCodeFIPS,addresses[#].countryCodeFIPS.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code FIPS cannot be more than 3 characters
ADDR133,countryCodeFIPS,addresses[#].countryCodeFIPS.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code FIPS must be alphanumeric
ADDR134,countryCodeISO2,addresses[#].countryCodeISO2.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code ISO2 cannot be more than 2 characters
ADDR135,countryCodeISO2,addresses[#].countryCodeISO2.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code ISO2 must be alphanumeric
ADDR136,countryCodeISO3,addresses[#].countryCodeISO3.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code ISO3 cannot be more than 3 characters
ADDR137,countryCodeISO3,addresses[#].countryCodeISO3.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Code ISO3 must be alphanumeric
ADDR138,latitude,addresses[#].latitude.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Latitude cannot be more than 35 characters
ADDR139,latitude,addresses[#].latitude.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Latitude must be alphanumeric
ADDR140,longitude,addresses[#].longitude.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Longitude cannot be more than 35 characters
ADDR141,longitude,addresses[#].longitude.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Longitude must be alphanumeric
ADDR142,geocodePrecision,addresses[#].geocodePrecision.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Geocode Precision cannot be more than 35 characters
ADDR143,geocodePrecision,addresses[#].geocodePrecision.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Geocode Precision must be alphanumeric
ADDR144,geocodeDate,addresses[#].geocodeDate.Size,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Geocode Date cannot be more than 35 characters
ADDR145,geocodeDate,addresses[#].geocodeDate.Pattern,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Geocode Date must be a date
ADDR146,lookupValueCountry,addresses[#].countrylookupmismatch,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Country Value does not match Lookup Service
ADDR147,lookupValueCounty,addresses[#].countylookupmismatch,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,County Value does not match Lookup Service
ADDR148,lookupValueState,addresses[#].statelookupmismatch,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,State Value does not match Lookup Service
ADDR149,lookupValueZipCode,addresses[#].zipcodelookupmismatch,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Zip Code Value does not match Lookup Service
ADDR150,unknownAddressUAM,addresses[#].unknownAddressUAM,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Unknown Address per UAM Address Validation
ADDR200,addressId,addresses[#].addressId.Null,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,AddressId in Email bio must be null for inserts/adds
ADDR201,addressId,addresses[#].addressId.NotNull,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,AddressID may not be null
ADDR202,effectiveStartDate,addresses[#].CheckEffectiveStartDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective Start Date can not be more than 6 months after source Date
ADDR203,effectiveEndDate,addresses[#].EffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective End Date cannot be present when adding an address
ADDR204,confDate,addresses[#].CheckConfirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confirmation Date can not be in future
ADDR205,effectiveEndDate,addresses[#].CheckEffectiveEndDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Effective End Date can not be in past and must be after EffectiveStartDate
ADDR301,AddressPOU,addresses[#],ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Can not insert a record for an address POU that already exists. Pull address record and update it using addressId provided.
ADDR206,confDate,addresses[#].CheckConfirmationDate,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,ConfirmationDate can not be greater than sourceDate
ADDR304,AddressPOU,addresses[#].DuplicateAddressPOU,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot accept a request with multiple addresses of same POU
ADDR300,AddressInactive,addresses[#].AddressInactive,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot modify an existing inactive record
ADDR305,,addresses[#].deliveryPointNotConfirmed,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Delivery Point is Not Confirmed for Domestic Residence
ADDR306,,addresses[#].lowConfidenceScore,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Confidence Score less than 80
ADDR307,,addresses[#].additionalInput,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Additional Input found please review
ADDR308,,addresses[#}.multipleaddresseses,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Multiple Addresses Returned
ADDR309,,addresses[#].UAMunavailable,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,UAM address validation not available
ADDR300,effectiveEndDate,addresses[#].AddressInactive,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Cannot modify an existing inactive record
MVI100,MviIdentifierInvalid,MviIdentifierInvalid,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Invalid request identifier.The organization identifier (oid) was invalid
MVI101,,,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Person found in MVI but vet360ID returned did not match submitted vet360ID
MVI200,,,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,MVI Service returned an error
MVI201,MviNotFound,MviNotFound,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,Person with identifier requested was not found in MVI
MVI202,,,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,MVI Service returned duplicate correlations for requested identifier
MVI203,,,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,MVI Service returned an error response for requested identifier
MVI204,,,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,MVI Service returned an existing Vet360 ID Identifier
MVI300,MviPersonDeceased,MviPersonDeceased,ERROR,400,REJECTED,RECEIVED_ERROR_QUEUE,MVI Service returned that requested veteran is deceased
