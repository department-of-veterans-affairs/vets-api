inherit_from: .rubocop_todo.yml

# in rakelib/lint.rake we require rubocop-thread_safety for the CI env only,
# because codeclimate does not support rubocop-thread_safety
require:
  - rubocop-rails
  - rubocop-rspec
  - rubocop-thread_safety

AllCops:
  TargetRailsVersion: 6.0
  Include:
    - '**/Gemfile'
    - '**/config.ru'
    - '**/Rakefile'
    - '**/*.rake'
    - '**/*.rb'
  Exclude:
    - 'bin/*'
    - db/schema.rb
    - db/seeds.rb
    - db/migrate/*.rb
    - 'script/**/*'
    - 'vendor/**/*'

# This allows you to use have writers like self.method_name(name) vs self.method_name=(name)
Style/TrivialAccessors:
  AllowDSLWriters: true

# This is the rubocop default but putting it here explicitly
# strong benefit for code readability and speed in reviewing PRs for code review
# only use double quote when doing interpolation or complex escape sequences
Style/StringLiterals:
  EnforcedStyle: single_quotes

Style/Documentation:
  Enabled: false

Style/ClassAndModuleChildren:
  Enabled: false

# This cop forces you to put a return at the beginning of a block of code rather than having an if statement
# whose body carries to the end of the function. For example:
#
# def foo
#   ...
#   if test
#     ...
#   end
# end
#
# would be considered bad, and the cop would force you to put a `return if !test` before that block and
# then remove the if. The problem is that this hides intent, since the if test does have a purpose in
# readability, and it could also be easier for future changes to miss the return statement and add code
# after it expecting it to be executed.
Style/GuardClause:
  Enabled: false

# This is pretty much the same thing as the one above. Inside a loop, it forces you to use next to skip
# iteration rather than using an if block that runs to the end of the loop, and it suffers from the same
# problems as above.
Style/Next:
  Enabled: false

Naming/VariableNumber:
  Enabled: false

# This forces you to replace things like: `[1, 2, 3].length == 0` with `[1,2,3].empty?`. The problem is that
# not all things that implement length also implement empty? so you will get errors that cannot be resolved,
# and the cop will encourage you to do things that are incorrect.
Style/ZeroLengthPredicate:
  Enabled: false

Layout/LineLength:
  Max: 120
  Exclude:
    - 'Gemfile'

Rails:
  Enabled: true

Rails/Output:
  Exclude:
    - 'lib/tasks/**/*'

Metrics/MethodLength:
  Max: 20
  Exclude:
    - 'spec/support/form1010cg_helpers/build_claim_data_for.rb'

Metrics/ClassLength:
  Max: 400

Metrics/AbcSize:
  Max: 40

# removing rule because get_session implies HTTP GET, and informs method
Naming/AccessorMethodName:
  Enabled: false

Rails/LexicallyScopedActionFilter:
  Exclude:
    - "app/controllers/concerns/filterable.rb"

# Blocks are limited to 25 lines or less
# removing block length rule for rspec DSL
Metrics/BlockLength:
  Exclude:
    - 'spec/**/*.rb'
    - 'rakelib/**/*.rake'
    - 'lib/tasks/**/*.rake'
    - 'config/**/*.rb'
    - 'app/swagger/**/*.rb'
    - 'app/controllers/v0/apidocs_controller.rb'
    - 'app/controllers/v1/apidocs_controller.rb'
    - 'modules/*/spec/**/*.rb'
    - 'modules/*/app/swagger/**/*.rb'
    - 'modules/*/config/routes.rb'

# Don't worry about ambiguous blocks in RSpec
# Official recommendation from rubocop team is to disable this rule for specs.
# See: https://github.com/rubocop-hq/rubocop/issues/4222
Lint/AmbiguousBlockAssociation:
  Exclude:
    - "spec/**/*"

# This file does not need to be snake case
Naming/FileName:
  Exclude:
    - "Guardfile"

# TODO: REVIEW THESE AND MAKE CHANGES

# We should try to use StandardError, but some errors like timeout inherit from Exception (beware)
Style/RescueStandardError:
  EnforcedStyle: implicit

# All kinds of issues with this cop right now.
Style/FormatStringToken:
  Exclude:
    - "rakelib/mvi.rake"

Lint/BooleanSymbol:
  Exclude:
    - "app/swagger/swagger/schemas/gibct/institutions.rb" #Swagger blocks defines keys as :true, need to keep as is

# Use `Time` when dealing with current dates and times; it has support for timezones (system/local and utc), whereas `DateTime` only supports offsets from UTC.
# However, if you need to deal with dates and times in a historical context you'll want to use DateTime to avoid making the same mistakes as UNESCO.
# See: https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Style/DateTime
Style/DateTime:
  Exclude:
    - "rakelib/evss.rake"
    - "lib/evss/auth_headers.rb" #DateTime is needed for date formatting here

# Skipping for now, should revisit:
Rails/HasManyOrHasOneDependent:
  Exclude:
    - "app/models/education_benefits_claim.rb"
    - "app/models/saved_claim/education_benefits.rb"
    - "app/models/saved_claim.rb"
    - "app/models/terms_and_conditions.rb"

# The suggestions here don't seem to make sense in most cases. Skip for now.
Naming/MemoizedInstanceVariableName:
  Enabled: false

# It was determined these suggestions had the potential to change behavior.
Rails/ActiveRecordAliases:
  Enabled: false

# The use of variables such as n to represent number, x and y for x-axis and y-axis, el for element,
# v for value, i for index, and e for error are all standard abbreviations and should be excluded.
Naming/MethodParameterName:
  Enabled: false

# FactoryBot 5.x replaced static factory attributes with dynamic ones. Auto-converting using rubocop-rspec
# always uses {...} which means a lot of existing factories because invalid. Allowed exception in pr #3300.
Style/BlockDelimiters:
  Exclude:
    - "spec/factories/*.rb"
    - "modules/*/spec/factories/*.rb"

# Excluding modules specs for now and a few that may need to be revisited.
RSpec/FilePath:
  Exclude:
    - 'modules/**/*'
    - 'spec/lib/common/models/**/*'
    - 'spec/lib/saml/*_user_spec.rb'
    - 'spec/lib/ihub/appointments/service_spec.rb'
    - 'spec/request/in_progress_forms_request_spec.rb'
    - 'spec/jobs/pagerduty/**/*'
    - 'spec/lib/pagerduty/**/*'
  CustomTransform:
    SSOeSettingsService: ssoe_settings_service

# Was determined that using described_class makes the code less readable.
RSpec/DescribedClass:
  Enabled: false

# Excluding these for now. May need to be revisited.
RSpec/DescribeClass:
  Exclude:
    - 'spec/lib/mhv_ac/client_spec.rb'
    - 'spec/lib/mhv_logging/api/audits_spec.rb'
    - 'spec/rakelib/vet360_spec.rb'
    - 'spec/request/burial_claims_spec.rb'
    - 'spec/request/education_benefits_claims_request_spec.rb'
    - 'spec/request/health_care_applications_request_spec.rb'
    - 'spec/request/pension_claims_controller_spec.rb'
    - 'spec/request/swagger_spec.rb'
    - 'spec/lib/sm/client/preferences_spec.rb'
    - 'spec/lib/sm/client/triage_teams_spec.rb'
    - 'spec/lib/sm/client/messages_spec.rb'
    - 'spec/lib/bb/client_spec.rb'
    - 'spec/lib/gi/client_spec.rb'
    - 'spec/lib/sm/client/folders_spec.rb'

# Determined to be too benign and/or numerous to justify changing
RSpec/AnyInstance:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/BeforeAfterAll:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/ContextWording:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/ExampleLength:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/ExpectInHook:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/InstanceVariable:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/LeakyConstantDeclaration:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/MessageSpies:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/NamedSubject:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/VerifiedDoubles:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/MultipleExpectations:
  Enabled: false

# Determined to be too benign and/or numerous to justify changing
RSpec/NestedGroups:
  Enabled: false

# This seems to generate a lot of false positives
RSpec/EmptyExampleGroup:
  Enabled: false

# This seems to generate a lot of false positives
RSpec/LetSetup:
  Enabled: false

# Might be worth revisiting at some point
RSpec/MessageChain:
  Exclude:
    - 'modules/veteran_verification/spec/requests/service_history_request_spec.rb'
    - 'modules/veteran_verification/spec/requests/veteran_status_request_spec.rb'
    - 'spec/lib/vet360/service_spec.rb'
    - 'spec/request/service_history_request_spec.rb'
    - 'spec/request/swagger_spec.rb'

# These instances seem to be necessary
RSpec/MultipleDescribes:
  Exclude:
    - 'spec/jobs/evss/document_upload_spec.rb'
    - 'spec/jobs/evss/request_decision_spec.rb'
    - 'spec/lib/emis/veteran_status_service_spec.rb'
    - 'spec/request/swagger_spec.rb'

# These instances seem to be false positives
RSpec/RepeatedExample:
  Exclude:
    - 'modules/vba_documents/spec/jobs/upload_processor_spec.rb'
    - 'modules/vba_documents/spec/models/upload_submission_spec.rb'
    - 'modules/vba_documents/spec/request/v0/reports_request_spec.rb'
    - 'modules/vba_documents/spec/request/v1/reports_request_spec.rb'

# Might be worth revisiting at some point
RSpec/ScatteredLet:
  Exclude:
    - 'spec/controllers/openid_application_controller_spec.rb'
    - 'spec/controllers/v0/dependents_applications_controller_spec.rb'
    - 'spec/controllers/v0/post911_gi_bill_statuses_controller_spec.rb'
    - 'spec/lib/bb/client_spec.rb'
    - 'spec/lib/evss/auth_headers_spec.rb'
    - 'spec/lib/evss/gi_bill_status/service_spec.rb'
    - 'spec/lib/sentry/processor/log_as_warning_processor_spec.rb'
    - 'spec/mailers/spool_submissions_report_mailer_spec.rb'
    - 'spec/models/form_profile_spec.rb'
    - 'spec/models/vet360_redis/contact_information_spec.rb'
    - 'spec/request/health_care_applications_request_spec.rb'
    - 'spec/request/health_records_request_spec.rb'
    - 'spec/request/http_method_not_allowed_spec.rb'
    - 'spec/request/swagger_spec.rb'

# Might be worth revisiting at some point
RSpec/SubjectStub:
  Exclude:
    - 'modules/vaos/spec/services/user_service_spec.rb'
    - 'spec/jobs/education_form/create_daily_spool_files_spec.rb'
    - 'spec/jobs/education_form/forms/va1990_spec.rb'
    - 'spec/jobs/transactional_email_analytics_job_spec.rb'
    - 'spec/jobs/form526_confirmation_email_job_spec.rb'
    - 'spec/lib/bb/generate_report_request_form_spec.rb'
    - 'spec/lib/common/models/redis_store_spec.rb'
    - 'spec/lib/evss/disability_compensation_form/data_translation_all_claim_spec.rb'
    - 'spec/lib/evss/disability_compensation_form/data_translation_spec.rb'
    - 'spec/lib/mvi/service_spec.rb'
    - 'spec/lib/saml/health_status_spec.rb'
    - 'spec/lib/sm/client/folders_spec.rb'
    - 'spec/models/emis_redis/military_information_spec.rb'
    - 'spec/models/emis_redis/military_information_v2_spec.rb'
    - 'spec/models/session_spec.rb'
    - 'spec/services/evss_claim_service_spec.rb'
    - 'spec/services/mhv_accounts_service_spec.rb'
    - 'spec/uploaders/evss_claim_document_uploader_spec.rb'
    - 'spec/lib/carma/client/client_spec.rb'
    - 'spec/services/form1010cg/service_spec.rb'
    - 'spec/services/form1010cg/auditor_spec.rb'

# the default style recently changed, but it's not worth changing
Rails/FilePath:
  EnforcedStyle: arguments

# Added in v0.81
Lint/RaiseException:
  Enabled: true

Lint/StructNewOverride:
  Enabled: true

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

# Added in v0.82
Layout/SpaceAroundMethodCallOperator:
  Enabled: true

Style/ExponentialNotation:
  Enabled: true

# Added in v0.83
Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true

Style/SlicingWithRange:
  Enabled: true

# Added in v0.84
Lint/DeprecatedOpenSSLConstant:
  Enabled: true
