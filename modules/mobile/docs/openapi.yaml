openapi: "3.0.0"
info:
  version: 0.0.0
  title: VA Mobile API
  license:
    name: MIT
  description: >
    The Department of Veterans Affairs mobile API. All paths are relative to https://api.va.gov/mobile.
servers:
  - url: https://api.va.gov/mobile
paths:
  /:
    get:
      summary: /
      description: Returns a welcome message.
      operationId: welcome
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/Message.yml"
    post:
      summary: /
      description: Returns urls for app use based on app build number, environment, and OS
      operationId: index
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: App build and environment info
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/DiscoveryRequest.yml'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/DiscoveryResponse.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/appointments:
    get:
      summary: /v0/appointments
      description: Given a date range returns a list of upcoming VA, Community Care, and Express Care appointments. If start and end date ranges are not passed in then it defaults to - 3 months and + 6 months from the beginning of today's UTC date.
      operationId: getAppointments
      security:
        - Bearer: []
      parameters:
        - in: query
          name: startDate
          schema:
            type: datetime
          description: The start date for the range of appointments in ISO 8601 UTC format
          example: 2020-10-29T07:00:00.000Z
        - in: query
          name: endDate
          schema:
            type: datetime
          description: The end date for the range of appointments in ISO 8601 UTC format
          example: 2021-11-29T08:00:00.000Z
        - in: query
          name: useCache
          schema:
            type: boolean
          description: Whether or not to use the upstream VAOS service's cache of appointments
          example: 2021-11-29T08:00:00.000Z
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/Appointments.yml"
              examples:
                VA Appointment:
                  value:
                    $ref: "./examples/appointments/va_appointment.yml"
                VA Video Connect Appointment:
                  value:
                    $ref: "./examples/appointments/va_video_connect_appointment.yml"
                VA Video Connect ATLAS Appointment:
                  value:
                    $ref: "./examples/appointments/va_video_connect_atlas_appointment.yml"
                Community Care Appointment:
                  value:
                    $ref: "./examples/appointments/cc_appointment.yml"

        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Validation Error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/appointments/cancel/{cancelId}:
    put:
      summary: /v0/appointments/cancel/{cancelId}
      description: Cancel an appointment by cancelId. Note only VA appointments can be cancelled online and some VA facilities do not support online cancellation. Only appointments that can be cancelled will have a cancelId.
      operationId: putCancelAppointment
      security:
        - Bearer: [ ]
      parameters:
        - in: path
          name: cancelId
          required: true
          schema:
            type: string
          description: The cancel ID hash from an appointment returned in the GET appointments endpoint.
      responses:
        '204':
          description: No Content
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Validation error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/military-service-history:
    get:
      summary: /v0/military-service-history
      description: Returns user's service history
      operationId: getServiceHistory
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/MilitaryHistory.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/letters:
    get:
      summary: /v0/letters
      description: Returns the list of letter names and types for the given user
      operationId: letters
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/Letters.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/letters/beneficiary:
    get:
      summary: /v0/letters/beneficiary
      description: Returns benefit info and options for the given user with or without a dependent
      operationId: beneficiary
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/LettersBeneficiaryInfo.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/letters/{type}/download:
    post:
      summary: /v0/letters/{type}/download
      description: Returns requested letter for download
      operationId: download
      security:
        - Bearer: []
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
          description: letter type
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: './schemas/LetterOptions.yml'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/user:
    get:
      summary: /v0/user
      description: >
        Returns the user profile, including the user's addresses and the services
        the user has the requisite ids to access. Meta data for this endpoint returns all the services available in the API.
      operationId: user.getProfile
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "./schemas/User.yml"
                  meta:
                    properties:
                      availableServices:
                        type: array
                        example:
                          - appeals
                          - appointments
                          - claims
                          - directDepositBenefits
                          - lettersAndDocuments
                          - militaryServiceHistory
                          - userProfileUpdate
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/user/logout:
    get:
      summary: /v0/user/logout
      description: >
        Logs the user out by revoking their access token from the IAM SSOe OAuth service and destroying the IAM user, user identity, and session objects from Redis.
      operationId: user.logout
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      responses:
        '200':
          description: OK
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/user/addresses:
    post:
      summary: /v0/user/addresses
      description: Creates a new residential or mailing address for a user. Calling this endpoint is the second step in adding a new address for a user. The first step is to call the address validation endpoint to check if an address is valid. If it is valid you'll receive a 'addressMetaData' object back with the addresses confidence score. This object should then be included along with the new address in the request body. If the user wishes to continue with an 'invalid' address then the 'validationKey' should be passed along with the new address in the request body. This lets the underlying service know that an invalid address be passed through.
      operationId: user.createAddress
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: A domestic, internation, or military address
        required: true
        content:
          application/json:
            schema:
              $ref: '#./schemas/AddressCreate.yml'
            examples:
              Using Suggested Address:
                value:
                  addressMetaData:
                    confidenceScore: 100
                    addressType: Domestic
                    deliveryPointValidation: CONFIRMED
                    residentialDeliveryIndicator: RESIDENTIAL
                  addressLine1: "1493 Martin Luther King Rd"
                  city: "Fulton"
                  countryName: "United States"
                  countryCodeIso3: "USA"
                  stateCode: "MS"
                  zipCode: "38843"
                  addressType: "DOMESTIC"
                  addressPou: "RESIDENCE/CHOICE"
              Using Overridden Address:
                value:
                  addressLine1: "1493 Martin Luther King Rd"
                  city: "Fulton"
                  countryName: "United States"
                  countryCodeIso3: "USA"
                  stateCode: "MS"
                  zipCode: "38843"
                  addressType: "DOMESTIC"
                  addressPou: "RESIDENCE/CHOICE"
                  validationKey: -1206619807
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/AddressTransaction.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
    put:
      summary: /v0/user/addresses
      description: Updates a user's residential or mailing address. Calling this endpoint is the second step in adding a new address for a user. The first step is to call the address validation endpoint to check if an address is valid. If it is valid you'll receive a 'addressMetaData' object back with the addresses confidence score. This object should then be included along with the new address in the request body. If the user wishes to continue with an 'invalid' address then the 'validationKey' should be passed along with the new address in the request body. This lets the underlying service know that an invalid address be passed through.
      operationId: user.updateAddress
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: A domestic, internation, or military address
        required: true
        content:
          application/json:
            schema:
              $ref: '#./schemas/AddressUpdate.yml'
            examples:
              Using Suggested Address:
                value:
                  addressMetaData:
                    confidenceScore: 100
                    addressType: Domestic
                    deliveryPointValidation: CONFIRMED
                    residentialDeliveryIndicator: RESIDENTIAL
                  addressLine1: "1493 Martin Luther King Rd"
                  addressPou: "RESIDENCE/CHOICE"
                  addressType: "DOMESTIC"
                  city: "Fulton"
                  countryName: "United States"
                  countryCodeIso3: "USA"
                  stateCode: "MS"
                  zipCode: "38843"
                  id: 181513
              Using Overridden Address:
                value:
                  addressLine1: "1493 Martin Luther King Rd"
                  addressPou: "RESIDENCE/CHOICE"
                  addressType: "DOMESTIC"
                  city: "Fulton"
                  countryName: "United States"
                  countryCodeIso3: "USA"
                  stateCode: "MS"
                  zipCode: "38843"
                  id: 181513
                  validationKey: -1206619807
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/AddressTransaction.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/user/addresses/validate:
    post:
      summary: /v0/user/addresses/validate
      description: Validates a residential or mailing address for a user. Calling this endpoint is the first step in adding a new address for a user. If the address is valid you'll receive a 'addressMetaData' object back with the addresses confidence score. This object should then be included along with the new address in the request body. If the user wishes to continue with an 'invalid' address then the 'validationKey' should be passed along with the new address in the request body. This lets the underlying service know that an invalid address be passed through.
      operationId: user.validateAddress
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: A domestic, internation, or military address
        required: true
        content:
          application/json:
            schema:
              $ref: '#./schemas/Address.yml'
            example:
              addressLine1: "51 W Weber Rd"
              addressPou: "CORRESPONDENCE"
              addressType: "DOMESTIC"
              city: "Columbus"
              countryName: "United States"
              countryCodeIso3: "USA"
              stateCode: "OH"
              type: "DOMESTIC"
              zipCode: "43202"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#./schemas/AddressResponse.yml'
              examples:
                Single match:
                  value:
                    $ref: "./examples/appointments/va_appointment.yml"
                Multiple matches:
                  value:
                    $ref: "./examples/appointments/va_appointment.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/user/emails:
    post:
      summary: /v0/user/emails
      description: Creates a new email address
      operationId: user.createEmailAddress
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: The new email address
        required: true
        content:
          application/json:
            schema:
              $ref: '#./schemas/Email.yml'
            example:
              emailAddress: "person42@example.com"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/EmailTransaction.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
    put:
      summary: /v0/user/emails
      description: Updates a user's email address
      operationId: user.updateEmailAddress
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: The new email address
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/EmailUpdate.yml'
            example:
              id: 42,
              emailAddress: "person42@example.com"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/EmailTransaction.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/user/phones:
    post:
      summary: /v0/user/phones
      description: Creats a phone number for a user
      operationId: user.createPhoneNumber
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: The new phone number
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/Phone.yml"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/PhoneTransaction.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
    put:
      summary: /v0/user/phones
      description: Updates a user's phone number
      operationId: user.updatePhoneNumber
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: The new phone number
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/PhoneUpdate.yml"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/PhoneTransaction.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/payment-information/benefits:
    get:
      summary: /v0/payment-information/benefits
      description: Returns direct deposit payment info
      operationId: getPaymentInformation
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/PaymentInfo.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
    put:
      summary: /v0/payment-information/benefits
      description: Returns updated direct deposit payment info
      operationId: updatePaymentInformation
      security:
        - Bearer: []
      requestBody:
        description: New direct deposit info
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/UpdatePaymentInfoRequest.yml'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/PaymentInfo.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/push/register:
    put:
      summary: /v0/push/register
      description: Allows a new app install to register to receive push notifications
      operationId: register
      security:
        - Bearer: []
      requestBody:
        description: Device information
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/PushRegistration.yml'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/PushRegistrationResponse.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/push/prefs:
    get:
      summary: /v0/push/prefs
      description: Get the user's push notification preferences
      operationId: getPrefs
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: './schemas/PushPreferences.yml'
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
    put:
      summary: /v0/push/prefs
      description: Set the user's push notification preferences
      operationId: putPrefs
      security:
        - Bearer: []
      requestBody:
        description: Push notification preferences
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/PushPreferences.yml'
      responses:
        '200':
          description: OK
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/push/send:
    post:
      summary: /v0/push/send
      description: Allows client to trigger specified push notification to be sent to specified endpoint
      operationId: sendNotification
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: Both upstream services the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/ClaimsAndAppealsOverviewDoubleFailure.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/claims-and-appeals-overview:
    get:
      summary: /v0/claims-and-appeals-overview
      description: Returns info on all user's claims and appeals for mobile overview page
      operationId: claimsAndAppealsOverview
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/ClaimsAndAppealsOverview.yml"
        '207':
          description: One of the two upstream services failed
          content:
            application/json:
              schema:
                $ref: "./schemas/ClaimsAndAppealsOverview.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '502':
          description: Both upstream services the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "./schemas/ClaimsAndAppealsOverviewDoubleFailure.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/appeal/{id}:
    get:
      summary: /v0/appeal/{id}
      description: Returns info on all user's claims and appeals for mobile overview page
      operationId: get_appeal
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Appeal Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/Appeal.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/claim/{id}:
    get:
      summary: /v0/claim/{id}
      description: Returns info on all user's claims and appeals for mobile overview page
      operationId: get_claim
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Claim Id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/Claim.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/claim/{id}/documents:
    post:
      summary: /v0/claim/{id}/documents
      description: Post tracked item document for upload, returns jobId for upload process
      operationId: upload_documents
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Claim Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "./schemas/ClaimUploadRequestBody.yml"
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "./schemas/ClaimDocUpload.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/claim/{id}/request-decision:
    post:
      summary: /v0/claim/{id}/request-decision
      description: Request decision on a given claim, returns job id
      operationId: request_decision
      security:
        - Bearer: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Claim Id
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "./schemas/ClaimDocUpload.yml"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/folders:
    get:
      summary: /v0/messaging/health/folders
      description: List available secure messaging folders
      operationId: listFolders
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/SecureMessagingFolders.yml"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/folders/{id}:
    get:
      summary: /v0/messaging/health/folders/{id}
      description: Get a secure messaging folder
      operationId: getFolder
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/SecureMessagingFolder.yml"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/folders/{id}/messages:
    get:
      summary: /v0/messaging/health/folders/{id}/messages
      description: List messages in a secure messaging folder
      operationId: listFolderMessages
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/SecureMessageList.yml"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/messages/{id}:
    get:
      summary: /v0/messaging/health/messages/{id}
      description: Get a secure message and mark message as read
      operationId: getMessage
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/SecureMessageDetail.yml"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/messages/{id}/attachments/{attachment_id}:
    get:
      summary: /v0/messaging/health/messages/{id}/attachments/{attachment_id}
      description: >
        Get a secure message attachment content as a direct binary download.
        Secure messaging supports the following file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.

      operationId: getMessageAttachment
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          headers:
            Content-Disposition:
              schema:
                type: string
              description: >
                This header will have the value of "attachment", and a "filename" parameter containing the original filename of the attached content.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/messages/categories:
    get:
      summary: /v0/messaging/health/messages/categories
      description: List available message categories
      operationId: listMessageCategories
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
               $ref: "./schemas/SecureMessageCategories.yml"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
  /v0/messaging/health/recipients:
    get:
      summary: /v0/messaging/health/recipients
      description: List available recipients to which messages may be sent
      operationId: listRecipients
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "./schemas/SecureMessagingRecipients.yml"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"
        '403':
          description: Not authorized for access to secure messages
          content:
            application/json:
              schema:
                $ref: "./schemas/Errors.yml"



components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Authentication is via an access token returned from IAM's SSOe service. Pass the access token in the 'Authorization' Header in the format 'Bearer {accessToken}'. e.g. 'Bearer abcdefg1234567'.
