openapi: "3.0.0"
info:
  version: 0.0.0
  title: VA Mobile API
  license:
    name: MIT
  description: >
    The Department of Veterans Affairs mobile API. All paths are relative to https://api.va.gov/mobile.
servers:
  - url: https://api.va.gov/mobile
paths:
  /:
    get:
      description: Returns a welcome message.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Message.yml
          description: OK
      summary: /
    post:
      description: Returns urls for app use based on app build number, environment,
        and OS
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/DiscoveryRequest.yml
        description: App build and environment info
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/DiscoveryResponse.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      summary: /
  /v0/appeal/{id}:
    get:
      description: Returns info on all user's claims and appeals for mobile overview
        page. Should be identical to the following docs https://developer.va.gov/explore/api/appeals-status/docs?version=current
      parameters:
        - description: Appeal Id
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              examples:
                Docket 1:
                  value:
                    $ref: ./examples/appeals/appeal_docket_1.yml
                Docket 2:
                  value:
                    $ref: ./examples/appeals/appeal_docket_2.yml
                Empty Docket:
                  value:
                    $ref: ./examples/appeals/appeal_docket_null.yml
              schema:
                $ref: ./schemas/Appeal.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appeal/{id}
  /v0/appointments:
    get:
      description: Given a date range returns a list of upcoming VA, Community Care,
        and Express Care appointments. If start and end date ranges are not passed
        in then it defaults to - 1 year and + 1 year from the beginning of today's
        UTC date. Requesting a page out of bounds
        will return an empty list.
      parameters:
        - description: The start date for the range of appointments in ISO 8601 UTC
            format
          example: 2020-10-29T07:00:00Z
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: The end date for the range of appointments in ISO 8601 UTC format
          example: 2021-11-29T08:00:00Z
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: The page number requested. Defaults to 1.
          example: 1
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 10.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
        - description: Whether or not to use this API's cache or fetch records from
            the upstream service
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
        - description: Field to sort the appointments list by. Currently only supports
            `startDateUtc`. Prefixing `-` reverses the sort.
          example: -startDateUtc
          in: query
          name: sort
          schema:
            type: string
        - description: Field to include pending appointments. Currently only supports value `pending`. Redundant with field `included[]` for backwards compatibility but `include` is the correct one to use when following conventions.
          example: pending
          in: query
          name: include[]
          schema:
            type: array
            items:
              type: string
        - description: Field to include pending appointments. Currently only supports value `pending`. Redundant with field `include[]` for backwards compatibility but `include` is the correct one to use when following conventions.
          example: pending
          in: query
          name: included[]
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              examples:
                Community Care Appointment:
                  value:
                    $ref: ./examples/appointments/cc_appointment.yml
                VA Appointment:
                  value:
                    $ref: ./examples/appointments/va_appointment.yml
                VA Video Connect ATLAS Appointment:
                  value:
                    $ref: ./examples/appointments/va_video_connect_atlas_appointment.yml
                VA Video Connect Appointment:
                  value:
                    $ref: ./examples/appointments/va_video_connect_appointment.yml
                Community Care Appointment Request:
                  value:
                    $ref: ./examples/appointments/cc_appointment_request.yml
                VA Appointment Request:
                  value:
                    $ref: ./examples/appointments/va_appointment_request.yml
                Partial Appointments:
                  description: For cases when 1 or more errors are returned from upstream, an error message with source `VA Service` is added within the meta
                  value:
                    $ref: ./examples/appointments/partial_appointments.yml
              schema:
                $ref: ./schemas/Appointments.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          content:
            application/json:
              examples:
                Missing Facilities:
                  value:
                    $ref: ./examples/appointments/forbidden_facilities_error.yml
                No VAOS Access:
                  value:
                    $ref: ./examples/appointments/forbidden_no_vaos_access_error.yml
                No ICN:
                  value:
                    $ref: ./examples/appointments/forbidden_no_icn_error.yml
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments
  /v0/appointments/cancel/{cancelId}:
    put:
      description: Cancel an appointment by cancelId. Note only VA appointments can
        be cancelled online and some VA facilities do not support online cancellation.
        Only appointments that can be cancelled will have a cancelId.
      parameters:
        - description: The cancel ID hash from an appointment returned in the GET appointments
            endpoint.
          in: path
          name: cancelId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/cancel/{cancelId}
  /v0/appointments/check-in:
    post:
      description: Check into an appointment.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                appointmentIEN:
                  type: string
                locationId:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentCheckin.yml
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentCheckinErrors400.yml
          description: Bad request.
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentCheckinErrors500.yml
          description: An internal API error occurred.
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/check-in
  /v0/appointments/check-in/demographics:
    get:
      description: Retrieves demographics confirmation information which includes a field indicating if insurance verification is needed, patient contact information, emergency contact information and next-of-kin contact information.
      parameters:
        - description: Unique location identifier
          in: query
          name: locationId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentCheckinDemographics.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/appointments/check-in/demographics
    patch:
      description: Edit demographics confirmations.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                locationId:
                  type: string
                demographicConfirmations:
                  type: object
                  required:
                    - contactNeedsUpdate
                    - emergencyContactNeedsUpdate
                    - nextOfKinNeedsUpdate
                  properties:
                    contactNeedsUpdate:
                      type: boolean
                      example: false
                    emergencyContactNeedsUpdate:
                      type: boolean
                      example: false
                    nextOfKinNeedsUpdate:
                      type: boolean
                      example: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentCheckinDemographicsPatch.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/appointments/check-in/demographics
  /v0/appointments/community_care/eligibility/{service_type}:
    get:
      description: Checks if user is eligible to make an appointment with Community Care for a type of service. Checks if user is registered at a site that is marked as accepting community care requests and community care eligibility api says that they're eligible for the type of care they chose
      parameters:
        - description: Type of service to check eligibility for. Can only be one of following options primaryCare, nutrition, podiatry, optometry, audiology.
          in: path
          name: serviceType
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/CommunityCaresEligibility.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/community_care/eligibility/{service_type}
  /v0/appointments/facility/eligibility:
    get:
      description: Checks if a list of facilities if they are eligible to create a appointment request to provide the given type of service at the facility.
      parameters:
        - description: Type of service to check eligibility for.
          in: path
          name: serviceType
          required: true
          schema:
            type: string
            enum:
              - amputation
              - audiology
              - covid
              - optometry
              - outpatientMentalHealth
              - moveProgram
              - foodAndNutrition
              - clinicalPharmacyPrimaryCare
              - primaryCare
              - homeSleepTesting
              - socialWork
              - cpap
              - ophthalmology
        - description: List of facility ids
          in: path
          name: FacilityIds[]
          required: true
          schema:
            type: array
            items:
              type: string
        - description: type of appointment. Can either be 'request' or 'direct' but only request will be used until direct scheduling functionality is built out
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: The page number requested. Defaults to 1.
          example: 2
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 3.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/FacilityEligibilities.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/facility/eligibility
  /v0/appointments/facilities/{facility_id}/clinics:
    get:
      description: Returns all available clinics at a facility for a given type of service.
      parameters:
        - description: Facility ID
          in: path
          name: facility_id
          required: true
          schema:
            type: string
            example: 436GC
        - description: Service Type
          in: query
          name: service_type
          required: true
          schema:
            type: string
            enum:
              - amputation
              - audiology
              - covid
              - optometry
              - outpatientMentalHealth
              - moveProgram
              - foodAndNutrition
              - clinicalPharmacyPrimaryCare
              - primaryCare
              - homeSleepTesting
              - socialWork
              - cpap
              - ophthalmology
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/FacilityClinics.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/facilities/{facility_id}/clinics
  /v0/appointments/facilities/{facility_id}/clinics/{clinic_id}/slots:
    get:
      description: Accepts date range for a clinic at a va facility and returns available slots for a a direct schedule appointment.
      parameters:
        - description: The start date for the range of appointments slots in ISO 8601 UTC
            format. If not provided the start date will be considered now.
          example: 2020-10-29T07:00:00Z
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: The end date for the range of appointments slots in ISO 8601 UTC format.
            If not provided the end date will be 2 months from today's date
          example: 2021-11-29T08:00:00Z
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/ClinicSlots.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/facilities/{facility_id}/clinics/{clinic_id}/slots
  /v0/appointments/facilities/{facility_id}/slots:
    get:
      description: Accepts date range for a va facility and returns available slots for a a direct schedule appointment.
      parameters:
        - description: The start date for the range of appointments slots in ISO 8601 UTC
            format. If not provided the start date will be considered now.
          example: 2020-10-29T07:00:00Z
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: The end date for the range of appointments slots in ISO 8601 UTC format.
            If not provided the end date will be 2 months from today's date
          example: 2021-11-29T08:00:00Z
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: The facility division ID
          in: path
          required: true
          name: location_id
          schema:
            type: string
        - description: The clinic IEN. Required if clinical_service not provided.
          in: query
          required: false
          name: clinic_id
          schema:
            type: string
        - description: The clinical service (type of care) to find appointment slots for. Required if clinic_id not provided.
          in: query
          required: false
          name: clinical_service
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/ClinicSlots.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/appointments/facilities/{facility_id}/clinics/{clinic_id}/slots
  /v0/appointments/preferences:
    get:
      description: Returns VAOS appointment contact preferences
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentPreferences.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/appointments/preferences
    put:
      description: updates VAOS appointment preferences
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/AppointmentPreferencesRequest.yml
        description: Preferences data to update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AppointmentPreferences.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/preferences
  /v0/appointments/va/eligibility:
    get:
      description: Lists types of service. For each type of service, lists users registered facilities that support request and direct appointments.
      parameters:
        - description: Array of facilities to be checked for service eligibility
          in: query
          name: FacilityIds[]
          required: true
          schema:
            type: array
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/ServiceEligibilities.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/appointments/va/eligibility
  /v0/appointment:
    post:
      description: Creates a new appointment or appointment request.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: ./schemas/CreateAppointmentCC.yml
                - $ref: ./schemas/CreateAppointmentRequest.yml
                - $ref: ./schemas/CreateAppointmentDirect.yml
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                required:
                  - data
                properties:
                  data:
                    required:
                      - id
                      - type
                      - attributes
                    type: object
                    properties:
                      id:
                        type: string
                        description: Upstream identifier. Appointment id.
                      type:
                        type: string
                      attributes:
                        $ref: ./schemas/NewAppointment.yml
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/appointment
  /v0/awards:
    get:
      description: Get current awards overview
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Awards.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/awards
  /v0/claim/{id}:
    get:
      description: Returns info on all user's claims and appeals for mobile overview
        page
      parameters:
        - description: Claim Id
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Claim.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/claim/{id}
  /v0/claim/{id}/documents:
    post:
      description: Post tracked item document for upload, returns jobId for upload
        process
      parameters:
        - description: Claim Id
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: image/png, image/jpeg, image/gif, image/jpg, image/bmp,
                  text/plain, application/pdf
            schema:
              properties:
                documentType:
                  type: string
                file:
                  format: binary
                  type: string
                password:
                  oneOf:
                    - type: string
                    - type: 'null'
                trackedItemId:
                  type: string
              type: object
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: ./schemas/ClaimDocUpload.yml
          description: Accepted
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/claim/{id}/documents
  /v0/claim/{id}/documents/multi-image:
    post:
      description: Post multiple images to be combined into one pdf for upload, returns
        jobId for upload process
      parameters:
        - description: Claim Id
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/ClaimUploadRequestBody.yml
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: ./schemas/ClaimDocUpload.yml
          description: Accepted
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/claim/{id}/documents/multi-image
  /v0/claim/{id}/request-decision:
    post:
      description: Request decision on a given claim, returns job id
      parameters:
        - description: Claim Id
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: ./schemas/ClaimDocUpload.yml
          description: Accepted
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/claim/{id}/request-decision
  /v0/claims/decision-letters:
    get:
      description: Returns the list of claim decision letters for given user
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/DecisionLetters.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/claims/decision-letters
  /v0/claims/decision-letters/{document_id}/download:
    get:
      description: Downloads a decision letter
      parameters:
        - description: id of the document being downloaded
          in: path
          name: document_id
          required: true
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/claims/decision-letters/{document_id}/download
  /v0/claims/pre-need-burial:
    post:
      description: Submits a new Preneeds Burial application.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/CreatePreneedBurial.yml
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/CreatePreneedBurialResponse.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/claims/pre-need-burial
  /v0/claims/pre-need-burial/cemeteries:
    get:
      description: Returns info on all cemeteries for preneed burial
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PreneedBurial.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/claims/pre-need-burial/cemeteries
  /v0/claims-and-appeals-overview:
    get:
      description: Returns info on all user's claims and appeals for mobile overview
        page
      parameters:
        - description: The start date for the range of appointments in ISO 8601 UTC
            format. If not provided the start date will be considered Jan. 1st 1700.
          example: 2020-10-29T07:00:00Z
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: The end date for the range of appointments in ISO 8601 UTC format.
            If not provided the end date will be 1 year from today's date
          example: 2021-11-29T08:00:00Z
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: The page number requested. Defaults to 1.
          example: 2
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 10.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
        - description: true will return only completed records, false will show only
            open records, not including the parameter will return all records regardless
            of completed status
          example: true
          in: query
          name: showCompleted
          schema:
            type: boolean
        - description: Whether or not to use this API's cache or fetch records from
            the upstream service
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              examples:
                Appeal:
                  value:
                    $ref: ./schemas/ClaimsAndAppealsOverviewAppeal.yml
                Claim:
                  value:
                    $ref: ./schemas/ClaimsAndAppealsOverviewClaim.yml
              schema:
                $ref: ./schemas/ClaimsAndAppealsOverview.yml
          description: OK
        '207':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: ./schemas/ClaimsAndAppealsOverviewClaimsError.yml
                  - $ref: ./schemas/ClaimsAndAppealsOverviewAppealsError.yml
          description: One of the two upstream services failed
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/claims-and-appeals-overview

  /v0/community-care-providers:
    get:
      description: Returns a list of community care providers who provide the requested medical specialty within
        a certain radius of the user (default) or facility (if facility id is provided in query params).
      parameters:
        - description: The medical specialty the user is searching for formatted in camel case.
            Must be one of primaryCare, foodAndNutrition, podiatry, optometry, audiologyRoutineExam, audiologyHearingAidSupport.
          example: primaryCare
          in: query
          name: serviceType
          required: true
          schema:
            type: string
        - description: Optional facility id. When provided, we search for CC providers near the facility.
            When omitted, we search for CC providers near the user's home address.
          example: '978'
          in: query
          name: facilityId
          schema:
            type: string
        - description: The page number requested. Defaults to 1.
          example: 1
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 10.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/CommunityCareProviders.yml
          description: OK
        '400':
          content:
            application/json:
              example:
                errors:
                  - code: '103'
                    detail: '"whatever you entered" is not a valid value for "serviceType"'
                    status: '400'
                    title: Invalid field value
              schema:
                $ref: ./schemas/Errors.yml
          description: Bad Request
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/community-care-providers
  /v0/debts:
    get:
      description: Returns a list of user's debts.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Debts.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/debts
  /v0/debts/{id}:
    get:
      description: Returns a users debt by id.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Debt.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/debts/{id}
  /v0/dependents:
    get:
      description: Returns a list of user's dependents. Dependent SSN is also available but is removed to limit PII exposure.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Dependents.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/dependents
    post:
      description: Submit a supplemental claim for compensation (21-686C & 21-674).
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/CreateDependents.yml
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/CreateDependentsResponse.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/dependents
  /v0/dependents/request-decisions:
    get:
      description: Returns the list of dependents verifications and diaries
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/DependentsRequestDecisions.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/dependents/request-decisions
  /v0/disability-rating:
    get:
      description: Returns the list of disability ratings for given user
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/DisabilityRating.yml
          description: OK
        '400':
          content:
            application/json:
              example:
                errors:
                  - timestamp: '2023-02-13T17:38:36.551+00:00'
                    status: '400'
                    error: 'Bad Request'
                    path: '/veteran_verification/v2/disability_rating'
                    code: '400'
                    title: 'Common::Exceptions::BadRequest'
                    detail: 'Bad Request'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: Bad request. Server can't understand request.
        '401':
          content:
            application/json:
              example:
                errors:
                  - status: '401'
                    error: 'Invalid Token.'
                    path: '/veteran_verification/v2/disability_rating'
                    code: '401'
                    title: 'Common::Exceptions::Unauthorized'
                    detail: 'Invalid Token.'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: Authentication is possible but has failed or not yet been provided.
        '403':
          content:
            application/json:
              example:
                errors:
                  - status: '403'
                    error: 'Token not granted requested scope.'
                    path: '/veteran_verification/v2/disability_rating'
                    code: '403'
                    title: 'Common::Exceptions::Forbidden'
                    detail: 'Token not granted requested scope.'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: Client was forbidden from upstream resource.
        '404':
          content:
            application/json:
              example:
                errors:
                  - title: 'Veteran not identifiable.'
                    detail: 'No data found for ICN.'
                    code: '404'
                    status: '404'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: The requested resource could not be found.
        '405':
          content:
            application/json:
              example:
                errors:
                  - status: '405'
                    error: 'Unknown.'
                    path: '/veteran_verification/v2/disability_rating'
                    code: '405'
                    title: 'Common::Exceptions::ServiceError'
                    detail: 'Unknown.'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: Failure in processing entity
        '408':
          $ref: '#/components/responses/408'
        '413':
          content:
            application/json:
              example:
                errors:
                  - message: 'Request size limit exceeded'
                    status: '413.'
                    code: '413'
                    title: 'Common::Exceptions::PayloadTooLarge'
                    detail: 'Request size limit exceeded'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: Failure in processing entity
        '429':
          content:
            application/json:
              example:
                errors:
                  - title: 'Too Many Requests'
                    detail: 'The user has sent too many requests in a given amount of time'
                    code: '429'
                    status: '429'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: Too Many Requests
        '500':
          content:
            application/json:
              example:
                errors:
                  - timestamp: '2023-02-13T17:38:36.551+00:00'
                    status: '500'
                    error: 'Internal Server Error'
                    path: '/veteran_verification/v2/disability_rating'
                    code: '500'
                    title: 'Common::Exceptions::ExternalServerInternalServerError'
                    detail: 'Internal Server Error'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: An internal API error occurred.
        '502':
          content:
            application/json:
              example:
                errors:
                  - title: 'Unexpected Response Body'
                    detail: 'EMIS service responded with something other than veteran status information.'
                    code: 'EMIS_STATUS502'
                    status: '502'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: An upstream service the API depends on returned an error.
        '503':
          content:
            application/json:
              example:
                errors:
                  - title: 'Error title'
                    detail: 'Detailed error message'
                    code: '503'
                    status: '503'
              schema:
                $ref: ./schemas/LighthouseErrors.yml
          description: An upstream service is unavailable, or its circuit breaker
            may have been tripped.
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/disability-rating
  /v0/enrollment-status:
    get:
      description: Returns the user's VA enrollment status.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/EnrollmentStatus.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/enrollment-status
  /v0/facilities-info:
    get:
      description: Retrieves facilities info for a user's va treatment facilities
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/FacilitiesInfo.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/facilities-info
  /v0/facilities-info/{sort_method}:
    get:
      description: Retrieves facilities info for all facilities a given user has the ability to schedule appointments at
      parameters:
        - description: Sort method (Closest to home or current location, alphabetical, or by most recent appointment location) Note - When most recent appointment is selected any facility that doesn't appear in the user's appointments will be sorted alphabetically after those that do appear in the appointments list
          in: path
          name: sort_method
          required: true
          schema:
            type: string
            enum:
              - current
              - home
              - alphabetical
              - appointments
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        description: Lat Long for user's current location. Only required if sort method is current, but can be supplied anyway
        content:
          application/json:
            schema:
              $ref: ./schemas/FacilitiesInfoRequestBody.yml
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/FacilitiesInfo.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/facilities-info/{sort_method}
  /v0/financial-status-reports/download:
    post:
      description: Returns financial status report PDF
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '413':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Payload too large.
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/financial-status-reports/download
  /v0/health/immunizations:
    get:
      description: Returns the list of immunization records for given user
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Immunizations.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/health/immunizations
  /v0/health/allergy-intolerances:
    get:
      description: >
        Retrieves a list of the user's known allergies related to medication, food, or other substances
      operationId: list_allergy_intolerances
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AllergyIntolerances.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      summary: /v0/health/allergy-intolerances
  /v0/health/labs-and-tests:
    get:
      description: >
        List patient labs and tests. Each report contains a list of which tests were a part of the report, along with
        links to get the results for those tests.
      operationId: list_labs_and_tests
      parameters:
        - description: The category classifies the clinical discipline, department, or diagnostic service that created the report
          in: query
          name: category
          required: false
          schema:
            type: string
        - description: A code that indicates the type of information contained within the diagnostic report. Supported values are from the LOINC diagnostic report codes.
          in: query
          name: code
          required: false
          schema:
            type: string
        - description: "A date or range of dates (maximum of 2) that describe the date that the diagnostic report was recorded. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ"
          in: query
          name: date
          required: false
          schema:
            type: datetime
        - description: The status of the report.
          in: query
          name: status
          required: false
          schema:
            type: datetime
        - description: "The date when the record was last updated. Supported formats are: YYYY, YYYY-MM, YYYY-MM-DD, YYYY-MM-DD'T'HH:MM:SSZ"
          in: query
          name: lastUpdated
          required: false
          schema:
            type: datetime
        - description: The page number being requested.
          in: query
          name: page
          required: false
          schema:
            type: integer
        - description: The number of resources that should be returned in a single page. The maximum count size is 100. Defaults to 30.
          in: query
          name: count
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/LabsAndTests.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      summary: /v0/health/labs-and-tests
  /v0/health/observations/{id}:
    get:
      description: >
        Gets an observation from a user's diagnostic report
      operationId: get_observation
      parameters:
        - description: id of observation
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Observation.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      summary: /v0/health/observations/{id}
  /v0/health/locations/{id}:
    get:
      description: Returns location info based on location id from vaccine record
      parameters:
        - description: location id from immunization info
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Locations.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/health/locations/{id}
  /v0/health/rx/prescriptions:
    get:
      description: Returns the users prescriptions.
      parameters:
        - description: |
            what field to sort array of prescriptions by. fields that can be sorted: prescription_id, refill_status, refill_submit_date, refill_date, facility_name, ordered_date, prescription_name, dispensed_date. date fields sort by DESC by default while all others default to ASC. To get the opposite sort direction negate the field with a '-'. EX: -prescription_id
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: |
            filter by field values. Syntax: ?filter[refill_status][eq]=refillinprocess. fields that can be filtered: prescription_id, refill_status, refill_submit_date, facility_name. eq can be switched out with not_eq. to filter by multiple values of the same field, deliminate the parameter value with commas. Syntax: ?filter[refill_status][eq]=refillinprocess,active
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: The page number requested. Defaults to 1.
          example: 1
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 10.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Prescriptions.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '409':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Record is locked by upstream server.
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/health/rx/prescriptions
  /v0/health/rx/prescriptions/refill:
    put:
      description: Requests refill for prescriptions.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/RefillPayload.yml
        description: array of prescription ids to request refill
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PrescriptionsRefill.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '409':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Record is locked by upstream server.
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/health/rx/prescriptions/refill
  /v0/health/rx/prescriptions/{id}/tracking:
    get:
      description: Requests list of tracking data for a prescription id
      parameters:
        - description: id of the prescription tracking data is being requested for
          example: 13650545
          in: path
          name: id
          required: true
          schema:
            type: object
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PrescriptionTracking.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '409':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Record is locked by upstream server.
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/health/rx/prescriptions/{id}/tracking
  /v0/letters:
    get:
      description: Returns the list of letter names and types for the given user
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Letters.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Not acceptable.
        '408':
          $ref: '#/components/responses/408'
        '413':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Payload too large.
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/letters
  /v0/letters/beneficiary:
    get:
      description: Returns benefit info and options for the given user with or without
        a dependent
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/LettersBeneficiaryInfo.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '406':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Not acceptable.
        '408':
          $ref: '#/components/responses/408'
        '413':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Payload too large.
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/letters/beneficiary
  /v0/letters/{type}/download:
    post:
      description: Returns requested letter for download. Downloads as either PDF or JSON, dependent upon format param. Defaults to PDF when format is not specified.
      parameters:
        - description: letter type
          in: path
          name: type
          required: true
          schema:
            type: string
            enum: [benefit_summary, benefit_summary_dependent, benefit_verification, certificate_of_eligibility, civil_service, commissary, medicare_partd, minimum_essential_coverage, proof_of_service, service_verification]
        - description: format
          in: query
          name: format
          required: false
          schema:
            type: string
            enum: [ pdf, json ]
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/LetterOptions.yml
        required: false
      responses:
        '200':
          content:
            application/pdf:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                $ref: ./schemas/Letter.yml
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '413':
          content:
            application/json:
              schema:
                $ref: ./schemas/Errors.yml
          description: Payload too large.
        '422':
          $ref: '#/components/responses/422'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/letters/{type}/download
  /v0/maintenance_windows:
    get:
      description: List maintenance windows
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/MaintenanceWindows.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/maintenance_windows
  /v0/messaging/health/folders:
    get:
      description: List available secure messaging folders
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - description: The page number requested
          example: 1
          in: query
          name: page
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 100
          example: 10
          in: query
          name: perPage
          schema:
            type: integer
        - description: Whether or not to use this API's cache or fetch records from
            the upstream service. Defaults to true.
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessagingFolders.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/folders
    post:
      description: Create a new secure messaging folder
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/CreateSecureMessagingFolder.yml
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/CreateSecureMessagingFolderResponse.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/messaging/health/folder
  /v0/messaging/health/folders/{id}:
    get:
      description: Get a secure messaging folder
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessagingFolder.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/folders/{id}
  /v0/messaging/health/folders/{id}/messages:
    get:
      description: |
        List messages in a secure messaging folder.

        When listing messages, the response for each message will include most but not all of the message attributes.
        Specifically, the message body and attachment information is not included. Those attributes can be obtained by
        getting the specific message resource.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - description: |
            what field to sort array of messages by. fields that can be sorted:  sent_date, subject, sender_name, recipient_name. The date field sorts by descending order by default while all others default to ASC. To get the opposite sort direction negate the field with a '-'. EX: -recipient_name. Default sort field is sent_date.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: |
            filter by field values. Syntax: ?filter[sender_name][eq]=JOHN DEER. fields that can be filtered: sent_date, subject, sender_name, recipient_name. Available operators include 'eq' and 'not_eq'. Date fields can use operators 'lteq' and 'gteq' (less/greater than or equal). string fields can use 'match' operator for partial matching. String fields can also be filtered by multiple values of the same field, deliminate the parameter value with commas. Syntax: ?filter[sender_name][eq]=John Deer,John Smith
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: The page number requested
          example: 1
          in: query
          name: page
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 100
          example: 10
          in: query
          name: perPage
          schema:
            type: integer
        - description: Whether or not to use this API's cache or fetch records from
            the upstream service. Defaults to true.
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageList.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/folders/{id}/messages
  /v0/messaging/health/folders/{id}/threads:
    get:
      description: List of threads in a secure messaging folder
      parameters:
        - description: The id of the folder that threads are being retrieved from
          in: path
          name: folderId
          required: true
          schema:
            type: string
        - description: The size of the pagination you want. Defaults to 10
          in: query
          name: pageSize,
          schema:
            type: string
        - description: The page number to get based on your page size
          in: query
          name: page,
          schema:
            type: string
        - description: The field to sort the results by
          in: query
          name: sortField,
          schema:
            type: string
            enum: [ SENDER_NAME, RECIPIENT_NAME, SENT_DATE, DRAFT_DATE ]
        - description: The order to sort the results by
          in: query
          name: sortOrder,
          schema:
            type: string
            enum: [ ASC, DESC ]
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageThreadList.yml
          description: OK
        '400':
          content:
            application/json:
              example:
                errors:
                  - code: 'VA900'
                    detail: 'Operation failed'
                    status: '400'
                    title: Operation failed
              schema:
                $ref: ./schemas/Errors.yml
          description: Folder does not exist
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/messaging/health/folders/{id}/threads
  /v0/messaging/health/message_drafts:
    post:
      description: Save a new draft message
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/SecureMessageNewMessageRequest.yml
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageNewMessageRequest.yml
          description: Created
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/message_drafts
  /v0/messaging/health/message_drafts/{id}:
    put:
      description: Update an existing draft message
      parameters:
        - description: The id of the draft that is to be updated
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              example:
                body: the updated message
              type: object
        required: true
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/message_drafts/{id}
  /v0/messaging/health/message_drafts/{reply_id}/replydraft:
    post:
      description: Save a new draft message as a reply to an existing message
      parameters:
        - description: The id of the message that will be replied to
          in: path
          name: reply_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/SecureMessageNewMessageRequest.yml
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageNewMessageRequest.yml
          description: Created
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/message_drafts/{reply_id}/replydraft
  /v0/messaging/health/message_drafts/{reply_id}/replydraft/{draft_id}:
    post:
      description: Edit a draft message that was a reply to an existing message
      parameters:
        - description: The id of the message that will be replied to
          in: path
          name: reply_id
          required: true
          schema:
            type: string
        - description: The id of the draft that is to be updated
          in: path
          name: draft_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              example:
                body: the updated message
              type: object
        required: true
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/message_drafts/{reply_id}/replydraft/{draft_id}
  /v0/messaging/health/messages:
    post:
      description: Send a new secure message
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/SecureMessageNewMessageRequest.yml
          multipart/form-data:
            schema:
              properties:
                message:
                  description: Stringified JSON with same parameters as if this was
                    an application/json request (e.g. '{'category":"OTHER","recipient_id":1763526,"body":"test
                    message"}')
                  type: string
                uploads[]:
                  description: |
                    One or more message attachments.

                    <strong>NOTES:</strong>
                    <ul>
                    <li>A single message may have a maximum of 4 attachments.</li>
                    <li>A single attachment cannot exceed 3 MB</li>
                    <li>All attachments combined cannot exceed 6 MB</li>
                    <li>Supported file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.</li>
                    </ul>
                  items:
                    format: binary
                    type: string
                  type: array
              type: object
        description: |
          New message body.

          <strong>NOTES:</strong>
          <ul>
            <li>If a subject isn't included, default subject will be "{{Category}} Inquiry" (e.g. Medication Inquiry)</li>
            <li>Messages can only be replied to for 120 days.  After that, the message is considered "expired"</li>
            <li>If sending a draft, include the draft's ID in the request body as `draft_id`. Draft will be deleted once sent. Any fields included in request body will overwrite original draft contents.
            <li>If including file attachments, this request must be sent as <i>multipart/form-data</i></li>
            <li>
              File attachment restrictions (as imposed by MHV):
              <ul>
                <li>User may attach up to 4 files</li>
                <li>Accepted formats: doc, docx, jpg, pdf, png, rtf, txt, xls, xlsx</li>
                <li>Single attachment cannot exceed 3 MB</li>
                <li>Total attachment cannot exceed 6 MB</li>
              </ul>
            </li>
          </ul>
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PostSecureMessageDetail.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages
  /v0/messaging/health/messages/categories:
    get:
      description: List available message categories
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageCategories.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/categories
  /v0/messaging/health/messages/signature:
    get:
      description: Gets user message signature preferences
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageSignature.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/signature
  /v0/messaging/health/messages/{id}:
    delete:
      description: Moves a secure message to the "Deleted" folder
      parameters:
        - description: The id of the message that is to be deleted
          in: path
          name: id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: The message was deleted successfully
        '400':
          content:
            application/json:
              example:
                errors:
                  - code: SM114
                    detail: Unable to move message
                    status: '400'
                    title: Operation failed
              schema:
                $ref: ./schemas/Errors.yml
          description: Bad Request
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/{id}
    get:
      description: |
        Get a secure message <strong>and mark the message as read</strong>.

        <strong>NOTES:</strong>
        <ul>
          <li>Unlike listing messages in a folder, the message resource returned from this operation will include
        the message body and attachment information.</li>
          <li>This GET operation is not fully idempotent and will set readReceipt field as 'READ'</li>
          <li>If message has an attachment included, attachmentSize is displayed in bytes</li>
        </ul>
      parameters:
        - description: Whether or not to use this API's cache or fetch records from upstream when getting triage team information to determine if user is in triage team. See meta field 'user_in_triage_team'.
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/GetSecureMessageDetail.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/{id}
    patch:
      description: Moves a secure message to a specified folder
      parameters:
        - description: The id of the message that is to be moved
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The id of the folder that the message is to be moved to
          in: query
          name: folder_id,
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '204':
          description: The message was moved successfully
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/{id}/move
  /v0/messaging/health/messages/{id}/attachments/{attachment_id}:
    get:
      description: |
        Get a secure message attachment content as a direct binary download. Secure messaging supports the following file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.
      parameters:
        - description: ID of the message that we are retrieving attachments of
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
          headers:
            Content-Disposition:
              description: |
                This header will have the value of "attachment", and a "filename" parameter containing the original filename of the attached content.
              schema:
                type: string
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/{id}/attachments/{attachment_id}
  /v0/messaging/health/messages/{id}/reply:
    post:
      description: |
        Send reply to a secure message

        <strong>NOTE:</strong> If including file attachments, this request must be sent as <i>multipart/form-data</i>

        File attachment restrictions (as imposed by MHV):
        <ul>
          <li>User may attach up to 4 files</li>
          <li>Accepted formats: doc, docx, jpg, pdf, png, rtf, txt, xls, xlsx</li>
          <li>Single attachment cannot exceed 3 MB</li>
          <li>Total attachment cannot exceed 6 MB</li>
        </ul>
      parameters:
        - description: ID of the message that is being replied to
          in: path
          name: id
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/SecureMessageReplyRequest.yml
          multipart/form-data:
            schema:
              properties:
                message:
                  description: Stringified JSON with same parameters as if this was
                    an application/json request (e.g. '{"body":"test body with attachment"}')
                  type: string
                uploads[]:
                  description: |
                    One or more message attachments.

                    <strong>NOTES:</strong>
                    <ul>
                    <li>A single message may have a maximum of 4 attachments.</li>
                    <li>A single attachment cannot exceed 3 MB</li>
                    <li>All attachments combined cannot exceed 6 MB</li>
                    <li>Supported file types/extensions: doc, docx, gif, jpg, pdf, png, rtf, txt, xls, xlsx.</li>
                    </ul>
                  items:
                    format: binary
                    type: string
                  type: array
              type: object
        description: Reply message body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PostSecureMessageDetail.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/{id}/reply
  /v0/messaging/health/messages/{id}/thread:
    get:
      description: |
        Gets a list of message summaries that are related to the message of the passed id and older than the message of 
        the id provided. Does <strong>not</strong> include the message of the passed id itself.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessageList.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/messages/{id}/thread
  /v1/messaging/health/messages/{id}/thread:
    get:
      description: |
        Gets a list of message summaries that are related to the message of the passed id regardless of their age in 
        relation to the message of the id provided. Unless specified in the query parameters, this <strong>does</strong> 
        include the message of the passed id itself.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - description: Excludes the message with the provided message id
          in: query
          name: 'excludeProvidedMessage'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/v1/SecureMessageList.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v1/messaging/health/messages/{id}/thread
  /v0/messaging/health/recipients:
    get:
      description: List available recipients to which messages may be sent
      parameters:
        - description: Whether or not to use this API's cache or fetch records from
            the upstream service. Defaults to true.
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/SecureMessagingRecipients.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/messaging/health/recipients
  /v0/military-service-history:
    get:
      description: Returns user's service history
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/MilitaryHistory.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/military-service-history
  /v0/payment-history:
    get:
      description: Returns user's payment history
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - description: The start date for the range of payments in ISO 8601 UTC format. Defaults to the beginning of the year of the most recent payment.
          example: 2020-10-29T07:00:00Z
          in: query
          name: startDate
          schema:
            format: date-time
            type: string
        - description: The end date for the range of appointments in ISO 8601 UTC format. Defaults to the end of the year of the most recent payment.
          example: 2021-11-29T08:00:00Z
          in: query
          name: endDate
          schema:
            format: date-time
            type: string
        - description: The page number requested. Defaults to 1.
          example: 1
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 10.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PaymentHistory.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/payment-history
  /v0/payment-information/benefits:
    get:
      description: Returns direct deposit payment info
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PaymentInfo.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/payment-information/benefits
    put:
      description: Returns updated direct deposit payment info
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/UpdatePaymentInfoRequest.yml
        description: New direct deposit info
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PaymentInfo.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/payment-information/benefits
  /v0/pensions:
    get:
      description: Get current pensions overview
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/Pensions.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/pensions
  /v0/push/prefs/{endpointSid}:
    get:
      description: Get the user's push notification preferences
      parameters:
        - description: device endpointSid provided by the register endpoint
          in: path
          name: endpointSid
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PushGetPreferences.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/push/prefs/{endpointSid}
    put:
      description: Set the user's push notification preferences
      parameters:
        - description: device endpointSid provided by the register endpoint
          in: path
          name: endpointSid
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/PushPreferences.yml
        description: Push notification preferences
        required: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/push/prefs/{endpointSid}
  /v0/push/register:
    put:
      description: Allows a new app install to register to receive push notifications
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/PushRegistration.yml
        description: Device information
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: ./schemas/PushRegistrationResponse.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/push/register
  /v0/push/send:
    post:
      description: Allows client to trigger specified push notification to be sent
        to specified endpoint
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/PushSendRequestBody.yml
        description: Template id, endpoint sid, and personalization for template
        required: true
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/push/send
  /v0/user:
    get:
      description: |
        Returns the user profile, including the user's addresses and the services the user has the requisite ids to access. Meta data for this endpoint returns all the services available in the API.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: ./schemas/User.yml
                  meta:
                    properties:
                      availableServices:
                        description: All services available through the mobile API. See authorizedServices for a list of services available to the user.
                        example:
                          - appeals
                          - appointments
                          - claims
                          - directDepositBenefits
                          - disabilityRating
                          - lettersAndDocuments
                          - militaryServiceHistory
                          - paymentHistory
                          - userProfileUpdate
                          - secureMessaging
                          - scheduleAppointments
                          - prescriptions
                        type: array
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user
  /v0/user/authorized-services:
    get:
      description: |
        Returns a hash of all available services, and a boolean value of whether the user has access to that service.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: ./schemas/UserAuthorizedServices.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/user/authorized-services
  /v0/user/contact-info:
    get:
      description: |
        Returns the user contact info. If the user does not have a vet360 id, the contact info will be null.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: ./schemas/UserContactInfo.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/user/contact-info
  /v1/user:
    get:
      description: |
        Returns the user profile, including the user's addresses and the services the user has the requisite ids to access. Meta data for this endpoint returns all the services available in the API. v1 includes LOGINGOV as login type.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: ./schemas/v1/User.yml
                  meta:
                    properties:
                      availableServices:
                        description: All services available through the mobile API. See authorizedServices for a list of services available to the user.
                        example:
                          - appeals
                          - appointments
                          - claims
                          - directDepositBenefits
                          - disabilityRating
                          - lettersAndDocuments
                          - militaryServiceHistory
                          - paymentHistory
                          - userProfileUpdate
                          - secureMessaging
                          - scheduleAppointments
                          - prescriptions
                        type: array
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v1/user
  /v2/user:
    get:
      description: |
        Returns basic user information
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: ./schemas/v2/User.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v2/user
  /v0/user/addresses:
    delete:
      description: Deletes a user's address
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/Address.yml
        description: A domestic, internation, or military address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AddressTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/addresses
    post:
      description: Creates a new residential or mailing address for a user. Calling
        this endpoint is the second step in adding a new address for a user. The first
        step is to call the address validation endpoint to check if an address is
        valid. If it is valid you'll receive a 'addressMetaData' object back with
        the addresses confidence score. This object should then be included along
        with the new address in the request body. If the user wishes to continue with
        an 'invalid' address then the 'validationKey' should be passed along with
        the new address in the request body. This lets the underlying service know
        that an invalid address be passed through.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            examples:
              Using Overridden Address:
                value:
                  addressLine1: 1493 Martin Luther King Rd
                  addressPou: RESIDENCE/CHOICE
                  addressType: DOMESTIC
                  city: Fulton
                  countryCodeIso3: USA
                  countryName: United States
                  stateCode: MS
                  validationKey: -1206619807
                  zipCode: '38843'
              Using Suggested Address:
                value:
                  addressLine1: 1493 Martin Luther King Rd
                  addressMetaData:
                    addressType: Domestic
                    confidenceScore: 100
                    deliveryPointValidation: CONFIRMED
                    residentialDeliveryIndicator: RESIDENTIAL
                  addressPou: RESIDENCE/CHOICE
                  addressType: DOMESTIC
                  city: Fulton
                  countryCodeIso3: USA
                  countryName: United States
                  stateCode: MS
                  zipCode: '38843'
            schema:
              $ref: './schemas/AddressCreate.yml'
        description: A domestic, internation, or military address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AddressTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/addresses
    put:
      description: Updates a user's residential or mailing address. Calling this endpoint
        is the second step in adding a new address for a user. The first step is to
        call the address validation endpoint to check if an address is valid. If it
        is valid you'll receive a 'addressMetaData' object back with the addresses
        confidence score. This object should then be included along with the new address
        in the request body. If the user wishes to continue with an 'invalid' address
        then the 'validationKey' should be passed along with the new address in the
        request body. This lets the underlying service know that an invalid address
        be passed through.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            examples:
              Using Overridden Address:
                value:
                  addressLine1: 1493 Martin Luther King Rd
                  addressPou: RESIDENCE/CHOICE
                  addressType: DOMESTIC
                  city: Fulton
                  countryCodeIso3: USA
                  countryName: United States
                  id: 181513
                  stateCode: MS
                  validationKey: -1206619807
                  zipCode: '38843'
              Using Suggested Address:
                value:
                  addressLine1: 1493 Martin Luther King Rd
                  addressMetaData:
                    addressType: Domestic
                    confidenceScore: 100
                    deliveryPointValidation: CONFIRMED
                    residentialDeliveryIndicator: RESIDENTIAL
                  addressPou: RESIDENCE/CHOICE
                  addressType: DOMESTIC
                  city: Fulton
                  countryCodeIso3: USA
                  countryName: United States
                  id: 181513
                  stateCode: MS
                  zipCode: '38843'
            schema:
              $ref: './schemas/AddressUpdate.yml'
        description: A domestic, internation, or military address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/AddressTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/addresses
  /v0/user/addresses/validate:
    post:
      description: Validates a residential or mailing address for a user. Calling
        this endpoint is the first step in adding a new address for a user. If the
        address is valid you'll receive a 'addressMetaData' object back with the addresses
        confidence score. This object should then be included along with the new address
        in the request body. If the user wishes to continue with an 'invalid' address
        then the 'validationKey' should be passed along with the new address in the
        request body. This lets the underlying service know that an invalid address
        be passed through.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            example:
              addressLine1: 51 W Weber Rd
              addressPou: CORRESPONDENCE
              addressType: DOMESTIC
              city: Columbus
              countryCodeIso3: USA
              countryName: United States
              stateCode: OH
              type: DOMESTIC
              zipCode: '43202'
            schema:
              $ref: ./schemas/Address.yml
        description: A domestic, internation, or military address
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                Multiple matches:
                  value:
                    $ref: ./examples/addresses/validation_multiple_matches.yml
                Single match:
                  value:
                    $ref: ./examples/addresses/validation_single_matches.yml
              schema:
                $ref: ./schemas/AddressResponse.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/addresses/validate
  /v0/user/demographics:
    get:
      description: Returns the users demographics info
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: ./schemas/UserDemographics.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/user/demographics
  /v0/user/emails:
    delete:
      description: Deletes a user's email address
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            example:
              emailAddress: person42@example.com
              id: 42,
            schema:
              $ref: ./schemas/EmailUpdate.yml
        description: The email address to delete
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/EmailTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/emails
    post:
      description: Creates a new email address
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            example:
              emailAddress: person42@example.com
            schema:
              $ref: ./schemas/Email.yml
        description: The new email address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/EmailTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/emails
    put:
      description: Updates a user's email address
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            example:
              emailAddress: person42@example.com
              id: 42,
            schema:
              $ref: ./schemas/EmailUpdate.yml
        description: The new email address
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/EmailTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/emails
  /v0/user/gender_identity:
    put:
      description: Updates a user's gender identity. Only users with id.me or login.gov accounts may use this
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            example:
              code: 'B'
            schema:
              $ref: ./schemas/GenderIdentityUpdate.yml
        description: The new gender identity key
        required: true
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/user/gender_identity
  /v0/user/gender_identity/edit:
    get:
      description: Retrieves a list of valid gender identity keys. Note that this endpoint does not use the camel case key inflection header like most other mobile endpoints to keep the keys upcase.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/GenderIdentityEdit.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/user/gender_identity/edit
  /v0/user/logout:
    get:
      description: |
        Logs the user out by revoking their access token from the IAM SSOe OAuth service and destroying the IAM user, user identity, and session objects from Redis.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/logout
  /v0/user/logged-in:
    post:
      description: Called by the mobile app after successful login to perform any actions needed to start a session.
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/logged-in
  /v0/user/preferred_name:
    put:
      description: Updates a user's preferred name. Only users with id.me or login.gov accounts may use this
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            example:
              text: New Preferred Name
            schema:
              $ref: ./schemas/PreferredNameUpdate.yml
        description: The new preferred name
        required: true
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: [ ]
      summary: /v0/user/preferred_name
  /v0/user/phones:
    delete:
      description: Deletes one of a user's phone numbers
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/PhoneUpdate.yml
        description: The phone number to delete
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PhoneTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/phones
    post:
      description: Creates a phone number for a user
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/Phone.yml
        description: The new phone number
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PhoneTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/phones
    put:
      description: Updates a user's phone number
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./schemas/PhoneUpdate.yml
        description: The new phone number
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/PhoneTransaction.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v0/user/phones
  /v1/health/immunizations:
    get:
      description: Returns a paginated list of immunization records for given user
      parameters:
        - $ref: '#/components/parameters/InflectionHeader'
        - description: The page number requested. Defaults to 1.
          example: 1
          in: query
          name: page[number]
          schema:
            type: integer
        - description: The number of records to return per page. Defaults to 10.
          example: 10
          in: query
          name: page[size]
          schema:
            type: integer
        - description: Whether or not to use this API's cache or fetch records from
            the upstream service. Defaults to true.
          example: true
          in: query
          name: useCache
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./schemas/v1/Immunizations.yml
          description: OK
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '408':
          $ref: '#/components/responses/408'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
      security:
        - Bearer: []
      summary: /v1/health/immunizations

components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Authentication is via an access token returned from IAM's SSOe service. Pass the access token in the 'Authorization' Header in the format 'Bearer {accessToken}'. e.g. 'Bearer abcdefg1234567'.
  parameters:
    InflectionHeader:
      in: header
      name: X-Key-Inflection
      required: false
      schema:
        type: string
        enum: [ camel, snake ]
        default: snake
      description: Allows the API to return camelCase keys rather than snake_case
  responses:
    '400':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: Bad request.
    '401':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: Authentication is possible but has failed or not yet been provided.
    '403':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: Client was forbidden from upstream resource.
    '404':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: The requested resource could not be found.
    '408':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: The response from this API timed out.
    '422':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: Failure in processing entity
    '429':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: Too many requests.
    '500':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: An internal API error occurred.
    '502':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: An upstream service the API depends on returned an error.
    '503':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: An upstream service is unavailable, or its circuit breaker
        may have been tripped.
    '504':
      content:
        application/json:
          schema:
            $ref: ./schemas/Errors.yml
      description: A response from an upstream service timed out.
