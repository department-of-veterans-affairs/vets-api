{
  "openapi": "3.0.1",
  "info": {
    "title": "Form526 Establishment Service API",
    "description": "The Form526 Establishment Service API does something\n",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://something-one/form526-establishment-service/{version}",
      "description": "VA.gov API sandbox environment."
    },
    {
      "url": "https://something-two/form526-establishment-service/{version}",
      "description": "VA.gov API production environment."
    }
  ],
  "paths": {
    "/v1/validate": {
      "post": {
        "tags": [
          "Form526 Claim Establishment Service"
        ],
        "operationId": "validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form526ValidateRequestV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateResponseV1"
                }
              }
            }
          }
        }
      }
    },
    "/v1/submit": {
      "post": {
        "tags": [
          "Form526 Claim Establishment Service"
        ],
        "operationId": "submit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Form526RequestV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Form526ResponseV1"
                }
              }
            }
          }
        }
      }
    },
    "/v1/claims/status": {
      "post": {
        "tags": [
          "Form526 Claim Establishment Service"
        ],
        "description": "  Returns the current processing status of multiple Form526 claim\n   submits related to the given list of claim IDs.\n",
        "operationId": "findClaimSubmitStatuses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkClaimStatusRequestV1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkClaimStatusResponseV1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "documents.read"
            ]
          }
        ]
      }
    },
    "/v1/claims/{claimId}/status": {
      "get": {
        "tags": [
          "Form526 Claim Establishment Service"
        ],
        "description": "  Returns the current processing status of a Form526 claim submit\n  related to the given claimId.\n",
        "operationId": "findClaimSubmitStatus",
        "parameters": [
          {
            "name": "claimId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimStatusResponseV1"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "documents.read"
            ]
          }
        ]
      }
    },
    "/v1/admin/workflows/requests": {
      "get": {
        "tags": [
          "admin-submit-states-controller-v-1"
        ],
        "operationId": "getAllSubmitStates",
        "parameters": [
          {
            "name": "liveness",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "DELETED"
              ],
              "default": "ACTIVE"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitRequestStateResponseV1"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/workflows/requests/{requestId}": {
      "get": {
        "tags": [
          "admin-submit-states-controller-v-1"
        ],
        "operationId": "getSubmitState",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitRequestStateResponseV1"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin-submit-states-controller-v-1"
        ],
        "operationId": "deleteUploadRequest",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BasicErrorDocumentV1"
                    },
                    {
                      "$ref": "#/components/schemas/ValidateResponseV1"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicErrorDocumentV1"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSubmitRequestResponseV1"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "description": "A URI reference to the primary source of the error.",
            "example": "/data/attributes/title"
          },
          "parameter": {
            "type": "string",
            "description": "A string indicating which URI query parameter caused the error.",
            "example": "parameter"
          },
          "header": {
            "type": "string",
            "description": "a string indicating the name of a single request header which caused the error.",
            "example": "header"
          }
        },
        "description": "Source of the error",
        "example": "/data/attributes/title"
      },
      "MetaData": {
        "type": "object",
        "properties": {
          "diagnostics": {
            "type": "string",
            "description": "Diagnostic information that can be submitted with a support request to aid with diagnosing and solving issues.",
            "example": "e6d1119edc914b4db5830f309de0807b"
          }
        },
        "description": "Additional information about the error"
      },
      "StandardErrorV1": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "example": "400"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type.",
            "example": "Invalid field value"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "Code must match \"^[A-Z]{2}$\""
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          },
          "meta": {
            "$ref": "#/components/schemas/MetaData"
          }
        },
        "description": "API invocation or processing error"
      },
      "ValidateResponseV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ValidationResponseV1.ValidationResult"
          }
        }
      },
      "ValidationResponseV1.ValidationResult": {
        "required": [
          "valid"
        ],
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "Whether the request was validated successfully."
          },
          "success": {
            "$ref": "#/components/schemas/ValidationResponseV1.ValidationSuccess"
          },
          "errors": {
            "type": "array",
            "description": "The validation errors, populated in the case of failed validation.",
            "items": {
              "$ref": "#/components/schemas/StandardErrorV1"
            }
          }
        }
      },
      "ValidationResponseV1.ValidationSuccess": {
        "required": [
          "validUntil",
          "validationToke",
          "validationToken"
        ],
        "type": "object",
        "properties": {
          "validationToken": {
            "type": "string",
            "description": "The validation token."
          },
          "validUntil": {
            "type": "integer",
            "description": "The time, in milliseconds since epoch, that the token expires.",
            "format": "int64"
          }
        },
        "description": "The validation result, populated in the case of successful validation."
      },
      "BasicErrorDocumentV1": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "description": "The list of errors returned from the attempted operation.",
            "items": {
              "$ref": "#/components/schemas/BasicErrorV1"
            }
          }
        },
        "description": "An error response in JSON:API format (see https://jsonapi.org/format/#document-structure)."
      },
      "BasicErrorV1": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "Code must match \"^[A-Z]{2}$\""
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "example": 400
          },
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type.",
            "example": "https://example.net/validation-error"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type.",
            "example": "Invalid field value"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "example": "e6d1119e-dc91-4b4d-b583-0f309de0807b"
          },
          "diagnostics": {
            "type": "string",
            "description": "Diagnostic information that can be submitted with a support request to aid with diagnosing and solving issues.",
            "example": "e6d1119edc914b4db5830f309de0807b"
          }
        },
        "description": "API invocation or processing error"
      },
      "ApproximateBeginDateV1": {
        "required": [
          "year"
        ],
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "The year of the disability's approximate begin date.",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "The month of the disability's approximate begin date. This field is only required if a\nvalue for the day is provided. In this case, the combination of year, month, and day must\nrepresent a valid date occurring in the past.\n",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "description": "The day of the disability's approximate begin date. This field is optional, but\nif provided a month value is also required. In this case, the combination of year,\nmonth, and day must represent a valid date occurring in the past.\n",
            "format": "int32"
          }
        }
      },
      "ChangeOfAddressV1": {
        "required": [
          "addressChangeType",
          "addressLine1",
          "addressType",
          "beginningDate",
          "country"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipFirstFive": {
            "type": "string"
          },
          "zipLastFour": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "internationalPostalCode": {
            "type": "string"
          },
          "militaryStateCode": {
            "type": "string",
            "enum": [
              "AA",
              "AE",
              "AP"
            ]
          },
          "militaryPostOfficeTypeCode": {
            "type": "string",
            "enum": [
              "APO",
              "DPO",
              "FPO"
            ]
          },
          "addressType": {
            "type": "string",
            "enum": [
              "DOMESTIC",
              "MILITARY",
              "INTERNATIONAL"
            ]
          },
          "addressChangeType": {
            "type": "string",
            "enum": [
              "TEMPORARY",
              "PERMANENT"
            ]
          },
          "beginningDate": {
            "type": "string",
            "description": "The beginning date of the address change, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          },
          "endingDate": {
            "type": "string",
            "description": "The ending date of the address change, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          }
        }
      },
      "ConfinementV1": {
        "required": [
          "confinementBeginDate",
          "confinementEndDate"
        ],
        "type": "object",
        "properties": {
          "confinementBeginDate": {
            "type": "string",
            "description": "The date that confinement began, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          },
          "confinementEndDate": {
            "type": "string",
            "description": "The date that confinement ended, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          }
        }
      },
      "DisabilityV1": {
        "required": [
          "disabilityActionType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "classificationCode": {
            "type": "string"
          },
          "disabilityActionType": {
            "type": "string",
            "enum": [
              "NONE",
              "NEW",
              "INCREASE",
              "REOPEN"
            ]
          },
          "ratedDisabilityId": {
            "type": "string"
          },
          "diagnosticCode": {
            "type": "integer",
            "format": "int64"
          },
          "specialIssues": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ALS",
                "GWPAH",
                "HEPC",
                "POW",
                "PTSD_1",
                "PTSD_2",
                "PTSD_4",
                "PTSD_3",
                "RRD",
                "PACT",
                "EMP"
              ]
            }
          },
          "approximateBeginDate": {
            "$ref": "#/components/schemas/ApproximateBeginDateV1"
          }
        }
      },
      "Form526DataV1": {
        "required": [
          "claimDate",
          "disabilities",
          "serviceInformation",
          "veteran"
        ],
        "type": "object",
        "properties": {
          "veteran": {
            "$ref": "#/components/schemas/VeteranV1"
          },
          "serviceInformation": {
            "$ref": "#/components/schemas/ServiceInformationV1"
          },
          "disabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisabilityV1"
            }
          },
          "specialCircumstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialCircumstanceV1"
            }
          },
          "claimDate": {
            "type": "string",
            "description": "The date of the claim, in yyyy-MM-dd format. Must be on or before today",
            "format": "date",
            "example": "2024-10-25"
          }
        }
      },
      "Form526ValidateData": {
        "required": [
          "claimantParticipantId",
          "form526",
          "serviceTransactionId",
          "veteranParticipantId"
        ],
        "type": "object",
        "properties": {
          "serviceTransactionId": {
            "type": "string"
          },
          "claimantParticipantId": {
            "type": "integer",
            "format": "int64"
          },
          "veteranParticipantId": {
            "type": "integer",
            "format": "int64"
          },
          "form526": {
            "$ref": "#/components/schemas/Form526DataV1"
          }
        }
      },
      "Form526ValidateRequestV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Form526ValidateData"
          }
        }
      },
      "MailingAddressV1": {
        "required": [
          "addressLine1",
          "addressType",
          "country"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipFirstFive": {
            "type": "string"
          },
          "zipLastFour": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "internationalPostalCode": {
            "type": "string"
          },
          "militaryStateCode": {
            "type": "string",
            "enum": [
              "AA",
              "AE",
              "AP"
            ]
          },
          "militaryPostOfficeTypeCode": {
            "type": "string",
            "enum": [
              "APO",
              "DPO",
              "FPO"
            ]
          },
          "addressType": {
            "type": "string",
            "enum": [
              "DOMESTIC",
              "MILITARY",
              "INTERNATIONAL"
            ]
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          }
        }
      },
      "ReservesNationalGuardServiceV1": {
        "required": [
          "obligationTermOfServiceFromDate",
          "obligationTermOfServiceToDate"
        ],
        "type": "object",
        "properties": {
          "title10Activation": {
            "$ref": "#/components/schemas/Title10ActivationV1"
          },
          "obligationTermOfServiceFromDate": {
            "type": "string",
            "description": "The start date of the term of service obligation, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          },
          "obligationTermOfServiceToDate": {
            "type": "string",
            "description": "The end date of the term of service obligation, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          }
        }
      },
      "ServiceInformationV1": {
        "required": [
          "servicePeriods"
        ],
        "type": "object",
        "properties": {
          "servicePeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServicePeriodV1"
            }
          },
          "reservesNationalGuardService": {
            "$ref": "#/components/schemas/ReservesNationalGuardServiceV1"
          },
          "separationLocationCode": {
            "type": "string"
          },
          "confinements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfinementV1"
            }
          }
        }
      },
      "ServicePeriodV1": {
        "required": [
          "activeDutyBeginDate",
          "activeDutyEndDate",
          "serviceBranch"
        ],
        "type": "object",
        "properties": {
          "serviceBranch": {
            "type": "string"
          },
          "activeDutyBeginDate": {
            "type": "string",
            "description": "The date that active duty began, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          },
          "activeDutyEndDate": {
            "type": "string",
            "description": "The date that active duty ended, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          }
        }
      },
      "SpecialCircumstanceV1": {
        "required": [
          "code",
          "description",
          "needed"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code for the special circumstance.",
            "example": "AA"
          },
          "description": {
            "type": "string",
            "description": "Description of the special circumstance.",
            "example": "Automobile Allowance"
          },
          "needed": {
            "type": "boolean"
          }
        }
      },
      "Title10ActivationV1": {
        "required": [
          "anticipatedSeparationDate",
          "title10ActivationDate"
        ],
        "type": "object",
        "properties": {
          "title10ActivationDate": {
            "type": "string",
            "description": "The date of Title 10 activation, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          },
          "anticipatedSeparationDate": {
            "type": "string",
            "description": "The anticipated separation date, in yyyy-MM-dd format.",
            "format": "date",
            "example": "2024-10-25"
          }
        }
      },
      "VeteranV1": {
        "required": [
          "currentMailingAddress"
        ],
        "type": "object",
        "properties": {
          "currentMailingAddress": {
            "$ref": "#/components/schemas/MailingAddressV1"
          },
          "changeOfAddress": {
            "$ref": "#/components/schemas/ChangeOfAddressV1"
          }
        }
      },
      "Form526RequestV1": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Form526SubmitData"
          }
        }
      },
      "Form526SubmitData": {
        "required": [
          "claimantParticipantId",
          "form526",
          "serviceTransactionId",
          "veteranParticipantId"
        ],
        "type": "object",
        "properties": {
          "validationToken": {
            "type": "string"
          },
          "serviceTransactionId": {
            "type": "string"
          },
          "claimantParticipantId": {
            "type": "integer",
            "format": "int64"
          },
          "veteranParticipantId": {
            "type": "integer",
            "format": "int64"
          },
          "form526": {
            "$ref": "#/components/schemas/Form526DataV1"
          }
        }
      },
      "Form526ResponseV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubmitResponse"
          }
        }
      },
      "SubmitResponse": {
        "type": "object",
        "properties": {
          "claimId": {
            "type": "integer",
            "format": "int64"
          },
          "endProductClaimCode": {
            "type": "string"
          },
          "endProductClaimName": {
            "type": "string"
          },
          "requestId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BulkClaimStatusRequestV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UploadRequestAsyncProcessingStatusBulkRequestV1.UploadRequestIds"
          }
        },
        "description": "Requests the processing status of more than one claim submit."
      },
      "UploadRequestAsyncProcessingStatusBulkRequestV1.UploadRequestIds": {
        "required": [
          "claimIds"
        ],
        "type": "object",
        "properties": {
          "claimIds": {
            "type": "array",
            "description": "The list of claimIds that identify claim submits to retrieve status for.",
            "items": {
              "type": "integer",
              "description": "The list of claimIds that identify claim submits to retrieve status for.",
              "format": "int64"
            }
          }
        }
      },
      "BulkClaimStatusResponseV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BulkClaimStatusResponseV1.ClaimStatusesV1"
          }
        }
      },
      "BulkClaimStatusResponseV1.ClaimStatusesV1": {
        "required": [
          "claimIdsNotFound",
          "statuses"
        ],
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimStatusV1"
            }
          },
          "claimIdsNotFound": {
            "type": "array",
            "description": "A list populated with claimIds whose status was not found.\n",
            "items": {
              "type": "integer",
              "description": "A list populated with claimIds whose status was not found.\n",
              "format": "int64"
            }
          }
        }
      },
      "ClaimStatusV1": {
        "required": [
          "claimId",
          "status",
          "steps"
        ],
        "type": "object",
        "properties": {
          "claimId": {
            "type": "integer",
            "description": "The claimId of the submit claim.",
            "format": "int64",
            "example": 600000001
          },
          "time": {
            "$ref": "#/components/schemas/ClaimStatusV1.WorkflowTime"
          },
          "status": {
            "type": "string",
            "description": "The current execution status of the workflow:\n* `IN_PROGRESS`: the workflow is currently executing.\n* `SUCCESS`: the workflow has completed all steps successfully.\n* `FAILED`: the workflow could not complete because a step encountered\na non-recoverable error.\n",
            "enum": [
              "IN_PROGRESS",
              "SUCCESS",
              "FAILED"
            ]
          },
          "steps": {
            "type": "array",
            "description": "The list of workflow steps that process the document upload, ordered by their sequence.",
            "items": {
              "$ref": "#/components/schemas/ClaimStatusV1.Step"
            }
          },
          "error": {
            "$ref": "#/components/schemas/ClaimStatusV1.WorkflowError"
          }
        },
        "description": "The status of a single submit claim."
      },
      "ClaimStatusV1.Step": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The workflow step name:\n* `CREATE_CONTENTIONS`: Create Contentions\n* `ADD_RATED_ISSUE_FOR_CONTENTIONS`: Add Rated Issues\n* `UPDATE_FORWARDING_ADDRESS`: Update Forwarding Address\n",
            "enum": [
              "UPDATE_FORWARDING_ADDRESS",
              "ADD_RATED_ISSUE_FOR_CONTENTIONS",
              "CREATE_CONTENTIONS"
            ]
          },
          "nextStepName": {
            "type": "string",
            "description": "The workflow step name:\n* `CREATE_CONTENTIONS`: Create Contentions\n* `ADD_RATED_ISSUE_FOR_CONTENTIONS`: Add Rated Issues\n* `UPDATE_FORWARDING_ADDRESS`: Update Forwarding Address\n",
            "enum": [
              "UPDATE_FORWARDING_ADDRESS",
              "ADD_RATED_ISSUE_FOR_CONTENTIONS",
              "CREATE_CONTENTIONS"
            ]
          },
          "description": {
            "type": "string",
            "description": "A short description of the workflow step"
          },
          "status": {
            "type": "string",
            "description": "The current execution status of the workflow step:\n* `NOT_STARTED`: the workflow step is not yet executing and awaiting completion\nof the previous step.\n* `IN_PROGRESS`: the workflow step is currently executing.\n* `SUCCESS`: the workflow step has completed successfully.\n* `FAILED`: the workflow step encountered a non-recoverable error.\n",
            "enum": [
              "NOT_STARTED",
              "IN_PROGRESS",
              "SUCCESS",
              "FAILED"
            ]
          }
        },
        "description": "The description of a single workflow step."
      },
      "ClaimStatusV1.WorkflowError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "A human-readable summary of the error."
          },
          "step": {
            "type": "string",
            "description": "The workflow step name:\n* `CREATE_CONTENTIONS`: Create Contentions\n* `ADD_RATED_ISSUE_FOR_CONTENTIONS`: Add Rated Issues\n* `UPDATE_FORWARDING_ADDRESS`: Update Forwarding Address\n",
            "enum": [
              "UPDATE_FORWARDING_ADDRESS",
              "ADD_RATED_ISSUE_FOR_CONTENTIONS",
              "CREATE_CONTENTIONS"
            ]
          }
        },
        "description": "Workflow error information."
      },
      "ClaimStatusV1.WorkflowTime": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "description": "The time, in milliseconds since epoch, that the workflow began executing.",
            "format": "int64",
            "example": 1502199000
          },
          "endTime": {
            "type": "integer",
            "description": "The time, in milliseconds since epoch, that the workflow finished executing.\nIn the case of a currently executing workflow, this will be null.\n",
            "format": "int64",
            "example": 1502199000
          }
        },
        "description": "Workflow timing information."
      },
      "ClaimStatusResponseV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaimStatusV1"
          }
        }
      },
      "DeletedStateV1": {
        "required": [
          "id",
          "timeDeleted"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The original submit request identifier.",
            "format": "int64",
            "example": 121
          },
          "timeDeleted": {
            "type": "string",
            "description": "The time the original submit request was deleted.",
            "format": "date-time"
          }
        },
        "description": "Provided for deleted items only."
      },
      "SubmitRequestStateResponseV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubmitRequestStateResponseV1.RequestStates"
          }
        }
      },
      "SubmitRequestStateResponseV1.RequestStates": {
        "type": "object",
        "properties": {
          "submitRequestStates": {
            "type": "array",
            "description": "The list of request states related to the submit request.\n",
            "items": {
              "$ref": "#/components/schemas/SubmitRequestStateV1"
            }
          }
        }
      },
      "SubmitRequestStateV1": {
        "required": [
          "claimantParticipantId",
          "currentStepAttempt",
          "currentStepName",
          "id",
          "veteranParticipantId",
          "workflow",
          "workflowState"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The submit request identifier.",
            "format": "int64",
            "example": 121
          },
          "serviceTransactionId": {
            "type": "string",
            "description": "Id provided by the submitter which can be used to identify\na particular submission request.\n",
            "example": "123-abc"
          },
          "veteranParticipantId": {
            "type": "integer",
            "description": "The Veteran's participant id.\n",
            "format": "int64",
            "example": 99999999
          },
          "claimantParticipantId": {
            "type": "integer",
            "description": "The Claimant's participant id.\n",
            "format": "int64",
            "example": 99999999
          },
          "workflow": {
            "type": "string",
            "description": "The workflow that is processing the submit request."
          },
          "claimId": {
            "maximum": 123456,
            "type": "integer",
            "description": "The id assigned to the claim upon successful submission.\n",
            "format": "int64"
          },
          "currentStepName": {
            "type": "string",
            "description": "The name of the current step of the workflow that is processing the submit request.\n"
          },
          "workflowState": {
            "type": "string",
            "description": "The current state of the workflow processing the submit request.\n",
            "enum": [
              "IN_PROGRESS",
              "COMPLETED"
            ]
          },
          "inError": {
            "type": "boolean",
            "description": "Indication of en error encountered in the current workflow step.\n"
          },
          "isPreDischarge": {
            "type": "boolean",
            "description": "Indication if pre discharged was calculated during validation.\n"
          },
          "furthestServiceClassification": {
            "type": "string",
            "description": "The classification of the furthest service period.\n"
          },
          "mostRecentServicePeriodEndDate": {
            "type": "string",
            "description": "The end date of the most recent service period.\n"
          },
          "submitTime": {
            "type": "string",
            "description": "The timestamp of when the submit request was received.\n"
          },
          "createContentionsRequest": {
            "type": "string",
            "description": "The JSON representation of the create contentions request sent\nto the BGS client.\n"
          },
          "createdContentions": {
            "type": "string",
            "description": "The JSON representation of the create contentions response received\nback from the BGS client.\n"
          },
          "currentStepScheduledMillis": {
            "maximum": 9.223372036854776e+18,
            "type": "integer",
            "description": "The time (in milliseconds since epoch) when the current workflow step is scheduled\nto run. If the current step has not been scheduled, this value will be null.\n",
            "format": "int64"
          },
          "currentStepStartMillis": {
            "maximum": 9.223372036854776e+18,
            "type": "integer",
            "description": "The time (in milliseconds since epoch) when the current workflow step started running.\nIf the current step has not started, this value will be null.\n",
            "format": "int64"
          },
          "currentStepEndMillis": {
            "maximum": 9.223372036854776e+18,
            "type": "integer",
            "description": "The time (in milliseconds since epoch) when the current workflow step finished.\nIf the current step has not finished, this value will be null.\n",
            "format": "int64"
          },
          "currentStepAttempt": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "The number of times the current workflow step has been attempted. In the case of\nfailure, this number will be greater than 1.\n",
            "format": "int32"
          },
          "currentStepLastFailure": {
            "type": "string",
            "description": "The name of the current workflow step that last failed to run.\nIf a failure has not occurred, this value will be null.\n"
          },
          "currentStepLastFailureFatal": {
            "type": "boolean",
            "description": "If the current workflow step failed to run, this value\nindicates if the failure was fatal. Fatal step failures\nwill not be retried.\n"
          },
          "requestStartMillis": {
            "maximum": 9.223372036854776e+18,
            "type": "integer",
            "description": "The time (in milliseconds since epoch) when the submit request was received.\n",
            "format": "int64"
          },
          "requestEndMillis": {
            "maximum": 9.223372036854776e+18,
            "type": "integer",
            "description": "The time (in milliseconds since epoch) when the submit request was completed.\nIf the request has not completed, this value will be null.\n",
            "format": "int64"
          },
          "deleted": {
            "$ref": "#/components/schemas/DeletedStateV1"
          }
        },
        "description": "The list of request states related to the submit request.\n"
      },
      "DeleteInfo": {
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates if the delete request was successful.",
            "example": true
          }
        }
      },
      "DeleteSubmitRequestResponseV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeleteInfo"
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api.va.gov/oauth2/exemplar/system/v1/token",
            "scopes": {
              "documents.write": "Something 1.",
              "documents.read": "Something 2."
            }
          }
        }
      }
    }
  }
}