appName: ""
target_env: ""
image:
  value: ""
  tag: ""
  pullPolicy: Always
vsp_environment: ""
affinityWeight: ""
mockData:
  enabled: false
matchExpressions:
  key: app
  operator: In
topologyKey: kubernetes.io/hostname
annotations:
  ad.datadoghq.com/vets-api-web.checks: {}
serviceAccount:
  enabled: false
  role_arn: ""
  name: ""
#Web configuration

web:
  strategyType: RollingUpdate
  maxSurge: ""
  maxUnavailable: ""
  containers:
    ports:
      - containerPort: ""
        name: web
      - containerPort: ""
        name: ""
  healthCheck:
    requestPath: ""
    port: ""
    initialDelaySeconds: ""
    periodSeconds: ""
    readinessPath: ""
    readinessPort: ""
    successThreshold: ""
  socatProxyEnabled: false
  envSecrets:
    - name: DD_APM_ENABLED
      value: false
  resources:
    requests:
      cpu: ""
      memory: ""
    limits:
      cpu: ""
      memory: ""
  ssoeEnabled: false
  ssoeConfigs: {}
  ingress:
    enabled: true
    entryPoints: ""
    default:
      port: ""
      kind: ""
      middleware: ""
      host: ""
      priority: ""
    headers:
      enabled: false
      properties: {}
  webServices: {}
  autoscaling:
    minReplicas: ""
    maxReplicas: ""
    targetAverageValue: ""
  service:
    enabled: false
    annotations:
      traefik.backend.loadbalancer.sticky: "true"
    ports: ""
    type: ClusterIP
  externalDns:
    dnsName: ""
    recordTTL: ""
    targets: ""
  dbMigrate:
    enabled: false
    envSecrets:
      - name: DD_APM_ENABLED
        value: false


#Worker Configuration
worker:
  enabled: false
  strategyType: RollingUpdate
  maxSurge: ""
  maxUnavailable: ""
  containers:
    command: []
    args: []
  autoscaling:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetAverageValue: ""
    query: ""
  healthCheck:
    requestPath: ""
    port: ""
    initialDelaySeconds: ""
    periodSeconds: ""
    readinessPath: ""
    readinessPort: ""
    timeoutSeconds: ""
    successThreshold: ""
    command: []
  terminationGracePeriodSeconds: ""
  socatProxyEnabled: false
  envSecrets:
    - name: DD_APM_ENABLED
      value: false
  resources:
    requests:
      cpu: ""
      memory: ""
    limits:
      cpu: ""
      memory: ""
  service:
    enabled: false

clamav:
  enabled: false
  command: ""
  image:
    tag: ""
    value: ""
  volumeMounts: {}
  ports: {}
  probes: {}
  resources: {}

# Common configuration
common:
  socatProxy: {}
  lighthousePreConfigs:
    name: ""
    data: ""
  volumeMounts: {}
  volumes: {}
  initContainers: {}
  secrets: {}
  configMap:
    name: ""
    data: ""

