---
http_interactions:
- request:
    method: get
    uri: https://api.github.com/repos/holdenhinkle/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/vnd.github.v3+json
      User-Agent:
      - Octokit Ruby Gem 4.20.0
      Content-Type:
      - application/json
      Authorization:
      - removed
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - GitHub.com
      Date:
      - Wed, 27 Jan 2021 16:51:45 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Status:
      - 200 OK
      Cache-Control:
      - private, max-age=60, s-maxage=60
      Vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP
      - Accept-Encoding, Accept, X-Requested-With
      Etag:
      - W/"7343f3cd7718ea7c17279ac6a28a72e50dcb71e4"
      Last-Modified:
      - Tue, 19 Jan 2021 18:43:52 GMT
      X-Oauth-Scopes:
      - public_repo
      X-Accepted-Oauth-Scopes:
      - ''
      X-Github-Media-Type:
      - github.v3; format=json
      X-Ratelimit-Limit:
      - '5000'
      X-Ratelimit-Remaining:
      - '4945'
      X-Ratelimit-Reset:
      - '1611768779'
      X-Ratelimit-Used:
      - '55'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes,
        X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Content-Security-Policy:
      - default-src 'none'
      X-Github-Request-Id:
      - DEDF:023A:177D585:279A092:60119A20
    body:
      encoding: ASCII-8BIT
      string: '{"name":"viewportPreset.js","path":"src/platform/testing/e2e/cypress/support/commands/viewportPreset.js","sha":"7343f3cd7718ea7c17279ac6a28a72e50dcb71e4","size":3386,"url":"https://api.github.com/repos/holdenhinkle/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js?ref=master","html_url":"https://github.com/holdenhinkle/vets-website/blob/master/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js","git_url":"https://api.github.com/repos/holdenhinkle/vets-website/git/blobs/7343f3cd7718ea7c17279ac6a28a72e50dcb71e4","download_url":"https://raw.githubusercontent.com/holdenhinkle/vets-website/master/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js","type":"file","content":"Y29uc3QgcHJlc2V0cyA9IHsKICAvLyBUb3AgbW9iaWxlIHByZXNldHMgYnkg\ndHJhZmZpYyBwZXJjZW50YWdlLCBkZXNjZW5kaW5nCiAgJ3ZhLXRvcC1tb2Jp\nbGUtMSc6IHsgd2lkdGg6IDQxNCwgaGVpZ2h0OiA4OTYgfSwKICAndmEtdG9w\nLW1vYmlsZS0yJzogeyB3aWR0aDogMzc1LCBoZWlnaHQ6IDY2NyB9LAogICd2\nYS10b3AtbW9iaWxlLTMnOiB7IHdpZHRoOiAzNzUsIGhlaWdodDogODEyIH0s\nCiAgJ3ZhLXRvcC1tb2JpbGUtNCc6IHsgd2lkdGg6IDQxNCwgaGVpZ2h0OiA3\nMzYgfSwKICAndmEtdG9wLW1vYmlsZS01JzogeyB3aWR0aDogMzIwLCBoZWln\naHQ6IDU2OCB9LAogIC8vIFRvcCB0YWJsZXQgcHJlc2V0cyBieSB0cmFmZmlj\nIHBlcmNlbnRhZ2UsIGRlc2NlbmRpbmcKICAndmEtdG9wLXRhYmxldC0xJzog\neyB3aWR0aDogNzY4LCBoZWlnaHQ6IDEwMjQgfSwKICAndmEtdG9wLXRhYmxl\ndC0yJzogeyB3aWR0aDogMTA4MCwgaGVpZ2h0OiAxOTIwIH0sCiAgJ3ZhLXRv\ncC10YWJsZXQtMyc6IHsgd2lkdGg6IDcyMCwgaGVpZ2h0OiAxMjgwIH0sCiAg\nJ3ZhLXRvcC10YWJsZXQtNCc6IHsgd2lkdGg6IDgwMCwgaGVpZ2h0OiAxMjgw\nIH0sCiAgJ3ZhLXRvcC10YWJsZXQtNSc6IHsgd2lkdGg6IDYwMSwgaGVpZ2h0\nOiA5NjIgfSwKICAvLyBUb3AgZGVza3RvcCBwcmVzZXRzIGJ5IHRyYWZmaWMg\ncGVyY2VudGFnZSwgZGVzY2VuZGluZwogICd2YS10b3AtZGVza3RvcC0xJzog\neyB3aWR0aDogMTI4MCwgaGVpZ2h0OiA5NjAgfSwKICAndmEtdG9wLWRlc2t0\nb3AtMic6IHsgd2lkdGg6IDE5MjAsIGhlaWdodDogMTA4MCB9LAogICd2YS10\nb3AtZGVza3RvcC0zJzogeyB3aWR0aDogMTM2NiwgaGVpZ2h0OiA3NjggfSwK\nICAndmEtdG9wLWRlc2t0b3AtNCc6IHsgd2lkdGg6IDE0NDAsIGhlaWdodDog\nOTAwIH0sCiAgJ3ZhLXRvcC1kZXNrdG9wLTUnOiB7IHdpZHRoOiAxNTM2LCBo\nZWlnaHQ6IDg2NCB9LAp9OwoKY29uc3QgaXNWYWxpZFByZXNldCA9IHByZXNl\ndCA9PiBwcmVzZXRzW3ByZXNldF0gIT09IHVuZGVmaW5lZDsKCmNvbnN0IGlz\nVmFsaWRPcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uID0+IHsKICByZXR1cm4g\nb3JpZW50YXRpb24gPT09ICdwb3J0cmFpdCcgfHwgb3JpZW50YXRpb24gPT09\nICdsYW5kc2NhcGUnOwp9OwoKY29uc3QgaXNWYWxpZE9wdGlvbnMgPSBvcHRp\nb25zID0+IHsKICByZXR1cm4gKAogICAgKHR5cGVvZiBvcHRpb25zID09PSAn\nb2JqZWN0JyAmJgogICAgICBvcHRpb25zICE9PSBudWxsICYmCiAgICAgIG9w\ndGlvbnMubG9nICYmCiAgICAgIG9wdGlvbnMubG9nID09PSB0cnVlKSB8fAog\nICAgb3B0aW9ucy5sb2cgPT09IGZhbHNlCiAgKTsKfTsKCmNvbnN0IHByZXNl\ndEVycm9yID0gInByZXNldCBhcmd1bWVudCBpcyBpbnZhbGlkIGJlY2F1c2Ug\ncHJlc2V0IGRvZXNuJ3QgZXhpc3QiOwoKY29uc3Qgb3JpZW50YXRpb25FcnJv\nciA9CiAgIm9yaWVudGF0aW9uIGFyZ3VtZW50IG11c3QgYmUgJ3BvcnRyYWl0\nJyBvciAnbGFuZHNjYXBlJyI7Cgpjb25zdCBvcHRpb25zRXJyb3IgPQogICJv\ncHRpb25zIGFyZ3VtZW50IG11c3QgYmUgYW4gb2JqZWN0IHdpdGggYSAnbG9n\nJyBzZXQgdG8gYSBib29sZWFuIjsKCmNvbnN0IGZvcm1hdEVycm9ycyA9IGVy\ncm9ycyA9PiBlcnJvcnMubWFwKGUgPT4gYFxuKiAke2V9YCk7Cgpjb25zdCB2\naWV3cG9ydFByZXNldEhlbHBlciA9IChwcmVzZXQsIG9yaWVudGF0aW9uLCBv\ncHRpb25zKSA9PiB7CiAgaWYgKAogICAgaXNWYWxpZFByZXNldChwcmVzZXQp\nICYmCiAgICBpc1ZhbGlkT3JpZW50YXRpb24ob3JpZW50YXRpb24pICYmCiAg\nICBpc1ZhbGlkT3B0aW9ucyhvcHRpb25zKQogICkgewogICAgY29uc3QgeyB3\naWR0aCwgaGVpZ2h0IH0gPSBwcmVzZXRzW3ByZXNldF07CiAgICBvcmllbnRh\ndGlvbiA9PT0gJ3BvcnRyYWl0JwogICAgICA/IGN5LnZpZXdwb3J0KHdpZHRo\nLCBoZWlnaHQsIG9wdGlvbnMpCiAgICAgIDogY3kudmlld3BvcnQoaGVpZ2h0\nLCB3aWR0aCwgb3B0aW9ucyk7CiAgfSBlbHNlIGlmICgKICAgICFpc1ZhbGlk\nUHJlc2V0KHByZXNldCkgJiYKICAgICFpc1ZhbGlkT3JpZW50YXRpb24ob3Jp\nZW50YXRpb24pICYmCiAgICAhaXNWYWxpZE9wdGlvbnMob3B0aW9ucykKICAp\nIHsKICAgIHRocm93IG5ldyBFcnJvcigKICAgICAgZm9ybWF0RXJyb3JzKFtw\ncmVzZXRFcnJvciwgb3JpZW50YXRpb25FcnJvciwgb3B0aW9uc0Vycm9yXSks\nCiAgICApOwogIH0gZWxzZSBpZiAoaXNWYWxpZFByZXNldChwcmVzZXQpICYm\nIGlzVmFsaWRPcmllbnRhdGlvbihvcmllbnRhdGlvbikpIHsKICAgIHRocm93\nIG5ldyBFcnJvcihmb3JtYXRFcnJvcnMoW29wdGlvbnNFcnJvcl0pKTsKICB9\nIGVsc2UgaWYgKGlzVmFsaWRPcmllbnRhdGlvbihvcmllbnRhdGlvbikgJiYg\naXNWYWxpZE9wdGlvbnMob3B0aW9ucykpIHsKICAgIHRocm93IG5ldyBFcnJv\ncihmb3JtYXRFcnJvcnMoW3ByZXNldEVycm9yXSkpOwogIH0gZWxzZSBpZiAo\naXNWYWxpZFByZXNldChwcmVzZXQpICYmIGlzVmFsaWRPcHRpb25zKG9wdGlv\nbnMpKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0RXJyb3JzKFtvcmll\nbnRhdGlvbkVycm9yXSkpOwogIH0gZWxzZSBpZiAoaXNWYWxpZFByZXNldChw\ncmVzZXQpKSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoZm9ybWF0RXJyb3JzKFtv\ncmllbnRhdGlvbkVycm9yLCBvcHRpb25zRXJyb3JdKSk7CiAgfSBlbHNlIGlm\nIChpc1ZhbGlkT3JpZW50YXRpb24ob3JpZW50YXRpb24pKSB7CiAgICB0aHJv\ndyBuZXcgRXJyb3IoZm9ybWF0RXJyb3JzKFtwcmVzZXRFcnJvciwgb3B0aW9u\nc0Vycm9yXSkpOwogIH0gZWxzZSB7CiAgICB0aHJvdyBuZXcgRXJyb3IoZm9y\nbWF0RXJyb3JzKFtwcmVzZXRFcnJvciwgb3JpZW50YXRpb25FcnJvcl0pKTsK\nICB9Cn07CgovKioKICogU2V0cyB0aGUgdmlld3BvcnQgYnkgcHJlc2V0IG5h\nbWUuCiAqIEBwYXJhbSAge1N0cmluZ30gcHJlc2V0ICAgICAgIFRoZSBwcmVz\nZXQgbmFtZQogKiBAcGFyYW0gIHtTdHJpbmd9IG9yaWVudGF0aW9uICAncG9y\ndHJhaXQnIG9yICdsYW5kc2NhcGUnLCBkZWZhdWx0cyB0byAncG9ydHJhaXQn\nCiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9ucyAgICAgICdsb2cnIHByb3Bl\ncnR5IGlzIHNldCB0byBhIGJvb2xlYW4sIGRlZmF1bHRzIHRvIHRydWUKICov\nCkN5cHJlc3MuQ29tbWFuZHMuYWRkKAogICd2aWV3cG9ydFByZXNldCcsCiAg\nKHByZXNldCwgb3JpZW50YXRpb24gPSAncG9ydHJhaXQnLCBvcHRpb25zID0g\neyBsb2c6IHRydWUgfSkgPT4gewogICAgdHJ5IHsKICAgICAgdmlld3BvcnRQ\ncmVzZXRIZWxwZXIocHJlc2V0LCBvcmllbnRhdGlvbiwgb3B0aW9ucyk7CiAg\nICB9IGNhdGNoIChlKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcihlKTsKICAg\nIH0KICB9LAopOwo=\n","encoding":"base64","_links":{"self":"https://api.github.com/repos/holdenhinkle/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js?ref=master","git":"https://api.github.com/repos/holdenhinkle/vets-website/git/blobs/7343f3cd7718ea7c17279ac6a28a72e50dcb71e4","html":"https://github.com/holdenhinkle/vets-website/blob/master/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js"}}'
  recorded_at: Wed, 27 Jan 2021 16:51:45 GMT
- request:
    method: get
    uri: https://api.github.com/repos/holdenhinkle/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/vnd.github.V3.raw
      User-Agent:
      - Octokit Ruby Gem 4.20.0
      Content-Type:
      - application/json
      Authorization:
      - removed
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - GitHub.com
      Date:
      - Wed, 27 Jan 2021 16:51:45 GMT
      Content-Type:
      - application/vnd.github.V3.raw; charset=utf-8
      Content-Length:
      - '3386'
      Status:
      - 200 OK
      Cache-Control:
      - private, max-age=60, s-maxage=60
      Vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP
      - Accept-Encoding, Accept, X-Requested-With
      Etag:
      - '"7343f3cd7718ea7c17279ac6a28a72e50dcb71e4"'
      Last-Modified:
      - Tue, 19 Jan 2021 18:43:52 GMT
      X-Oauth-Scopes:
      - public_repo
      X-Accepted-Oauth-Scopes:
      - ''
      X-Github-Media-Type:
      - github.v3; param=V3.raw
      X-Ratelimit-Limit:
      - '5000'
      X-Ratelimit-Remaining:
      - '4944'
      X-Ratelimit-Reset:
      - '1611768779'
      X-Ratelimit-Used:
      - '56'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes,
        X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Content-Security-Policy:
      - default-src 'none'
      X-Github-Request-Id:
      - DEE0:55AC:146F93A:2472587:60119A21
    body:
      encoding: UTF-8
      string: |
        const presets = {
          // Top mobile presets by traffic percentage, descending
          'va-top-mobile-1': { width: 414, height: 896 },
          'va-top-mobile-2': { width: 375, height: 667 },
          'va-top-mobile-3': { width: 375, height: 812 },
          'va-top-mobile-4': { width: 414, height: 736 },
          'va-top-mobile-5': { width: 320, height: 568 },
          // Top tablet presets by traffic percentage, descending
          'va-top-tablet-1': { width: 768, height: 1024 },
          'va-top-tablet-2': { width: 1080, height: 1920 },
          'va-top-tablet-3': { width: 720, height: 1280 },
          'va-top-tablet-4': { width: 800, height: 1280 },
          'va-top-tablet-5': { width: 601, height: 962 },
          // Top desktop presets by traffic percentage, descending
          'va-top-desktop-1': { width: 1280, height: 960 },
          'va-top-desktop-2': { width: 1920, height: 1080 },
          'va-top-desktop-3': { width: 1366, height: 768 },
          'va-top-desktop-4': { width: 1440, height: 900 },
          'va-top-desktop-5': { width: 1536, height: 864 },
        };

        const isValidPreset = preset => presets[preset] !== undefined;

        const isValidOrientation = orientation => {
          return orientation === 'portrait' || orientation === 'landscape';
        };

        const isValidOptions = options => {
          return (
            (typeof options === 'object' &&
              options !== null &&
              options.log &&
              options.log === true) ||
            options.log === false
          );
        };

        const presetError = "preset argument is invalid because preset doesn't exist";

        const orientationError =
          "orientation argument must be 'portrait' or 'landscape'";

        const optionsError =
          "options argument must be an object with a 'log' set to a boolean";

        const formatErrors = errors => errors.map(e => `\n* ${e}`);

        const viewportPresetHelper = (preset, orientation, options) => {
          if (
            isValidPreset(preset) &&
            isValidOrientation(orientation) &&
            isValidOptions(options)
          ) {
            const { width, height } = presets[preset];
            orientation === 'portrait'
              ? cy.viewport(width, height, options)
              : cy.viewport(height, width, options);
          } else if (
            !isValidPreset(preset) &&
            !isValidOrientation(orientation) &&
            !isValidOptions(options)
          ) {
            throw new Error(
              formatErrors([presetError, orientationError, optionsError]),
            );
          } else if (isValidPreset(preset) && isValidOrientation(orientation)) {
            throw new Error(formatErrors([optionsError]));
          } else if (isValidOrientation(orientation) && isValidOptions(options)) {
            throw new Error(formatErrors([presetError]));
          } else if (isValidPreset(preset) && isValidOptions(options)) {
            throw new Error(formatErrors([orientationError]));
          } else if (isValidPreset(preset)) {
            throw new Error(formatErrors([orientationError, optionsError]));
          } else if (isValidOrientation(orientation)) {
            throw new Error(formatErrors([presetError, optionsError]));
          } else {
            throw new Error(formatErrors([presetError, orientationError]));
          }
        };

        /**
         * Sets the viewport by preset name.
         * @param  {String} preset       The preset name
         * @param  {String} orientation  'portrait' or 'landscape', defaults to 'portrait'
         * @param  {Object} options      'log' property is set to a boolean, defaults to true
         */
        Cypress.Commands.add(
          'viewportPreset',
          (preset, orientation = 'portrait', options = { log: true }) => {
            try {
              viewportPresetHelper(preset, orientation, options);
            } catch (e) {
              throw new Error(e);
            }
          },
        );
  recorded_at: Wed, 27 Jan 2021 16:51:45 GMT
recorded_with: VCR 6.0.0
