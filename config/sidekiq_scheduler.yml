# Use `cron` or `at` option to specify that a job should run as scheduled once
# over all workers. The `every` option will run the job once per worker instance
# at the specified interval.

ExportBreakerStatus:
  every: '1m'
  description: "Send breaker status to statsd"

CreateDailySpoolFiles:
  cron: "0 3 * * MON-FRI America/New_York"
  class: EducationForm::CreateDailySpoolFiles
  description: "Generate a daily set of spool files and transmit them over SFTP to a backend system"

EducationForm::CreateDailyFiscalYearToDateReport:
  cron: "0 4 * * * America/New_York"
  description: "Send the daily report to VA stakeholders about Education Benefits submissions"

EducationForm::CreateSpoolSubmissionsReport:
  cron: "15 4 * * MON-FRI America/New_York"
  description: "Send the daily report to the call center about spool file submissions"

EducationForm::Create10203SpoolSubmissionsReport:
  cron: "30 4 * * MON-FRI America/New_York"
  description: "Send the daily 10203 report to the call center about spool file submissions"

EducationForm::Create10203ApplicantDecisionLetters:
  cron: "45 4 * * MON-FRI America/New_York"
  description: "Send 10203 applicant decision letters to applicants"
  enabled: false

Preneeds::DeleteOldUploads:
  cron: "15 2 * * * America/New_York"
  description: "Clear out preneeds file uploads older than 2 months"

DeleteOldPiiLogsJob:
  cron: "20 2 * * * America/New_York"
  description: "Clear out old personal information logs"

CentralMail::DeleteOldClaims:
  cron: "30 2 * * * America/New_York"
  class: CentralMail::DeleteOldClaims
  description: "Clear out central mail claims older than 2 months"

DeleteOldApplications:
  cron: "0 0 * * * America/New_York"
  class: EducationForm::DeleteOldApplications
  description: "Clear out processed 22-1990 applications that are older than 1 month"

SidekiqStatsJob:
  cron: "* * * * *"
  description: "Update Sidekiq stats for export to statsd gauges"

DeleteOldClaims:
  cron: "0 2 * * * America/New_York"
  class: EVSS::DeleteOldClaims
  description: "Clear out EVSS disability claims that have not been updated in 24 hours"

InProgressFormCleaner:
  cron: "0 2 * * * America/New_York"
  class: InProgressFormCleaner
  description: "Clear out saved forms that have not been updated in a while"

VANotify::InProgressForms:
  cron: "0 16 * * * America/New_York"
  class: VANotify::InProgressForms
  description: "In progress form reminder emails (sent via VaNotify)"

FailedClaimsReport:
  cron: "30 3 * * MON America/New_York"
  class: EVSS::FailedClaimsReport
  description: "Notify developers about EVSS claims which could not be uploaded"

FacilityDentalServiceBulkUpdate:
  cron: "25 4 * * * America/New_York"
  class: Facilities::DentalServiceReloadJob
  description: "Download and cache facility access-to-care metric data"

FacilityMentalHealthBulkUpdate:
  cron: "25 4 * * * America/New_York"
  class: Facilities::MentalHealthReloadJob
  description: "Download and cache facility mental health phone number data"

FacilityAccessBulkUpdate:
  cron: "30 4 * * * America/New_York"
  class: Facilities::AccessDataDownload
  description: "Download and cache facility access-to-care metric data"

FacilityLocationVHADriveTime:
  cron: "55 4 * * * America/New_York"
  class: Facilities::PSSGDownload
  description: "Download and store drive time bands"

GlobalDowntimeCache:
  every: "60m"
  class: PagerDuty::CacheGlobalDowntime
  description: "Cache global downtimes from PagerDuty API to S3"

MaintenanceWindowRefresh:
  cron: "*/3 * * * * America/New_York"
  class: PagerDuty::PollMaintenanceWindows
  description: "Poll PagerDuty API for maintenance window information"

VBADocuments::SlackNotifier:
  cron: "0 0 * * * * America/New_York"
  class: VBADocuments::SlackNotifier
  description: "Notifies slack channel if certain benefits states get stuck at the top of every hour"

VBADocuments::UploadScanner:
  cron: "0,30 * * * * * America/New_York"
  class: VBADocuments::UploadScanner
  description: "Poll upload bucket for unprocessed uploads"

VBADocuments::UploadRemover:
  cron: "15,45 * * * * * America/New_York"
  class: VBADocuments::UploadRemover
  description: "Clean up submitted documents from S3"

VBADocuments::UploadStatusBatch:
  every: "60m"
  class: VBADocuments::UploadStatusBatch
  description: "Cache Statuses for VBA Documents"

VBADocuments::ReportUnsuccessfulSubmissions:
  cron: "0 0 * * MON-FRI America/New_York"
  class: VBADocuments::ReportUnsuccessfulSubmissions
  description: "Weekly report of unsuccessful benefits intake submissions"

VBADocuments::ReportMonthlySubmissions:
  cron: "4 3 2 1 * * America/New_York"
  class: VBADocuments::ReportMonthlySubmissions
  description: "Monthly report of benefits intake submissions at 02:03:04 on the first of the month"

ClaimsApi::ReportUnsuccessfulSubmissions:
  cron: "0 23 * * * America/New_York"
  class: ClaimsApi::ReportUnsuccessfulSubmissions
  description: "Weekly report of unsuccessful claims submissions"

VBADocuments::RunUnsuccessfulSubmissions:
  every: "2h"
  class: VBADocuments::RunUnsuccessfulSubmissions
  description: "Run VBADocuments::UploadProcessor for submissions that are stuck in uploaded status"

AppealsApi::DecisionReviewReportDaily:
  cron: "0 23 * * MON-FRI America/New_York"
  class: AppealsApi::DecisionReviewReportDaily
  description: "Daily report of appeals submissions"

AppealsApi::DecisionReviewReportWeekly:
  cron: "0 23 * * SUN America/New_York"
  class: AppealsApi::DecisionReviewReportWeekly
  description: "Weekly report of appeals submissions"

AppealsApi::DailyErrorReport:
  cron: "0 23 * * MON-FRI America/New_York"
  class: AppealsApi::DailyErrorReport
  description: "Daily report of appeals errors"

AppealsApi::HigherLevelReviewCleanUpWeekOldPii:
  every: ['24h', first_in: '45m']
  class: AppealsApi::HigherLevelReviewCleanUpWeekOldPii
  description: "Remove PII of HigherLevelReviews that have 1) reached one of the 'completed' statuses and 2) are a week old"

AppealsApi::HigherLevelReviewUploadStatusBatch:
  cron: "5 * * * *" # Every hour, 5 minutes after the hour
  class: AppealsApi::HigherLevelReviewUploadStatusBatch
  description: "Update HigherLevelReview statuses with their Central Mail status"

AppealsApi::NoticeOfDisagreementCleanUpWeekOldPii:
  every: ['24h', first_in: '45m']
  class: AppealsApi::NoticeOfDisagreementCleanUpWeekOldPii
  description: "Remove PII of NoticeOfDisagreements that have 1) reached one of the 'completed' statuses and 2) are a week old"

AppealsApi::NoticeOfDisagreementUploadStatusBatch:
  cron: "10 * * * *" # Every hour, 10 minutes after the hour
  class: AppealsApi::NoticeOfDisagreementUploadStatusBatch
  description: "Update NoticeOfDisagreement statuses with their Central Mail status"

AppealsApi::SupplementalClaimCleanUpPii:
  every: ['24h', first_in: '45m']
  class: AppealsApi::SupplementalClaimCleanUpPii
  description: "Remove PII of SupplementalClaims that have 1) reached one of the 'completed' statuses and 2) are a week old"

AppealsApi::SupplementalClaimUploadStatusBatch:
  cron: "15 * * * *" # Every hour, 15 minutes after the hour
  class: AppealsApi::SupplementalClaimUploadStatusBatch
  description: "Update SupplementalClaim statuses with their Central Mail status"

TransactionalEmailAnalyticsJob:
  cron: "0 1 * * * America/New_York"
  description: "posts Transactional email (HCA Failure and Direct Deposit Update) sends and failures to Google Analytics"

DeleteOldTransactionsJob:
  cron: "0 3 * * * America/New_York" # Daily @ 3am Eastern
  description: "Deletes old, completed AsyncTransaction records"

MHV::AccountStatisticsJob:
  cron: "0 */4 * * * America/New_York"
  description: "Log MHV Account Statistics"

AccountLoginStatisticsJob:
  cron: "0 6 * * * America/New_York"
  description: "Gather account login statistics for statsd"

SignIn::DeleteExpiredSessionsJob:
  cron: "0 7 * * * America/New_York"

ExternalServicesStatusJob:
  every: '1m'
  description: "Checks the current status of all external services through PagerDuty's API"

VAForms::FetchLatest:
  cron: "0 2 * * * America/New_York"
  class: VAForms::FormReloader
  description: "Fetches latest VA Forms"

AppsApi::FetchConnections:
  every: "60m"
  class: AppsApi::FetchConnections
  description: "Fetches and handles notifications for recent application connections and disconnections"

EducationForm::Process10203Submissions:
  cron: "0 6-18/6 * * * America/New_York"
  class: EducationForm::Process10203Submissions
  description: "Go through 22-10203 submissions and determine if application should be processed as part of normal submission process or rejected"

CypressViewportUpdater::UpdateCypressViewportsJob:
  cron: "0 12 3 * * America/New_York"
  class: CypressViewportUpdater::UpdateCypressViewportsJob
  description: "Updates Cypress files in vets-website with data from Google Analytics."

ClaimsApi::ClaimAuditor:
  cron: "0 11 * * * America/New_York"
  class: ClaimsApi::ClaimAuditor
  description: "Daily alert of pending claims longer than acceptable threshold"

Veteran::VSOReloader:
  cron: "0 2 * * * America/New_York"
  class: Veteran::VSOReloader
  description: Pulls down current list of VSOs and updates accordingly

VBADocuments::DeploymentsNotifier:
  at: "<%=0.seconds.from_now%>"
  description: Does a slack notification of the new code merged into this release for benefits intake

CovidVaccine::ScheduledBatchJob:
  cron: "*/15 * * * * America/New_York"
  class: CovidVaccine::ScheduledBatchJob
  description: Batches received vaccine records and schedules upload to enrollment service.

CovidVaccine::ExpandedScheduledSubmissionJob:
  every: '15m'
  class: CovidVaccine::ExpandedScheduledSubmissionJob
  description: Iterates vaccine records with state=enrollment_pending and attempts MPI lookup and send to Vetext.

CovidVaccine::ExpandedSubmissionStateJob:
  every: '1h'
  class: CovidVaccine::ExpandedSubmissionStateJob
  description: Logs count of states in the covid_vaccine_expanded_registration_submissions table.

VRE::CreateCh31SubmissionsReportJob:
  cron: "0 0 * * * America/New_York"
  include_metadata: true
  description: "Send a daily report to the VRE team about Chapter 31 submissions"

Webhooks::SchedulerJob:
  at: "<%=Settings.vba_documents.v2_enabled ? 0.seconds.from_now : 100.years.from_now%>"
  description: Starts off webhook based notifications

Form1010cg::DeleteOldUploadsJob:
  cron: "0 0 * * * America/New_York"
  description: Delete uploaded caregiver assistance claim forms 30 days old or older.

TestUserDashboard::DailyMaintenance:
  cron: "0 0 * * * America/New_York"
  class: TestUserDashboard::DailyMaintenance
  description: "Checks in TUD users that weren't properly checked in."

TestUserDashboard::TrackAccountStatusesInBigQuery:
  cron: "0 * * * * America/New_York"
  class: TestUserDashboard::TrackAccountStatusesInBigQuery
  description: "Posts the checked_out status of each TUD account to BigQuery."

TestUserDashboard::MirrorAccountsInBigQuery:
  cron: "0 * * * * America/New_York"
  class: TestUserDashboard::MirrorAccountsInBigQuery
  description: "Mirrors TUD accounts in BigQuery."

TestUserDashboard::MirrorAccountAvailabilityLogsInBigQuery:
  cron: "0 */2 * * * America/New_York"
  class: TestUserDashboard::MirrorAccountAvailabilityLogsInBigQuery
  description: "Mirrors the test_user_dashboard_tud_account_availability_logs table in BigQuery."

New1095BsJob:
  cron: "0 3 * * * America/New_York"
  class: Form1095::New1095BsJob
  description: "Getting new 1095Bs"

SidekiqAlive::CleanupQueues:
  cron: "0 * * * * America/New_York"
  class: SidekiqAlive::CleanupQueues
  description: "Cleanup Sidekiq Alive Zombie Queues"
