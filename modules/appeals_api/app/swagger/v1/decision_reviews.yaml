openapi: 3.0.0
info:
  title: Decision Reviews
  description: >+
    The Decision Reviews API allows you to interact with a veteran’s decision reviews, also known as benefit appeals. This API provides a secure and efficient alternative to paper or fax submissions.

    > * For more information on the Decision Review process, including the different types of Decision Reviews, please see [this informative page on VA.gov](https://www.va.gov/decision-reviews/).

    > * The Decision Reviews API supports the Appeals Modernization Act (AMA) process only. Appeals going through the legacy Appeal process cannot be managed through this API. Learn more about AMA [here](https://benefits.va.gov/benefits/appeals.asp).

    ### Authorization

    API requests are authorized through a symmetric API token, provided in an HTTP header with name `apikey`.
  version: 1.0.0
servers:
  - url: https://sandbox-api.va.gov/services/appeals/{version}/decision_review
    description: "VA.gov API sandbox environment"
    variables:
      version:
        default: "v1"
paths:
  /higher_level_reviews:
    post:
      tags:
        - Higher-Level Reviews
      parameters:
        - name: X-VA-SSN
          in: header
          required: true
          description: veteran's SSN
          schema:
            type: string
            pattern: '^\d{9}$'
        - name: X-VA-First-Name
          in: header
          required: true
          description: veteran's first name
          schema:         # if vet only has 1 legal name,
            type: string  # first-name can be whitespace and last-name can hold name
        - name: X-VA-Middle-Initial
          in: header
          required: false
          description: veteran's middle initial
          schema:
            $ref: '#/components/schemas/NonBlankStringMaxLength1'
        - name: X-VA-Last-Name
          in: header
          required: true
          description: veteran's last name
          schema:
            $ref: '#/components/schemas/NonBlankString'
        - name: X-VA-Birth-Date
          in: header
          required: true
          description: veteran's birth date
          schema:
            type: string
            format: date
        - name: X-VA-File-Number
          in: header
          required: false
          description: veteran's file number
          schema:
            $ref: '#/components/schemas/NonBlankString'
        - name: X-VA-Service-Number
          in: header
          required: false
          description: veteran's service number
          schema:
            $ref: '#/components/schemas/NonBlankString'
        - name: X-VA-Insurance-Policy-Number
          in: header
          required: false
          description: veteran's insurance policy number
          schema:
            $ref: '#/components/schemas/NonBlankString'
      summary: Create a Higher-Level Review
      description: >-
        Submits a Decision Review request of type *Higher-Level Review*.
        This endpoint is analogous to submitting
        [VA Form 20-0996](https://www.vba.va.gov/pubs/forms/VBA-20-0996-ARE.pdf)
        via mail or fax.
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/HlrCreate'
            examples:
              "all fields used":
                $ref: '#/components/examples/HlrCreateAllFieldsUsed'
              "minimum fields used":
                $ref: '#/components/examples/HlrCreateMinimumFieldsUsed'
      responses:
        '200':
          description: Success
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      success:
                        type: boolean
                        enum: [true]
              examples:
                success:
                  value:
                    data:
                      success: true
        '422':
          $ref: '#/components/responses/HlrCreate422'
  /higher_level_reviews/schema:
    get:
      tags:
        - Higher-Level Reviews
      summary: Return the JSON Schema for POST /higher_level_reviews
      description: Return the [JSON Schema](https://json-schema.org/) for the `POST /higher_level_reviews` enpdoint.
      responses:
        '200':
          description: the JSON Schema for POST /higher_level_reviews
          content:
            application/json:
              examples:
                default:
                  $ref: '#/components/examples/HlrCreateJsonSchema'
  /higher_level_reviews/validate:
    post:
      tags:
        - Higher-Level Reviews
      summary: Validate a POST /higher_level_reviews request body (dry run)
      description: >-
        Validate a `POST /higher_level_reviews` request body against the JSON Schema.
        Like the `POST /higher_level_reviews`, but *only* does the validations **—does not submit anything.**
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/HlrCreate'
            examples:
              "all fields used":
                $ref: '#/components/examples/HlrCreateAllFieldsUsed'
              "minimum fields used":
                $ref: '#/components/examples/HlrCreateMinimumFieldsUsed'
      responses:
        '200':
          description: Valid
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum: [appeals_api_higher_level_review_validation]
                      attributes:
                        type: object
                        properties:
                          status:
                            type: string
                            enum: [valid]
              examples:
                valid:
                  value:
                    data:
                      type: appeals_api_higher_level_review_validation
                      attributes:
                        status: valid
        '422':
          $ref: '#/components/responses/HlrCreate422'
  /contestable_issues:
    get:
      tags:
        - Issues
      parameters:
        - name: X-VA-SSN
          in: header
          required: true
          description: The SSN of the veteran.
          schema:
            type : string
        - name: X-VA-Receipt-Date
          in: header
          required: true
          description: (yyyy-mm-dd) In order to determine contestability of issues, the receipt date of a hypothetical Decision Review must be supplied.
          schema:
            type: string
            format: date
      summary: Returns all contestable issues for a specific veteran.
      description: >-
        Returns all issues a Veteran could contest in a Decision Review
        as of the `receiptDate`.  Associate these results when creating
        new Decision Reviews.
      responses:
        '200':
          description: JSON:API response returning all contestable issues for a specific veteran.
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: "A contestable issue (to contest this, you include it as a RequestIssue when creating a HigherLevelReview, SupplementalClaim, or Appeal)"
                      properties:
                        type:
                          type: string
                          enum: ["ContestableIssue"]
                        attributes:
                          type: object
                          properties:
                            ratingIssueId:
                              type: string
                              nullable: true
                              description: "RatingIssue ID"
                            ratingIssueProfileDate:
                              type: string
                              nullable: true
                              format: date
                              description: "(yyyy-mm-dd) RatingIssue profile date"
                            ratingIssueDiagnosticCode:
                              type: string
                              nullable: true
                              description: "RatingIssue diagnostic code"
                            ratingDecisionId:
                              type: string
                              nullable: true
                              description: "The BGS ID for the contested rating decision. This may be populated while ratingIssueId is nil"
                            decisionIssueId:
                              type: integer
                              nullable: true
                              description: "DecisionIssue ID"
                            approxDecisionDate:
                              type: string
                              nullable: true
                              format: date
                              description: "(yyyy-mm-dd) Approximate decision date"
                            description:
                              type: string
                              nullable: true
                              description: "Description"
                            rampClaimId:
                              type: string
                              nullable: true
                              description: "RampClaim ID"
                            titleOfActiveReview:
                              type: string
                              nullable: true
                              description: "Title of DecisionReview that this issue is still active on"
                            sourceReviewType:
                              type: string
                              nullable: true
                              description: "The type of DecisionReview (HigherLevelReview, SupplementalClaim, Appeal) the issue was last decided on (if any)"
                            timely:
                              type: boolean
                              description: "An issue is timely if the receipt date is within 372 dates of the decision date."
                            latestIssuesInChain:
                              type: array
                              items:
                                type: object
                                properties:
                                  id:
                                    type: string
                                    nullable: true
                                  approxDecisionDate:
                                    type: string
                                    nullable: true
                                    format: date
                              description: "Shows the chain of decision and rating issues that preceded this issue. Only the most recent issue can be contested (the object itself that contains the latestIssuesInChain attribute)."
                            isRating:
                              type: boolean
                              description: "Whether or not this is a RatingIssue"
        '404':
          description: Veteran not found
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: "#/components/schemas/ErrorWithTitleAndDetail"
              examples:
                bad file number or SSN:
                  value:
                    errors:
                      status: 404,
                      code: veteran_not_found
                      title: "Veteran not found"
        '422':
          description: Bad receipt date
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: "#/components/schemas/ErrorWithTitleAndDetail"
              examples:
                bad receipt date:
                  value:
                    errors:
                      status: 422,
                      code: bad_receipt_date
                      title: "Bad receipt date"
        '500':
          description: Unknown error
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  errors:
                    $ref: "#/components/schemas/ErrorWithTitleAndDetail"
              examples:
                unknown error:
                  value:
                    errors:
                      status: 500,
                      code: unknown_error
                      title: "Unknown error"
components:
  schemas:
    ErrorWithTitleAndDetail:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
          detail:
            type: string
    NonBlankString:
      type: string
      pattern: '\S'
    NonBlankStringMaxLength100:
      allOf:
        - $ref: '#/components/schemas/NonBlankString'
        - maxLength: 100
    NonBlankStringMaxLength10:
      allOf:
        - $ref: '#/components/schemas/NonBlankString'
        - maxLength: 10
    NonBlankStringMaxLength2:
      allOf:
        - $ref: '#/components/schemas/NonBlankString'
        - maxLength: 2
    NonBlankStringMaxLength1:
      allOf:
        - $ref: '#/components/schemas/NonBlankString'
        - maxLength: 1
    Date:
      type: string
      pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}'
    CurrentDate:
      allOf:
        - $ref: '#/components/schemas/Date'
        - description: 'if field is absent, the current date will be used'
    HlrCreate:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/HlrCreateData'
        included:
          $ref: '#/components/schemas/HlrCreateIncluded'
      additionalProperties: false
      required:
        - data
        - included
    HlrCreateData:
      type: object
      properties:
        type:
          type: string
          enum: [HigherLevelReview]
        attributes:
          $ref: '#/components/schemas/HlrCreateDataAttributes'
      additionalProperties: false
      required:
        - type
        - attributes
    HlrCreateDataAttributes:
      description: >-
        If informal conference requested (`informalConference: true`),
        availability must be specified (`informalConferenceTimes`).
        Explanation of abbreviated benefit types:
          `pension`: Pension / Survivor's Benefits,
          `voc_rehab`: Vocational Rehabilitation and Employment,
          `vha`: Veterans Health Administration,
          `nca`: National Cemetery Administration
      oneOf:
        - type: object
          description: informal conference requested
          properties:
            informalConference:
              type: boolean
              enum: [true]
            sameOffice:
              type: boolean
            benefitType:
              $ref: '#/components/schemas/BenefitType'
            veteran:
              $ref: '#/components/schemas/HlrCreateVeteran'
            receiptDate:
              $ref: '#/components/schemas/CurrentDate'
            informalConferenceTimes:
              $ref: '#/components/schemas/HlrCreateInformalConferenceTimes'
            informalConferenceRep:
              $ref: '#/components/schemas/HlrCreateInformalConferenceRep'
          additionalProperties: false
          required:
            - informalConference
            - sameOffice
            - benefitType
            - veteran
            - informalConferenceTimes
        - type: object
          description: informal conference _not_ being requested
          properties:
            informalConference:
              type: boolean
              enum: [false]
            sameOffice:
              type: boolean
            benefitType:
              $ref: '#/components/schemas/BenefitType'
            veteran:
              $ref: '#/components/schemas/HlrCreateVeteran'
            receiptDate:
              $ref: '#/components/schemas/CurrentDate'
          additionalProperties: false
          required:
            - informalConference
            - sameOffice
            - benefitType
            - veteran
    BenefitType:
      type: string
      enum:
        - compensation
        - pension
        - fiduciary
        - insurance
        - education
        - voc_rehab
        - loan_guaranty
        - vha
        - nca
    HlrCreateInformalConferenceTimes:
      type: array
      items:
        $ref: '#/components/schemas/HlrCreateInformalConferenceTime'
      minItems: 1
      maxItems: 2
      uniqueItems: true
    HlrCreateInformalConferenceTime:
      type: string
      description: time ranges in Eastern Time
      enum:
        - 800-1000 ET
        - 1000-1230 ET
        - 1230-1400 ET
        - 1400-1630 ET
    HlrCreateInformalConferenceRep:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/NonBlankString'
        phone:
          $ref: '#/components/schemas/Phone'
      additionalProperties: false
      required:
        - name
        - phone
    Phone:
      type: object
      properties:
        isInternational:
          type: boolean
        countryCode:
          $ref: '#/components/schemas/NonBlankString'
        phoneNumber:
          type: string
          pattern: '^[0-9]{1,14}$'
        areaCode:
          type: string
          pattern: '^[0-9]{3}$'
        extension:
          $ref: '#/components/schemas/NonBlankStringMaxLength10'
        phoneType:
          type: string
          enum:
            - MOBILE
            - HOME
            - WORK
            - FAX
            - TEMPORARY
      additionalProperties: false
      required:
        - isInternational
        - countryCode
        - phoneNumber
        - areaCode
        - phoneType
    Address:
      oneOf:
        - type: object
          properties:
            addressType:
              type: string
              enum:
                - DOMESTIC
                - OVERSEAS MILITARY
            addressLine1:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            addressLine2:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            addressLine3:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            city:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            stateCode:
              $ref: '#/components/schemas/NonBlankStringMaxLength2'
            zipCode:
              type: string
              pattern: '^[0-9]{5}$'
            countryName:
              type: string
            addressPou:
              type: string
              enum:
                - RESIDENCE/CHOICE
                - CORRESPONDENCE
          additionalProperties: false
          required:
            - addressType
            - addressLine1
            - city
            - stateCode
            - zipCode
            - countryName
            - addressPou
        - type: object
          properties:
            addressType:
              type: string
              enum: [INTERNATIONAL]
            addressLine1:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            addressLine2:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            addressLine3:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            city:
              $ref: '#/components/schemas/NonBlankStringMaxLength100'
            internationalPostalCode:
              type: string
            countryName:
              type: string
            addressPou:
              type: string
              enum:
                - RESIDENCE/CHOICE
                - CORRESPONDENCE
          additionalProperties: false
          required:
            - addressType
            - addressLine1
            - city
            - internationalPostalCode
            - countryName
            - addressPou
    HlrCreateVeteran:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        phone:
          $ref: '#/components/schemas/Phone'
        emailAddress:
          type: string
          pattern: '.@.'
      additionalProperties: false
      required:
        - address
    HlrCreateIncluded:
      type: array
      items:
        $ref: '#/components/schemas/HlrCreateContestableIssue'
      minItems: 1
      uniqueItems: true
    HlrCreateContestableIssue:
      type: object
      properties:
        type:
          type: string
          enum: [ContestableIssue]
        attributes:
          $ref: '#/components/schemas/HlrCreateContestableIssueAttributes'
      additionalProperties: false
      required:
        - type
        - attributes
    HlrCreateContestableIssueAttributes:
      type: object
      properties:
        issue:
          $ref: '#/components/schemas/NonBlankString'
        decisionDate:
          $ref: '#/components/schemas/Date'
        decisionIssueId:
          type: integer
        ratingIssueId:
          type: string
        ratingDecisionIssueId:
          type: string
      additionalProperties: false
      required:
        - issue
        - decisionDate
  responses:
    HlrCreate422:
      description: Error
      content:
        application/vnd.api+json:
          schema:
            oneOf:
              - type: object
                properties:
                  errors:
                    type: array
                    minItems: 1
                    maxItems: 1
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [malformed]
                        detail:
                          type: string
                          enum: ["The payload body isn't valid JSON:API format"]
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              enum: ['https://jsonapi.org/format/']
              - type: object
                properties:
                  errors:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        status:
                          type: integer
                        detail:
                          type: string
                        sources:
                          type: string
          examples:
            payloadIsNotJson:
              $ref: '#/components/examples/PayloadIsNotJson'
            violatesJsonSchema:
              value: {
                "errors": [
                  {
                    "status": 422,
                    "detail": "The property /data/attributes did not contain the required key benefitType",
                    "sources": "/data/included"
                  },
                  {
                    "status": 422,
                    "detail": "The property /data/attributes/veteran did not match the following requirements ...",
                    "sources": "/data/attributes/veteran"
                  },
                ]
              }
  examples:
    HlrCreateAllFieldsUsed:
      value:
        data:
          type: HigherLevelReview
          attributes:
            informalConference: true
            sameOffice: true
            benefitType: nca
            veteran:
              address:
                addressType: DOMESTIC
                addressLine1: 401 Kansas Avenue
                addressLine2: 'Unit #724'
                addressLine3: c/o Amelia Earhart
                city: Atchison
                stateCode: KS
                zipCode: '66002'
                countryName: United States
                addressPou: RESIDENCE/CHOICE
              phone:
                isInternational: false
                countryCode: '1'
                areaCode: '555'
                phoneNumber: '8001111'
                extension: '2'
                phoneType: HOME
              emailAddress: josie@example.com
            receiptDate: '2020-02-02'
            informalConferenceTimes:
              - 1230-1400 ET
              - 1400-1630 ET
            informalConferenceRep:
              name: Helen Holly
              phone:
                isInternational: false
                countryCode: '1'
                areaCode: '555'
                phoneNumber: '8001111'
                extension: '2'
                phoneType: HOME
        included:
          - type: ContestableIssue
            attributes:
              issue: tinnitus
              decisionDate: '1900-01-01'
              decisionIssueId: 1
              ratingIssueId: '2'
              ratingDecisionIssueId: '3'
          - type: ContestableIssue
            attributes:
              issue: left knee
              decisionDate: '1900-01-02'
              decisionIssueId: 4
              ratingIssueId: '5'
          - type: ContestableIssue
            attributes:
              issue: right knee
              decisionDate: '1900-01-03'
              ratingIssueId: '6'
              ratingDecisionIssueId: '7'
          - type: ContestableIssue
            attributes:
              issue: PTSD
              decisionDate: '1900-01-04'
              decisionIssueId: 8
              ratingDecisionIssueId: '9'
          - type: ContestableIssue
            attributes:
              issue: Traumatic Brain Injury
              decisionDate: '1900-01-05'
              decisionIssueId: 10
          - type: ContestableIssue
            attributes:
              issue: right shoulder
              decisionDate: '1900-01-06'
              ratingIssueId: '11'
          - type: ContestableIssue
            attributes:
              issue: left shoulder
              decisionDate: '1900-01-07'
              ratingDecisionIssueId: '12'
          - type: ContestableIssue
            attributes:
              issue: left shoulder
              decisionDate: '1920-12-01'
    HlrCreateMinimumFieldsUsed:
      value:
        data:
          type: HigherLevelReview
          attributes:
            informalConference: false
            sameOffice: true
            benefitType: nca
            veteran:
              address:
                addressType: DOMESTIC
                addressLine1: 401 Kansas Avenue
                city: Atchison
                stateCode: KS
                zipCode: '66002'
                countryName: United States
                addressPou: RESIDENCE/CHOICE
        included:
          - type: ContestableIssue
            attributes:
              issue: left shoulder
              decisionDate: '1920-12-01'
    PayloadIsNotJson:
      value: {
        "errors": [
          {
            "type": "malformed",
            "detail": "The payload body isn't valid JSON:API format",
            "links": {
              "about": "https://jsonapi.org/format/"
            }
          }
        ]
      }
    HlrCreateJsonSchema:
      value: |
        {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "description": "JSON Schema for VA Form 20-0996",
          "type": "object",
          "properties": {
            "data":     { "$ref": "#/definitions/data" },
            "included": { "$ref": "#/definitions/included" }
          },
          "additionalProperties": false,
          "required": ["data", "included"],
          "definitions": {


            "nonBlankString": {
              "type": "string",
              "pattern": "[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]",
              "$comment": "The pattern used ensures that a string has at least one non-whitespace character. The pattern comes from JavaScript's \\s character class. \"\\s Matches a single white space character, including space, tab, form feed, line feed, and other Unicode spaces. Equivalent to [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff].\": https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes  We are using simple character classes at JSON Schema's recommendation: https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-4.3"
            },
            "nonBlankStringMaxLength100": {
              "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 100 } ]
            },
            "nonBlankStringMaxLength10": {
              "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 10 } ]
            },
            "nonBlankStringMaxLength2": {
              "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 2 } ]
            },
            "date": {
              "type": "string",
              "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}"
            },
            "currentDate": {
              "allOf": [
                { "$ref": "#/definitions/date" },
                { "$comment": "if field is absent, the current date will be used" }
              ]
            },


            "data": {
              "type": "object",
              "properties": {
                "type":       { "const": "HigherLevelReview" },
                "attributes": { "$ref": "#/definitions/dataAttributes" }
              },
              "additionalProperties": false,
              "required": [ "type", "attributes" ]
            },


            "dataAttributes": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "informalConference": { "const": false },
                    "sameOffice":         { "type": "boolean" },
                    "benefitType":        { "$ref": "#/definitions/benefitType" },
                    "veteran":            { "$ref": "#/definitions/veteran" },
                    "receiptDate":        { "$ref": "#/definitions/currentDate" }
                  },
                  "additionalProperties": false,
                  "required": [
                    "informalConference",
                    "sameOffice",
                    "benefitType",
                    "veteran"
                  ]
                },
                {
                  "$comment": "if informalConference requested, desired times must be included (rep is optional)",
                  "type": "object",
                  "properties": {
                    "informalConference": { "const": true },
                    "sameOffice":         { "type": "boolean" },
                    "benefitType":        { "$ref": "#/definitions/benefitType" },
                    "veteran":            { "$ref": "#/definitions/veteran" },
                    "receiptDate":        { "$ref": "#/definitions/currentDate" },
                    "informalConferenceTimes": { "$ref": "#/definitions/informalConferenceTimes" },
                    "informalConferenceRep":   { "$ref": "#/definitions/informalConferenceRep" }
                  },
                  "additionalProperties": false,
                  "required": [
                    "informalConference",
                    "sameOffice",
                    "benefitType",
                    "veteran",
                    "informalConferenceTimes"
                  ]
                }
              ]
            },


            "benefitType": {
              "type": "string",
              "enum": [
                "compensation",
                "pension",
                "fiduciary",
                "insurance",
                "education",
                "voc_rehab",
                "loan_guaranty",
                "vha",
                "nca"
              ]
            },


            "informalConferenceTimes": {
              "type": "array",
              "items": { "$ref": "#/definitions/informalConferenceTime" },
              "minItems": 1,
              "maxItems": 2,
              "uniqueItems": true
            },


            "informalConferenceTime": {
              "type": "string",
              "#comment": "time ranges in Eastern Time",
              "enum": [
                "800-1000 ET",
                "1000-1230 ET",
                "1230-1400 ET",
                "1400-1630 ET"
              ]
            },


            "informalConferenceRep": {
              "type": "object",
              "properties": {
                "name":  { "$ref": "#/definitions/nonBlankString" },
                "phone": { "$ref": "#/definitions/phone" }
              },
              "additionalProperties": false,
              "required": [ "name", "phone" ]
            },


            "phone": {
              "$comment": "source: VA Profile API - POST /v0/profile/telephones",
              "type": "object",
              "properties": {
                "isInternational": { "type": "boolean" },
                "countryCode":     { "$ref": "#/definitions/nonBlankString" },
                "phoneNumber":     { "type": "string", "pattern": "^[0-9]{1,14}$" },
                "areaCode":        { "type": "string", "pattern": "^[0-9]{3}$" },
                "extension":       { "$ref": "#/definitions/nonBlankStringMaxLength10" },
                "phoneType":       { "type": "string", "enum": [ "MOBILE", "HOME", "WORK", "FAX", "TEMPORARY" ] }
              },
              "additionalProperties": false,
              "required": [
                "isInternational",
                "countryCode",
                "phoneNumber",
                "areaCode",
                "phoneType"
              ]
            },


            "address": {
              "$comment": "source: VA Profile API - POST /v0/profile/addresses",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "addressType":  { "type": "string", "enum": [ "DOMESTIC", "OVERSEAS MILITARY" ] },
                    "addressLine1": { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "addressLine2": { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "addressLine3": { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "city":         { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "stateCode":    { "$ref": "#/definitions/nonBlankStringMaxLength2" },
                    "zipCode":      { "type": "string", "pattern": "^[0-9]{5}$" },
                    "countryName":  { "type": "string" },
                    "addressPou":   { "type": "string", "enum": [ "RESIDENCE/CHOICE", "CORRESPONDENCE" ] }
                  },
                  "additionalProperties": false,
                  "required": [
                    "addressType",
                    "addressLine1",
                    "city",
                    "stateCode",
                    "zipCode",
                    "countryName",
                    "addressPou"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "addressType":             { "const": "INTERNATIONAL" },
                    "addressLine1":            { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "addressLine2":            { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "addressLine3":            { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "city":                    { "$ref": "#/definitions/nonBlankStringMaxLength100" },
                    "internationalPostalCode": { "type": "string" },
                    "countryName":             { "type": "string" },
                    "addressPou":              { "type": "string", "enum": [ "RESIDENCE/CHOICE", "CORRESPONDENCE" ] }
                  },
                  "additionalProperties": false,
                  "required": [
                    "addressType",
                    "addressLine1",
                    "city",
                    "internationalPostalCode",
                    "countryName",
                    "addressPou"
                  ]
                }
              ]
            },


            "veteran": {
              "type": "object",
              "properties": {
                "address":      { "$ref": "#/definitions/address" },
                "phone":        { "$ref": "#/definitions/phone" },
                "emailAddress": {
                  "type": "string",
                  "pattern": ".@.",
                  "$comment": "TODO: use draft 7 feature [format: idn-email] or [format: email] over pattern (when there is broader support)"
                }
              },
              "additionalProperties": false,
              "required": [ "address" ]
            },


            "included": {
              "type": "array",
              "items": { "$ref": "#/definitions/contestableIssue" },
              "minItems": 1,
              "uniqueItems": true
            },


            "contestableIssue": {
              "type": "object",
              "properties": {
                "type":       { "const": "ContestableIssue" },
                "attributes": { "$ref": "#/definitions/contestableIssueAttributes" }
              },
              "additionalProperties": false,
              "required": [ "type", "attributes" ]
            },


            "contestableIssueAttributes": {
              "type": "object",
              "properties": {
                "issue":                 { "$ref": "#/definitions/nonBlankString" },
                "decisionDate":          { "$ref": "#/definitions/date" },
                "decisionIssueId":       { "type": "integer" },
                "ratingIssueId":         { "type": "string" },
                "ratingDecisionIssueId": { "type": "string" }
              },
              "additionalProperties": false,
              "required": [ "issue", "decisionDate" ]
            }
          }
        }
