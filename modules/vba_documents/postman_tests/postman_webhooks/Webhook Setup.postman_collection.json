{
	"info": {
		"_postman_id": "f7ae3afe-282c-479f-932f-f4afad2df191",
		"name": "Webhook Setup",
		"description": "We use standard way to authenticate against Postman API using a `x-api-key` header.\n\nCreate your own API key in your [settings page](https://postman.co/settings/me/api-keys).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Get Your API credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"API call works\", function () {",
							"    pm.response.to.not.be.error;",
							"});",
							"",
							"pm.test(\"user object returned\", function () {",
							"    pm.response.to.have.jsonBody('user');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.getpostman.com/me",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"me"
					]
				},
				"description": "Before getting started, you need to create a new Postman API key under your account.\nhttps://postman.co/settings/me/api-keys\n\nOnce you have it add it to the collection variable named `POSTMAN_API_KEY`\n\nAnd then run this request to make sure everything works correctly. All tests should pass."
			},
			"response": []
		},
		{
			"name": "2. Retrieve all your Workspaces",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    <h2> All workspaces in your Postman account</h2>",
							"    <h4> 1. Copy the workspace named <i>Webhook Debugger</i></h4>",
							"    <h4> 2. Paste it in Collection variable called <i>WebhookWorkspaceId</i></h4>",
							"    <table bgcolor=\"#FFFFFF\">",
							"        <tr>",
							"            <th>Name</th>",
							"            <th>Id</th>",
							"            <th>Action</th>",
							"        </tr>",
							"",
							"        {{#each response.workspaces}}",
							"            <tr>",
							"                <td>{{name}}</td>",
							"                <td>{{id}}</td>",
							"                <td>",
							"                <button onClick=\"navigator.clipboard.writeText('{{id}}').then(function() {",
							"                        alert('Copied to clipboard, you can now add it to your collection environnement.');",
							"                    }, function(err) {",
							"                        console.error('Async: Could not copy text: ', err);",
							"                    });\">üìã Copy to clipboard</button>",
							"                </td>",
							"            </tr>",
							"        {{/each}}",
							"    </table>",
							"    </div>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"console.log(data_);",
							"let workspace = data_.workspaces.find((w)=> w.name === 'Webhook Debugger')",
							"",
							"if(workspace){",
							"    console.log('workspace', workspace)",
							"    pm.environment.set(\"webhookWorkspaceId\", workspace.id);",
							"}else{",
							"    console.log('workspace not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    // Pass the response body parsed as JSON as `data`",
							"    response: pm.response.json()",
							"});",
							"",
							"pm.test(\"Workspaces exist\", function () {",
							"  pm.response.to.not.be.error;",
							"});",
							"",
							"pm.test(\"Workspace 'Webhook Debugger' exists\", function () {",
							"  pm.response.to.have.jsonBody('workspaces');",
							"  pm.expect(workspace).to.not.be.undefined",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.getpostman.com/workspaces",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"workspaces"
					]
				},
				"description": "Use the visualizer to visualize all your Postman workspaces.\n\nAnd find the one named `Webhook Debugger`."
			},
			"response": []
		},
		{
			"name": "3. Find Collections in current Workspace",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    {{#if error}}",
							"        <h2> üõë {{error.title}}</h2>",
							"        <h4> {{error.message}}</h4>",
							"    {{else}}",
							"        <h2> ‚úÖ {{success.title}}</h2>",
							"        <h4> {{success.message}}</h4>",
							"        <hr />",
							"        <h5> Or copy it manually</h5>",
							"        <h3> All collections in the Workspace</h3>",
							"        <table bgcolor=\"#FFFFFF\" which>",
							"        <tr>",
							"            <th>Name</th>",
							"            <th>Id</th>",
							"            <th>Action</th>",
							"        </tr>",
							"",
							"        {{#each response.workspace.collections}}",
							"            <tr>",
							"                <td>{{name}}</td>",
							"                <td>{{uid}}</td>",
							"                <td>",
							"                <button onClick=\"navigator.clipboard.writeText('{{uid}}').then(function() {",
							"                        alert('Copied to clipboard, you can now add it to your collection environnement.');",
							"                    }, function(err) {",
							"                        console.error('Async: Could not copy text: ', err);",
							"                    });\">üìã Copy to clipboard</button>",
							"                </td>",
							"            </tr>",
							"        {{/each}}",
							"    </table>",
							"    {{/if}}",
							"</div>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"let collections = data_.workspace && data_.workspace.collections.filter((c)=> /*c.name === 'Webhook Debug 1'*//^Webhook Debug.*/.test(c.name))",
							"let error = \"\"",
							"",
							"pm.test(\"Workspace exists\", function () {",
							"  pm.response.to.not.be.error;",
							"});",
							"",
							"pm.test(\"Workspace has Webhook Debugging collections\", function () {",
							"  pm.response.to.have.jsonBody('workspace.collections');",
							"  pm.expect(collections).to.not.be.undefined",
							"});",
							"",
							"if(collections){",
							"    console.log('collections', collections)",
							"    collections.forEach((collection, i) => ",
							"        pm.environment.set(\"collectionUID\" + (i+1), collection.uid)",
							"    );",
							"    success = {",
							"        title: `Collections found`,",
							"        message: `values stored in environment variables called: collectionUID#`",
							"    }",
							"}else{",
							"    error = {",
							"       title:  \"Can't find collections named 'Webhook Debug' in Workspace.\",",
							"       message: \"Check which workspace you have selected, that it exists in it and that it hasn't been renamed.\"",
							"    }",
							"    console.log('collection Webhook Debug not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    error,",
							"    success,",
							"    response: pm.response.json()",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-API-Key",
						"value": "{{POSTMAN_API_KEY}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://api.getpostman.com/workspaces/{{webhookWorkspaceId}}",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"workspaces",
						"{{webhookWorkspaceId}}"
					]
				},
				"description": "Automatically finds in the workspace selected at `Step 2` a collection named `Webhook Debug`.\n\nUse the `Visualize` tab to find the collection manually."
			},
			"response": []
		},
		{
			"name": "4. Create Webhook endpoint 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    <h2> ‚úÖ Webhook has been created</h2>",
							"    <p>URL is {{webhook.webhookUrl}}</p>",
							"    <button onClick=\"navigator.clipboard.writeText('{{webhook.webhookUrl}}').then(function() {",
							"        alert('Copied to clipboard, you can now past it whereever you need a webhook.');",
							"    }, function(err) {",
							"        console.error('Async: Could not copy text: ', err);",
							"    });\">üìã Copy to clipboard</button>",
							"    <br />",
							"    <p> Once added, Open https://postman.co/monitor/{{webhook.id}} in your browser to üîç Inspect calls. </p>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"let webhook = data_.webhook",
							"",
							"if(webhook){",
							"    pm.environment.set(\"webhookURL1\", webhook.webhookUrl)",
							"}else{ ",
							"    console.log('collection Webhook Debug not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    // Pass the response body parsed as JSON as `data`",
							"    webhook",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-workspace-id",
						"value": "{{webhookWorkspaceId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"webhook\":{\n        \"name\": \"Webhook Debug 1\",\n        \"collection\": \"{{collectionUID1}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.getpostman.com/webhooks",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"webhooks"
					]
				},
				"description": "Create a webhook endpoint to be called from the outside.\n\nUse `Visualize` tab to get the Webhook URL that could be used in 3rd party app.\n\nIt will also give you the link to inspect the monitor and the incoming requests."
			},
			"response": []
		},
		{
			"name": "4. Create Webhook endpoint 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    <h2> ‚úÖ Webhook has been created</h2>",
							"    <p>URL is {{webhook.webhookUrl}}</p>",
							"    <button onClick=\"navigator.clipboard.writeText('{{webhook.webhookUrl}}').then(function() {",
							"        alert('Copied to clipboard, you can now past it whereever you need a webhook.');",
							"    }, function(err) {",
							"        console.error('Async: Could not copy text: ', err);",
							"    });\">üìã Copy to clipboard</button>",
							"    <br />",
							"    <p> Once added, Open https://postman.co/monitor/{{webhook.id}} in your browser to üîç Inspect calls. </p>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"let webhook = data_.webhook",
							"",
							"if(webhook){",
							"    pm.environment.set(\"webhookURL2\", webhook.webhookUrl)",
							"}else{ ",
							"    console.log('collection Webhook Debug not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    // Pass the response body parsed as JSON as `data`",
							"    webhook",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-workspace-id",
						"value": "{{webhookWorkspaceId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"webhook\":{\n        \"name\": \"Webhook Debug 2\",\n        \"collection\": \"{{collectionUID2}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.getpostman.com/webhooks",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"webhooks"
					]
				},
				"description": "Create a webhook endpoint to be called from the outside.\n\nUse `Visualize` tab to get the Webhook URL that could be used in 3rd party app.\n\nIt will also give you the link to inspect the monitor and the incoming requests."
			},
			"response": []
		},
		{
			"name": "4. Create Webhook endpoint 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    <h2> ‚úÖ Webhook has been created</h2>",
							"    <p>URL is {{webhook.webhookUrl}}</p>",
							"    <button onClick=\"navigator.clipboard.writeText('{{webhook.webhookUrl}}').then(function() {",
							"        alert('Copied to clipboard, you can now past it whereever you need a webhook.');",
							"    }, function(err) {",
							"        console.error('Async: Could not copy text: ', err);",
							"    });\">üìã Copy to clipboard</button>",
							"    <br />",
							"    <p> Once added, Open https://postman.co/monitor/{{webhook.id}} in your browser to üîç Inspect calls. </p>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"let webhook = data_.webhook",
							"",
							"if(webhook){",
							"    pm.environment.set(\"webhookURL3\", webhook.webhookUrl)",
							"}else{ ",
							"    console.log('collection Webhook Debug not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    // Pass the response body parsed as JSON as `data`",
							"    webhook",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-workspace-id",
						"value": "{{webhookWorkspaceId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"webhook\":{\n        \"name\": \"Webhook Debug 3\",\n        \"collection\": \"{{collectionUID3}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.getpostman.com/webhooks",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"webhooks"
					]
				},
				"description": "Create a webhook endpoint to be called from the outside.\n\nUse `Visualize` tab to get the Webhook URL that could be used in 3rd party app.\n\nIt will also give you the link to inspect the monitor and the incoming requests."
			},
			"response": []
		},
		{
			"name": "4. Create Webhook endpoint 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    <h2> ‚úÖ Webhook has been created</h2>",
							"    <p>URL is {{webhook.webhookUrl}}</p>",
							"    <button onClick=\"navigator.clipboard.writeText('{{webhook.webhookUrl}}').then(function() {",
							"        alert('Copied to clipboard, you can now past it whereever you need a webhook.');",
							"    }, function(err) {",
							"        console.error('Async: Could not copy text: ', err);",
							"    });\">üìã Copy to clipboard</button>",
							"    <br />",
							"    <p> Once added, Open https://postman.co/monitor/{{webhook.id}} in your browser to üîç Inspect calls. </p>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"let webhook = data_.webhook",
							"",
							"if(webhook){",
							"    pm.environment.set(\"webhookURL4\", webhook.webhookUrl)",
							"}else{ ",
							"    console.log('collection Webhook Debug not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    // Pass the response body parsed as JSON as `data`",
							"    webhook",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-workspace-id",
						"value": "{{webhookWorkspaceId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"webhook\":{\n        \"name\": \"Webhook Debug 4\",\n        \"collection\": \"{{collectionUID4}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.getpostman.com/webhooks",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"webhooks"
					]
				},
				"description": "Create a webhook endpoint to be called from the outside.\n\nUse `Visualize` tab to get the Webhook URL that could be used in 3rd party app.\n\nIt will also give you the link to inspect the monitor and the incoming requests."
			},
			"response": []
		},
		{
			"name": "4. Create Webhook endpoint 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var template = `",
							"<div style=\"background-color: #FFFFFF; padding: 1em;height: 100%;\">",
							"    <h2> ‚úÖ Webhook has been created</h2>",
							"    <p>URL is {{webhook.webhookUrl}}</p>",
							"    <button onClick=\"navigator.clipboard.writeText('{{webhook.webhookUrl}}').then(function() {",
							"        alert('Copied to clipboard, you can now past it whereever you need a webhook.');",
							"    }, function(err) {",
							"        console.error('Async: Could not copy text: ', err);",
							"    });\">üìã Copy to clipboard</button>",
							"    <br />",
							"    <p> Once added, Open https://postman.co/monitor/{{webhook.id}} in your browser to üîç Inspect calls. </p>",
							"`;",
							"",
							"let data_ = pm.response.json()",
							"let webhook = data_.webhook",
							"",
							"if(webhook){",
							"    pm.environment.set(\"webhookURL5\", webhook.webhookUrl)",
							"}else{ ",
							"    console.log('collection Webhook Debug not found')",
							"}",
							"",
							"pm.visualizer.set(template, {",
							"    // Pass the response body parsed as JSON as `data`",
							"    webhook",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-workspace-id",
						"value": "{{webhookWorkspaceId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"webhook\":{\n        \"name\": \"Webhook Debug 5\",\n        \"collection\": \"{{collectionUID5}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.getpostman.com/webhooks",
					"protocol": "https",
					"host": [
						"api",
						"getpostman",
						"com"
					],
					"path": [
						"webhooks"
					]
				},
				"description": "Create a webhook endpoint to be called from the outside.\n\nUse `Visualize` tab to get the Webhook URL that could be used in 3rd party app.\n\nIt will also give you the link to inspect the monitor and the incoming requests."
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Api-key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{POSTMAN_API_KEY}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}