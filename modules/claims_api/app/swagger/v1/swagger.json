{
  "openapi": "3.0.1",
  "info": {
    "title": "API V1",
    "version": "v1",
    "description": "This API automatically establishes and submits these VA forms.\n| Form number       | Form name     | Description     |\n| :------------- | :----------: | -----------: |\n| [21-526EZ](https://www.va.gov/find-forms/about-form-21-526ez/) | Application for Disability Compensation and Related Compensation Benefits | Used to apply for VA disability compensation and related benefits. |\n| [21-0966](https://www.va.gov/find-forms/about-form-21-0966/) | Intent to File a Claim for Compensation and/or Pension, or Survivors Pension and/or DIC | Submits an intent to file to secure the earliest possible effective date for any retroactive payments. |\n| [21-22](https://www.va.gov/find-forms/about-form-21-22/) | Appointment of Veterans Service Organization as Claimant's Representative | Used to assign an individual or VSO as a POA to help a Veteran with benefits or claims. |\n| [21-22a](https://www.va.gov/find-forms/about-form-21-22a/) | Appointment of Individual As Claimant's Representative | |\n\nIt also lets Veterans or their authorized representatives:\n - Digitally submit supporting documentation for disability compensation claims\n - Retrieve information such as status for any claim, including pension and burial\n - Retrieve power of attorney (POA) status for individuals and Veterans Service Organizations (VSOs)\n - Retrieve intent to file status\n\n## Background\nThe Benefits Claims API offers faster establishment and enhanced reporting for several VA claims and forms. Using this API provides many benefits, such as:\n - Automatic claim and POA establishment\n - Direct establishment of disability compensation claims in Veterans Benefits Management System (VBMS) to avoid unnecessary manual processing and entry by Veteran Service Representatives (VSRs)\n - Faster claims processing by several days\n - End-to-end claims status and result tracking by claim ID\n\nForms not supported by the Benefits Claims API are submitted using the [Benefits Intake API](https://developer.va.gov/explore/benefits/docs/benefits?version=current), which places uploaded PDFs into the Centralized Mail Portal to be manually processed.\n\n## Technical Overview\nThis API accepts a payload of requests and responses on a per-form basis, with the payload identifying the form and Veteran. Trackable responses provide a unique ID which is used with the appropriate GET endpoint to track a submission’s processing status.\n\n### Attachment and file size limits\nThere is no limit on the number of files a payload can contain, but size limits do apply.\n - Uploaded documents cannot be larger than 11\" x 11\"\n - The entire payload cannot exceed 5 GB\n - No single file in a payload can exceed 100 MB\n\n### Authentication and authorization\nTo make an API request, follow our [authentication process](https://developer.va.gov/explore/authorization?api=claims) to receive an [OAuth token](https://oauth.net/2/).\n\n#### Representative authorization\nRepresentatives seeking authorization for a Veteran must first [authenticate](https://developer.va.gov/explore/authorization?api=claims) and then pass the Veteran’s information in the right header:\n - SSN in X-VA-SSN\n - First name in X-VA-First-Name\n - Last name in X-VA-Last-Name\n - Date of birth in X-VA-Birth-Date\n\nOmitting the information will cause the API to treat the representative as the claimant.\n\n#### Veteran authorization\nVeterans seeking authorization do not need to include headers such as X-VA-First-Name since the token authentication via ID.me, MyHealtheVet, or DSLogon provides this information.\n\n### POA Codes\nVeteran representatives receive their organization’s POA code. If they are the assigned POA for a Veteran, that Veteran will have a matching POA code. When a claim is submitted, this API verifies that the representative and Veteran codes match against each other and the codes in the [Office of General Council (OGC) Database](https://www.va.gov/ogc/apps/accreditation/index.asp).\n\nUse the [Power of Attorney endpoint](#operations-Power_of_Attorney-post2122) to assign or update POA status. A newly appointed representative may not be able to submit forms for a Veteran until a day after their POA code is first associated with the OGC data set.\n\n### Test data for sandbox environment use\n[Test data](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts.md) is used for all forms in the sandbox environment and for 21-526 submissions in the staging environment.\n\n### Claim and form processing\nClaims and forms are first submitted by this API and then established in VBMS. A 200 response means only that your claim or form was submitted successfully. To see if your submission is processed or has reached VBMS, you must check its status using the appropriate GET endpoint and the ID returned with your submission response.\n\nA “claim established” status means the claim has reached VBMS. In sandbox, submissions can take over an hour to reach “claim established” status. In production, this may take over two days.\n"
  },
  "tags": [
    {
      "name": "Claims",
      "description": "Allows authenticated and authorized users to access claims data for a single claim by ID, or for all claims based on Veteran data. No data is returned if the user is not authenticated and authorized.\n"
    },
    {
      "name": "Disability",
      "description": "Used for 526 claims."
    },
    {
      "name": "Intent to File",
      "description": "Used for 0966 submissions."
    },
    {
      "name": "Power of Attorney",
      "description": "Used for 21-22 and 21-22a form submissions."
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer_token": {
        "type": "http",
        "name": "token",
        "scheme": "bearer",
        "bearer_format": "JWT"
      }
    }
  },
  "paths": {
    "/claims": {
      "get": {
        "summary": "Retrieves all claims for a Veteran",
        "tags": [
          "Claims"
        ],
        "operationId": "findClaims",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Uses the Veteran’s metadata in headers to retrieve all claims for that Veteran. An authenticated Veteran making a request with this endpoint will return their own claims, if any.",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "claim response",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "600106271",
                      "type": "evss_claims",
                      "attributes": {
                        "evss_id": 600106271,
                        "date_filed": "2017-07-06",
                        "min_est_date": null,
                        "max_est_date": null,
                        "open": false,
                        "waiver_submitted": false,
                        "documents_needed": false,
                        "development_letter_sent": false,
                        "decision_letter_sent": false,
                        "requested_decision": false,
                        "claim_type": "Dependency",
                        "status": "Complete"
                      }
                    }
                  ]
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Claim ID from EVSS"
                          },
                          "type": {
                            "type": "string",
                            "description": "Required by JSON API standard"
                          },
                          "attributes": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "evss_id",
                              "date_filed",
                              "max_est_date",
                              "open",
                              "waiver_submitted",
                              "documents_needed",
                              "development_letter_sent",
                              "status",
                              "requested_decision",
                              "claim_type"
                            ],
                            "properties": {
                              "evss_id": {
                                "type": "integer",
                                "description": "Upstream service identifier"
                              },
                              "date_filed": {
                                "type": "string",
                                "format": "date",
                                "description": "Date in YYYY-MM-DD the claim was first filed"
                              },
                              "min_est_date": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "format": "date",
                                "description": "Minimum Estimated Claim Completion Date"
                              },
                              "max_est_date": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "format": "date",
                                "description": "Maximum Estimated Claim Completion Date"
                              },
                              "open": {
                                "type": "boolean",
                                "description": "Has the claim been resolved"
                              },
                              "waiver_submitted": {
                                "type": "boolean",
                                "description": "Requested Decision or Waiver 5103 Submitted"
                              },
                              "documents_needed": {
                                "type": "boolean",
                                "description": "Does the claim require additional documents to be submitted"
                              },
                              "development_letter_sent": {
                                "type": "boolean",
                                "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim"
                              },
                              "decision_letter_sent": {
                                "type": "boolean",
                                "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim"
                              },
                              "status": {
                                "type": "string",
                                "description": "Current status of the claim",
                                "enum": [
                                  "Claim received",
                                  "Initial review",
                                  "Evidence gathering, review, and decision",
                                  "Preparation for notification",
                                  "Complete"
                                ]
                              },
                              "requested_decision": {
                                "type": "boolean",
                                "description": "The claim filer has requested a claim decision be made"
                              },
                              "claim_type": {
                                "type": "string",
                                "description": "The type of claim originally submitted",
                                "enum": [
                                  "Compensation",
                                  "Compensation and Pension",
                                  "Dependency",
                                  "Administrative Review"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Claims not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/claims/{id}": {
      "get": {
        "summary": "Find Claim id",
        "tags": [
          "Claims"
        ],
        "operationId": "findClaimById",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the claim being requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Returns data such as processing status for a single claim by ID.",
        "responses": {
          "200": {
            "description": "claims response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "196bb896-8d75-42d8-9049-cc4a708c0109",
                    "type": "claims_api_claim",
                    "attributes": {
                      "evss_id": 600118851,
                      "date_filed": "2017-12-08",
                      "min_est_date": null,
                      "max_est_date": null,
                      "open": true,
                      "waiver_submitted": false,
                      "documents_needed": false,
                      "development_letter_sent": false,
                      "decision_letter_sent": false,
                      "requested_decision": false,
                      "claim_type": "Compensation",
                      "contention_list": [
                        "abscess kidney (New)"
                      ],
                      "va_representative": "DALE M BOETTCHER",
                      "events_timeline": [
                        {
                          "tracked_item_id": null,
                          "file_type": "Medical Treatment Records - Furnished by SSA",
                          "document_type": "L478",
                          "filename": "VickiSchmidt_PINT_b4_add_update.pdf",
                          "upload_date": "2017-12-08",
                          "type": "other_documents_list",
                          "date": "2017-12-08"
                        },
                        {
                          "tracked_item_id": null,
                          "file_type": "VA 21-526EZ, Fully Developed Claim (Compensation)",
                          "document_type": "L533",
                          "filename": "WESLEY_FORD_526.pdf",
                          "upload_date": "2017-12-08",
                          "type": "other_documents_list",
                          "date": "2017-12-08"
                        },
                        {
                          "type": "phase1",
                          "date": "2017-12-08"
                        },
                        {
                          "type": "filed",
                          "date": "2017-12-08"
                        }
                      ],
                      "status": "Initial review",
                      "supporting_documents": [
                        {
                          "id": "be3be8d7-5404-4503-9d48-b321730e039b",
                          "type": "claim_supporting_document",
                          "md5": "d927c7e283b3158a54822a493d06181d",
                          "filename": "extras.pdf",
                          "uploaded_at": "2021-05-25T13:44:05.081Z"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Claim ID from EVSS"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "date_filed",
                            "max_est_date",
                            "open",
                            "waiver_submitted",
                            "documents_needed",
                            "development_letter_sent",
                            "status",
                            "requested_decision",
                            "claim_type",
                            "contention_list",
                            "va_representative",
                            "events_timeline",
                            "supporting_documents"
                          ],
                          "properties": {
                            "evss_id": {
                              "type": "integer",
                              "nullable": true,
                              "description": "Upstream service identifier"
                            },
                            "date_filed": {
                              "type": "string",
                              "format": "date",
                              "description": "Date in YYYY-MM-DD the claim was first filed"
                            },
                            "min_est_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Minimum Estimated Claim Completion Date"
                            },
                            "max_est_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Maximum Estimated Claim Completion Date"
                            },
                            "open": {
                              "type": "boolean",
                              "description": "Has the claim been resolved"
                            },
                            "waiver_submitted": {
                              "type": "boolean",
                              "description": "Requested Decision or Waiver 5103 Submitted"
                            },
                            "documents_needed": {
                              "type": "boolean",
                              "description": "Does the claim require additional documents to be submitted"
                            },
                            "development_letter_sent": {
                              "type": "boolean",
                              "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "decision_letter_sent": {
                              "type": "boolean",
                              "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "status": {
                              "type": "string",
                              "description": "Current status of the claim",
                              "enum": [
                                "Claim received",
                                "Initial review",
                                "Evidence gathering, review, and decision",
                                "Preparation for notification",
                                "Complete"
                              ]
                            },
                            "requested_decision": {
                              "type": "boolean",
                              "description": "The claim filer has requested a claim decision be made"
                            },
                            "claim_type": {
                              "type": "string",
                              "description": "The type of claim originally submitted",
                              "enum": [
                                "Compensation",
                                "Compensation and Pension",
                                "Dependency"
                              ]
                            },
                            "contention_list": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "va_representative": {
                              "type": "string",
                              "description": "Current VA Representative Organization"
                            },
                            "events_timeline": {
                              "type": "array",
                              "items": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "type",
                                      "date"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Different types of event statuses"
                                      },
                                      "date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of Event"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "tracked_item_id",
                                      "file_type",
                                      "document_type",
                                      "filename",
                                      "upload_date",
                                      "type",
                                      "date"
                                    ],
                                    "properties": {
                                      "tracked_item_id": {
                                        "type": [
                                          "string",
                                          "null"
                                        ],
                                        "description": "Tracked Item ID given by VBMS"
                                      },
                                      "file_type": {
                                        "type": "string",
                                        "description": "Type of File being submitted/requested"
                                      },
                                      "document_type": {
                                        "type": "string",
                                        "description": "Type of document submitted"
                                      },
                                      "filename": {
                                        "type": "string",
                                        "description": "Name of file submitted"
                                      },
                                      "upload_date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date original upload of file occured"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type of Tracked Item submitted"
                                      },
                                      "date": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of Event"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "supporting_documents": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier of document"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Required by JSON API standard"
                                  },
                                  "md5": {
                                    "type": "string",
                                    "description": "Hashed representation of document"
                                  },
                                  "filename": {
                                    "type": "string",
                                    "description": "Name of document"
                                  },
                                  "uploaded_at": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "Date and time document was uploaded"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Record Not Found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Claim not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/526": {
      "get": {
        "summary": "Get a 526 schema for a claim.",
        "deprecated": true,
        "tags": [
          "Disability"
        ],
        "operationId": "get526JsonSchema",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns a single 526 schema to automatically generate a form. Using this GET endpoint allows users to download our current validations.\n",
        "responses": {
          "200": {
            "description": "schema response",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "Claims API 526 Schema",
                      "type": "object",
                      "required": [
                        "veteran",
                        "serviceInformation",
                        "disabilities",
                        "claimantCertification",
                        "standardClaim",
                        "autoCestPDFGenerationDisabled",
                        "applicationExpirationDate"
                      ],
                      "properties": {
                        "veteran": {
                          "description": "Veteran Object being submitted in Claim",
                          "type": "object",
                          "required": [
                            "currentMailingAddress",
                            "currentlyVAEmployee"
                          ],
                          "properties": {
                            "flashes": {
                              "description": "Attributes that describe special circumstances which apply to a Veteran.",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "Agent Orange - Vietnam",
                                  "Amyotrophic Lateral Sclerosis",
                                  "Blind",
                                  "Blue Water Navy",
                                  "Formerly Homeless",
                                  "GW Undiagnosed Illness",
                                  "Hardship",
                                  "Homeless",
                                  "Medal of Honor",
                                  "POW",
                                  "Priority Processing - Veteran over age 85",
                                  "Purple Heart",
                                  "Seriously Injured/Very Seriously Injured",
                                  "Specially Adapted Housing Claimed",
                                  "Terminally Ill"
                                ]
                              },
                              "example": "Hardship"
                            },
                            "currentlyVAEmployee": {
                              "type": "boolean",
                              "description": "Flag if Veteran is VA Employee.",
                              "example": false
                            },
                            "currentMailingAddress": {
                              "description": "Current Mailing Address Object being submitted.",
                              "type": "object",
                              "properties": {
                                "addressLine1": {
                                  "description": "Address Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20,
                                  "example": "1234 Couch Street"
                                },
                                "addressLine2": {
                                  "description": "Additional Address Information Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20,
                                  "example": "Apt. 22"
                                },
                                "city": {
                                  "description": "City Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.#]([-a-zA-Z0-9'.# ])?)+$",
                                  "example": "Portland"
                                },
                                "country": {
                                  "description": "Country Veteran resides in.",
                                  "type": "string",
                                  "example": "USA"
                                },
                                "zipFirstFive": {
                                  "description": "Zipcode (First 5 digits) Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^\\d{5}?$",
                                  "example": "12345"
                                },
                                "zipLastFour": {
                                  "description": "Zipcode (Last 4 digits) Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^\\d{4}?$",
                                  "example": "6789"
                                },
                                "internationalPostalCode": {
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of residence Veteran resides in.",
                                  "type": "string",
                                  "default": "DOMESTIC",
                                  "enum": [
                                    "INTERNATIONAL",
                                    "MILITARY",
                                    "DOMESTIC"
                                  ],
                                  "example": "DOMESTIC"
                                },
                                "state": {
                                  "description": "State Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^[a-z,A-Z]{2}$",
                                  "example": "OR"
                                }
                              },
                              "allOf": [
                                {
                                  "if": {
                                    "properties": {
                                      "type": {
                                        "const": "INTERNATIONAL"
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "addressLine1",
                                      "city",
                                      "country",
                                      "type",
                                      "internationalPostalCode"
                                    ]
                                  }
                                },
                                {
                                  "if": {
                                    "properties": {
                                      "type": {
                                        "const": "DOMESTIC"
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "addressLine1",
                                      "city",
                                      "country",
                                      "zipFirstFive",
                                      "type",
                                      "state"
                                    ]
                                  }
                                },
                                {
                                  "if": {
                                    "properties": {
                                      "type": {
                                        "const": "MILITARY"
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "addressLine1",
                                      "country",
                                      "zipFirstFive",
                                      "militaryStateCode",
                                      "militaryPostOfficeTypeCode",
                                      "type"
                                    ]
                                  }
                                }
                              ]
                            },
                            "changeOfAddress": {
                              "description": "A Change of Address Object being submitted.",
                              "type": "object",
                              "properties": {
                                "beginningDate": {
                                  "description": "Date in YYYY-MM-DD the Veteran changed address.",
                                  "type": "string",
                                  "example": "2018-06-04"
                                },
                                "addressChangeType": {
                                  "description": "Temporary or Permanent change of address.",
                                  "type": "string",
                                  "example": "PERMANENT"
                                },
                                "addressLine1": {
                                  "description": "New Address Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20,
                                  "example": "1234 Couch Street"
                                },
                                "addressLine2": {
                                  "description": "New Additional Address Information Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20,
                                  "example": "Apt. 22"
                                },
                                "city": {
                                  "description": "New city Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.#]([-a-zA-Z0-9'.# ])?)+$",
                                  "example": "Portland"
                                },
                                "country": {
                                  "description": "New country Veteran resides in.",
                                  "type": "string",
                                  "example": "USA"
                                },
                                "zipFirstFive": {
                                  "description": "New zipcode (First 5 digits) Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^\\d{5}?$",
                                  "example": "12345"
                                },
                                "zipLastFour": {
                                  "description": "New zipcode (Last 4 digits) Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^\\d{4}?$",
                                  "example": "6789"
                                },
                                "internationalPostalCode": {
                                  "type": "string"
                                },
                                "type": {
                                  "description": "New type of residence Veteran resides in.",
                                  "type": "string",
                                  "default": "DOMESTIC",
                                  "enum": [
                                    "INTERNATIONAL",
                                    "MILITARY",
                                    "DOMESTIC"
                                  ],
                                  "example": "DOMESTIC"
                                },
                                "militaryStateCode": {
                                  "type": "string"
                                },
                                "militaryPostOfficeTypeCode": {
                                  "type": "string"
                                },
                                "state": {
                                  "description": "New state Veteran resides in.",
                                  "type": "string",
                                  "pattern": "^[a-z,A-Z]{2}$",
                                  "example": "OR"
                                }
                              },
                              "allOf": [
                                {
                                  "if": {
                                    "properties": {
                                      "type": {
                                        "const": "INTERNATIONAL"
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "beginningDate",
                                      "addressChangeType",
                                      "addressLine1",
                                      "city",
                                      "country",
                                      "type",
                                      "internationalPostalCode"
                                    ]
                                  }
                                },
                                {
                                  "if": {
                                    "properties": {
                                      "type": {
                                        "const": "DOMESTIC"
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "beginningDate",
                                      "addressChangeType",
                                      "addressLine1",
                                      "city",
                                      "country",
                                      "zipFirstFive",
                                      "type",
                                      "state"
                                    ]
                                  }
                                },
                                {
                                  "if": {
                                    "properties": {
                                      "type": {
                                        "const": "MILITARY"
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "beginningDate",
                                      "addressChangeType",
                                      "addressLine1",
                                      "country",
                                      "zipFirstFive",
                                      "militaryStateCode",
                                      "militaryPostOfficeTypeCode",
                                      "type"
                                    ]
                                  }
                                }
                              ]
                            },
                            "homelessness": {
                              "description": "Object describing Veteran Homelessness if applicable.",
                              "type": "object",
                              "required": [
                                "pointOfContact"
                              ],
                              "properties": {
                                "pointOfContact": {
                                  "description": "Object describing Homeless Veteran Point of Contact.",
                                  "type": "object",
                                  "required": [
                                    "pointOfContactName",
                                    "primaryPhone"
                                  ],
                                  "properties": {
                                    "pointOfContactName": {
                                      "description": "Point of contact in direct contact with Veteran.",
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 100,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))*$",
                                      "example": "Jane Doe"
                                    },
                                    "primaryPhone": {
                                      "description": "Phone Number Object for Point of Contact.",
                                      "type": "object",
                                      "required": [
                                        "areaCode",
                                        "phoneNumber"
                                      ],
                                      "properties": {
                                        "areaCode": {
                                          "description": "Area code of Point of Contact.",
                                          "type": "string",
                                          "example": "123"
                                        },
                                        "phoneNumber": {
                                          "description": "Primary phone of Point of Contact.",
                                          "type": "string",
                                          "example": "1231234"
                                        }
                                      }
                                    }
                                  }
                                },
                                "currentlyHomeless": {
                                  "type": "object",
                                  "required": [
                                    "homelessSituationType",
                                    "otherLivingSituation"
                                  ],
                                  "properties": {
                                    "homelessSituationType": {
                                      "description": "Current state of the veteran's homelessness.",
                                      "type": "string",
                                      "default": "OTHER",
                                      "enum": [
                                        "fleeing",
                                        "shelter",
                                        "notShelter",
                                        "anotherPerson",
                                        "other"
                                      ],
                                      "example": "fleeing"
                                    },
                                    "otherLivingSituation": {
                                      "description": "List any other living scenarios.",
                                      "type": "string",
                                      "maxLength": 500,
                                      "example": "other living situation"
                                    }
                                  }
                                },
                                "homelessnessRisk": {
                                  "type": "object",
                                  "required": [
                                    "homelessnessRiskSituationType",
                                    "otherLivingSituation"
                                  ],
                                  "properties": {
                                    "homelessnessRiskSituationType": {
                                      "type": "string",
                                      "default": "OTHER",
                                      "enum": [
                                        "losingHousing",
                                        "leavingShelter",
                                        "other"
                                      ]
                                    },
                                    "otherLivingSituation": {
                                      "type": "string",
                                      "maxLength": 500
                                    }
                                  }
                                }
                              }
                            },
                            "isTerminallyIll": {
                              "type": "boolean"
                            }
                          }
                        },
                        "serviceInformation": {
                          "description": "Overview of Veteran's service history.",
                          "type": "object",
                          "required": [
                            "servicePeriods"
                          ],
                          "properties": {
                            "servicePeriods": {
                              "description": "Identifies the Service dates and Branch the Veteran served in.",
                              "type": "array",
                              "minItems": 1,
                              "uniqueItems": true,
                              "items": {
                                "type": "object",
                                "required": [
                                  "serviceBranch",
                                  "activeDutyBeginDate",
                                  "activeDutyEndDate"
                                ],
                                "properties": {
                                  "serviceBranch": {
                                    "description": "Branch of Service during period.",
                                    "type": "string",
                                    "example": "Air Force",
                                    "enum": [
                                      "Air Force",
                                      "Air Force Reserves",
                                      "Air National Guard",
                                      "Army",
                                      "Army National Guard",
                                      "Army Reserves",
                                      "Coast Guard",
                                      "Coast Guard Reserves",
                                      "Marine Corps",
                                      "Marine Corps Reserves",
                                      "National Oceanic &amp; Atmospheric Administration",
                                      "Navy",
                                      "Navy Reserves",
                                      "Public Health Service",
                                      "Air Force Academy",
                                      "Army Air Corps or Army Air Force",
                                      "Army Nurse Corps",
                                      "Coast Guard Academy",
                                      "Merchant Marine",
                                      "Naval Academy",
                                      "Other",
                                      "US Military Academy",
                                      "Women's Army Corps"
                                    ]
                                  },
                                  "activeDutyBeginDate": {
                                    "description": "Date Started Active Duty.",
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                    "example": "1980-02-05"
                                  },
                                  "activeDutyEndDate": {
                                    "description": "Date Completed Active Duty.",
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                    "example": "1990-01-02"
                                  }
                                }
                              }
                            },
                            "confinements": {
                              "type": "array",
                              "minItems": 1,
                              "uniqueItems": true,
                              "items": {
                                "type": "object",
                                "required": [
                                  "confinementBeginDate",
                                  "confinementEndDate"
                                ],
                                "properties": {
                                  "confinementBeginDate": {
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                  },
                                  "confinementEndDate": {
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                  }
                                }
                              }
                            },
                            "reservesNationalGuardService": {
                              "type": "object",
                              "required": [
                                "title10Activation",
                                "obligationTermOfServiceFromDate",
                                "obligationTermOfServiceToDate",
                                "unitName",
                                "unitPhone",
                                "receivingInactiveDutyTrainingPay"
                              ],
                              "properties": {
                                "title10Activation": {
                                  "type": "object",
                                  "required": [
                                    "anticipatedSeparationDate",
                                    "title10ActivationDate"
                                  ],
                                  "properties": {
                                    "anticipatedSeparationDate": {
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                    },
                                    "title10ActivationDate": {
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                    }
                                  }
                                },
                                "obligationTermOfServiceFromDate": {
                                  "type": "string",
                                  "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                },
                                "obligationTermOfServiceToDate": {
                                  "type": "string",
                                  "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                },
                                "unitName": {
                                  "type": "string"
                                },
                                "unitPhone": {
                                  "type": "object",
                                  "required": [
                                    "areaCode",
                                    "phoneNumber"
                                  ],
                                  "properties": {
                                    "areaCode": {
                                      "type": "string"
                                    },
                                    "phoneNumber": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "receivingInactiveDutyTrainingPay": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "alternateNames": {
                              "type": "array",
                              "minItems": 1,
                              "maxItems": 100,
                              "uniqueItems": true,
                              "items": {
                                "type": "object",
                                "required": [
                                  "firstName",
                                  "lastName"
                                ],
                                "properties": {
                                  "firstName": {
                                    "type": "string",
                                    "min": 1,
                                    "max": 30,
                                    "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                  },
                                  "middleName": {
                                    "type": "string",
                                    "min": 1,
                                    "max": 30,
                                    "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "min": 1,
                                    "max": 30,
                                    "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "disabilities": {
                          "description": "Identifies the Service Disability information of the Veteran.",
                          "type": "array",
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "required": [
                              "disabilityActionType",
                              "name"
                            ],
                            "properties": {
                              "specialIssues": {
                                "description": "The special issues related to the disability.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "ALS",
                                    "HEPC",
                                    "PTSD/1",
                                    "PTSD/2",
                                    "PTSD/3",
                                    "PTSD/4",
                                    "MST",
                                    "38 USC 1151",
                                    "ABA Election",
                                    "Abandoned VDC Claim",
                                    "AMC NOD Brokering Project",
                                    "Administrative Decision Review - Level 1",
                                    "Administrative Decision Review - Level 2",
                                    "Agent Orange - Vietnam",
                                    "Agent Orange - outside Vietnam or unknown",
                                    "AMA SOC/SSOC Opt-In",
                                    "Amyotrophic Lateral Sclerosis (ALS)",
                                    "Annual Eligibility Report",
                                    "Asbestos",
                                    "AutoEstablish",
                                    "Automated Drill Pay Adjustment",
                                    "Automated Return to Active Duty",
                                    "BDD – Excluded",
                                    "Brokered - D1BC",
                                    "Brokered - Internal",
                                    "Burn Pit Exposure",
                                    "C-123",
                                    "COWC",
                                    "Character of Discharge",
                                    "Challenge",
                                    "ChemBio",
                                    "Claimant Service Verification Accepted",
                                    "Combat Related Death",
                                    "Compensation Service Review – AO Outside RVN & Ship",
                                    "Compensation Service Review - Equitable Relief",
                                    "Compensation Service Review - Extraschedular",
                                    "Compensation Service Review – MG/CBRNE/Shad",
                                    "Compensation Service Review - Opinion",
                                    "Compensation Service Review - Over $25K",
                                    "Compensation Service Review - POW",
                                    "Compensation Service Review - Radiation",
                                    "Decision Ready Claim",
                                    "Decision Ready Claim - Deferred",
                                    "Decision Ready Claim - Partial Deferred",
                                    "Disability Benefits Questionnaire - Private",
                                    "Disability Benefits Questionnaire - VA",
                                    "DRC – Exam Review Complete Approved",
                                    "DRC – Exam Review Complete Disapproved",
                                    "DRC – Pending File Scan",
                                    "DRC – Vendor Exam Recommendation",
                                    "DTA Error – Exam/MO",
                                    "DTA Error – Fed Recs",
                                    "DTA Error – Other Recs",
                                    "DTA Error – PMRs",
                                    "Emergency Care – CH17 Determination",
                                    "Enhanced Disability Severance Pay",
                                    "Environmental Hazard - Camp Lejeune",
                                    "Environmental Hazard – Camp Lejeune – Louisville",
                                    "Environmental Hazard in Gulf War",
                                    "Extra-Schedular 3.321(b)(1)",
                                    "Extra-Schedular IU 4.16(b)",
                                    "FDC Excluded - Additional Claim Submitted",
                                    "FDC Excluded - All Required Items Not Submitted",
                                    "FDC Excluded - Appeal Pending",
                                    "FDC Excluded - Appeal submitted",
                                    "FDC Excluded - Claim Pending",
                                    "FDC Excluded - Claimant Declined FDC Processing",
                                    "FDC Excluded - Evidence Received After FDC CEST",
                                    "FDC Excluded - FDC Certification Incomplete",
                                    "FDC Excluded - FTR to Examination",
                                    "FDC Excluded - Necessary Form(s) not Submitted",
                                    "FDC Excluded - Needs Non-Fed Evidence Development",
                                    "FDC Excluded - requires INDPT VRFCTN of FTI",
                                    "Fed Record Delay - No Further Dev",
                                    "Force Majeure",
                                    "Fully Developed Claim",
                                    "Gulf War Presumptive",
                                    "HIV",
                                    "Hepatitis C",
                                    "Hospital Adjustment Action Plan FY 18/19",
                                    "IDES Deferral",
                                    "JSRRC Request",
                                    "Local Hearing",
                                    "Local Mentor Review",
                                    "Local Quality Review",
                                    "Local Quality Review IPR",
                                    "Medical Foster Home",
                                    "Military Sexual Trauma (MST)",
                                    "MQAS Separation and Severance Pay Audit",
                                    "Mustard Gas",
                                    "National Quality Review",
                                    "Nehmer AO Peripheral Neuropathy",
                                    "Nehmer Phase II",
                                    "Non-ADL Notification Letter",
                                    "Non-Nehmer AO Peripheral Neuropathy",
                                    "Non-PTSD Personal Trauma",
                                    "Potential Under/Overpayment",
                                    "POW",
                                    "PTSD - Combat",
                                    "PTSD - Non-Combat",
                                    "PTSD - Personal Trauma",
                                    "RO Special issue 1",
                                    "RO Special issue 2",
                                    "RO Special Issue 3",
                                    "RO Special Issue 4",
                                    "RO Special Issue 5",
                                    "RO Special Issue 6",
                                    "RO Special Issue 7",
                                    "RO Special Issue 8",
                                    "RO Special Issue 9",
                                    "RVSR Examination",
                                    "Radiation",
                                    "Radiation Radiogenic Disability Confirmed",
                                    "Rating Decision Review - Level 1",
                                    "Rating Decision Review - Level 2",
                                    "Ready for Exam",
                                    "Same Station Review",
                                    "SHAD",
                                    "Sarcoidosis",
                                    "Simultaneous Award Adjustment Not Permitted",
                                    "Specialized Records Request",
                                    "Stage 1 Development",
                                    "Stage 2 Development",
                                    "Stage 3 Development",
                                    "TBI Exam Review",
                                    "Temp 100 Convalescence",
                                    "Temp 100 Hospitalization",
                                    "Tobacco",
                                    "Tort Claim",
                                    "Traumatic Brain Injury",
                                    "Upfront Verification",
                                    "VACO Special issue 1",
                                    "VACO Special issue 2",
                                    "VACO Special Issue 3",
                                    "VACO Special Issue 4",
                                    "VACO Special Issue 5",
                                    "VACO Special Issue 6",
                                    "VACO Special Issue 7",
                                    "VACO Special Issue 8",
                                    "VACO Special Issue 9",
                                    "VASRD-Cardiovascular",
                                    "VASRD-Dental",
                                    "VASRD-Digestive",
                                    "VASRD-Endocrine",
                                    "VASRD-Eye",
                                    "VASRD-GU",
                                    "VASRD-GYN",
                                    "VASRD-Hemic",
                                    "VASRD-Infectious",
                                    "VASRD-Mental",
                                    "VASRD-Musculoskeletal",
                                    "VASRD-Neurological",
                                    "VASRD-Respiratory/Auditory",
                                    "VASRD-Skin",
                                    "Vendor Exclusion - No Diagnosis",
                                    "VONAPP Direct Connect",
                                    "WARTAC",
                                    "WARTAC Trainee"
                                  ]
                                },
                                "example": "ALS"
                              },
                              "ratedDisabilityId": {
                                "description": "The Type of Disability.",
                                "type": "string",
                                "example": "1100583"
                              },
                              "diagnosticCode": {
                                "description": "Specific Diagnostic Code.",
                                "type": "integer",
                                "example": 9999
                              },
                              "disabilityActionType": {
                                "description": "The status of the current disability.",
                                "type": "string",
                                "enum": [
                                  "NONE",
                                  "NEW",
                                  "SECONDARY",
                                  "INCREASE",
                                  "REOPEN"
                                ],
                                "example": "NEW"
                              },
                              "name": {
                                "description": "What the Disability is called.",
                                "type": "string",
                                "example": "PTSD (post traumatic stress disorder)"
                              },
                              "secondaryDisabilities": {
                                "description": "Identifies the Secondary Service Disability information of the Veteran.",
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "disabilityActionType",
                                    "serviceRelevance"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "What the Disability is called.",
                                      "type": "string",
                                      "example": "PTSD"
                                    },
                                    "disabilityActionType": {
                                      "description": "The status of the secondary disability.",
                                      "type": "string",
                                      "enum": [
                                        "NONE",
                                        "NEW",
                                        "SECONDARY",
                                        "INCREASE",
                                        "REOPEN"
                                      ],
                                      "example": "SECONDARY"
                                    },
                                    "serviceRelevance": {
                                      "description": "How the veteran got the disability.",
                                      "type": "string",
                                      "example": "Caused by a service-connected disability."
                                    },
                                    "specialIssues": {
                                      "description": "The special issues related to the disability.",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "ALS",
                                          "HEPC",
                                          "PTSD/1",
                                          "PTSD/2",
                                          "PTSD/3",
                                          "PTSD/4",
                                          "MST",
                                          "38 USC 1151",
                                          "ABA Election",
                                          "Abandoned VDC Claim",
                                          "AMC NOD Brokering Project",
                                          "Administrative Decision Review - Level 1",
                                          "Administrative Decision Review - Level 2",
                                          "Agent Orange - Vietnam",
                                          "Agent Orange - outside Vietnam or unknown",
                                          "AMA SOC/SSOC Opt-In",
                                          "Amyotrophic Lateral Sclerosis (ALS)",
                                          "Annual Eligibility Report",
                                          "Asbestos",
                                          "AutoEstablish",
                                          "Automated Drill Pay Adjustment",
                                          "Automated Return to Active Duty",
                                          "BDD – Excluded",
                                          "Brokered - D1BC",
                                          "Brokered - Internal",
                                          "Burn Pit Exposure",
                                          "C-123",
                                          "COWC",
                                          "Character of Discharge",
                                          "Challenge",
                                          "ChemBio",
                                          "Claimant Service Verification Accepted",
                                          "Combat Related Death",
                                          "Compensation Service Review – AO Outside RVN & Ship",
                                          "Compensation Service Review - Equitable Relief",
                                          "Compensation Service Review - Extraschedular",
                                          "Compensation Service Review – MG/CBRNE/Shad",
                                          "Compensation Service Review - Opinion",
                                          "Compensation Service Review - Over $25K",
                                          "Compensation Service Review - POW",
                                          "Compensation Service Review - Radiation",
                                          "Decision Ready Claim",
                                          "Decision Ready Claim - Deferred",
                                          "Decision Ready Claim - Partial Deferred",
                                          "Disability Benefits Questionnaire - Private",
                                          "Disability Benefits Questionnaire - VA",
                                          "DRC – Exam Review Complete Approved",
                                          "DRC – Exam Review Complete Disapproved",
                                          "DRC – Pending File Scan",
                                          "DRC – Vendor Exam Recommendation",
                                          "DTA Error – Exam/MO",
                                          "DTA Error – Fed Recs",
                                          "DTA Error – Other Recs",
                                          "DTA Error – PMRs",
                                          "Emergency Care – CH17 Determination",
                                          "Enhanced Disability Severance Pay",
                                          "Environmental Hazard - Camp Lejeune",
                                          "Environmental Hazard – Camp Lejeune – Louisville",
                                          "Environmental Hazard in Gulf War",
                                          "Extra-Schedular 3.321(b)(1)",
                                          "Extra-Schedular IU 4.16(b)",
                                          "FDC Excluded - Additional Claim Submitted",
                                          "FDC Excluded - All Required Items Not Submitted",
                                          "FDC Excluded - Appeal Pending",
                                          "FDC Excluded - Appeal submitted",
                                          "FDC Excluded - Claim Pending",
                                          "FDC Excluded - Claimant Declined FDC Processing",
                                          "FDC Excluded - Evidence Received After FDC CEST",
                                          "FDC Excluded - FDC Certification Incomplete",
                                          "FDC Excluded - FTR to Examination",
                                          "FDC Excluded - Necessary Form(s) not Submitted",
                                          "FDC Excluded - Needs Non-Fed Evidence Development",
                                          "FDC Excluded - requires INDPT VRFCTN of FTI",
                                          "Fed Record Delay - No Further Dev",
                                          "Force Majeure",
                                          "Fully Developed Claim",
                                          "Gulf War Presumptive",
                                          "HIV",
                                          "Hepatitis C",
                                          "Hospital Adjustment Action Plan FY 18/19",
                                          "IDES Deferral",
                                          "JSRRC Request",
                                          "Local Hearing",
                                          "Local Mentor Review",
                                          "Local Quality Review",
                                          "Local Quality Review IPR",
                                          "Medical Foster Home",
                                          "Military Sexual Trauma (MST)",
                                          "MQAS Separation and Severance Pay Audit",
                                          "Mustard Gas",
                                          "National Quality Review",
                                          "Nehmer AO Peripheral Neuropathy",
                                          "Nehmer Phase II",
                                          "Non-ADL Notification Letter",
                                          "Non-Nehmer AO Peripheral Neuropathy",
                                          "Non-PTSD Personal Trauma",
                                          "Potential Under/Overpayment",
                                          "POW",
                                          "PTSD - Combat",
                                          "PTSD - Non-Combat",
                                          "PTSD - Personal Trauma",
                                          "RO Special issue 1",
                                          "RO Special issue 2",
                                          "RO Special Issue 3",
                                          "RO Special Issue 4",
                                          "RO Special Issue 5",
                                          "RO Special Issue 6",
                                          "RO Special Issue 7",
                                          "RO Special Issue 8",
                                          "RO Special Issue 9",
                                          "RVSR Examination",
                                          "Radiation",
                                          "Radiation Radiogenic Disability Confirmed",
                                          "Rating Decision Review - Level 1",
                                          "Rating Decision Review - Level 2",
                                          "Ready for Exam",
                                          "Same Station Review",
                                          "SHAD",
                                          "Sarcoidosis",
                                          "Simultaneous Award Adjustment Not Permitted",
                                          "Specialized Records Request",
                                          "Stage 1 Development",
                                          "Stage 2 Development",
                                          "Stage 3 Development",
                                          "TBI Exam Review",
                                          "Temp 100 Convalescence",
                                          "Temp 100 Hospitalization",
                                          "Tobacco",
                                          "Tort Claim",
                                          "Traumatic Brain Injury",
                                          "Upfront Verification",
                                          "VACO Special issue 1",
                                          "VACO Special issue 2",
                                          "VACO Special Issue 3",
                                          "VACO Special Issue 4",
                                          "VACO Special Issue 5",
                                          "VACO Special Issue 6",
                                          "VACO Special Issue 7",
                                          "VACO Special Issue 8",
                                          "VACO Special Issue 9",
                                          "VASRD-Cardiovascular",
                                          "VASRD-Dental",
                                          "VASRD-Digestive",
                                          "VASRD-Endocrine",
                                          "VASRD-Eye",
                                          "VASRD-GU",
                                          "VASRD-GYN",
                                          "VASRD-Hemic",
                                          "VASRD-Infectious",
                                          "VASRD-Mental",
                                          "VASRD-Musculoskeletal",
                                          "VASRD-Neurological",
                                          "VASRD-Respiratory/Auditory",
                                          "VASRD-Skin",
                                          "Vendor Exclusion - No Diagnosis",
                                          "VONAPP Direct Connect",
                                          "WARTAC",
                                          "WARTAC Trainee"
                                        ]
                                      },
                                      "example": "ALS"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "treatments": {
                          "description": "Identifies the Service Treatment information of the Veteran.",
                          "type": "array",
                          "minItems": 1,
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "required": [
                              "startDate",
                              "endDate",
                              "treatedDisabilityNames",
                              "center"
                            ],
                            "properties": {
                              "startDate": {
                                "description": "Date Veteran started treatment.",
                                "type": "string",
                                "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                "example": "2018-03-02"
                              },
                              "endDate": {
                                "description": "Date Veteran ended treatment.",
                                "type": "string",
                                "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                "example": "2018-03-02"
                              },
                              "treatedDisabilityNames": {
                                "description": "Identifies the Service Treatment nomenclature of the Veteran.",
                                "type": "array",
                                "minItems": 1,
                                "maxItems": 101,
                                "uniqueItems": true,
                                "items": {
                                  "description": "Name of Disabilities Veteran was Treated for.",
                                  "type": "string",
                                  "example": "PTSD (post traumatic stress disorder)"
                                }
                              },
                              "center": {
                                "description": "Location of Veteran Treatment.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "country"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of facility Veteran was treated in.",
                                    "type": "string",
                                    "example": "Private Facility 2"
                                  },
                                  "country": {
                                    "description": "Country Veteran was treated in.",
                                    "type": "string",
                                    "example": "USA"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "servicePay": {
                          "description": "Details about Veteran receiving Service Pay from DoD.",
                          "type": "object",
                          "required": [
                            "waiveVABenefitsToRetainTrainingPay",
                            "waiveVABenefitsToRetainRetiredPay",
                            "militaryRetiredPay"
                          ],
                          "properties": {
                            "waiveVABenefitsToRetainTrainingPay": {
                              "description": "Is Veteran Waiving benefits to retain training pay.",
                              "type": "boolean",
                              "example": true
                            },
                            "waiveVABenefitsToRetainRetiredPay": {
                              "description": "Is Veteran Waiving benefits to retain Retiree pay.",
                              "type": "boolean",
                              "example": true
                            },
                            "militaryRetiredPay": {
                              "description": "Retirement Pay information from Military Service.",
                              "type": "object",
                              "required": [
                                "receiving",
                                "payment"
                              ],
                              "properties": {
                                "receiving": {
                                  "description": "Is Veteran getting Retiree pay.",
                                  "type": "boolean",
                                  "example": true
                                },
                                "payment": {
                                  "description": "Part of DoD paying Retirement Benefits.",
                                  "type": "object",
                                  "required": [
                                    "serviceBranch"
                                  ],
                                  "properties": {
                                    "serviceBranch": {
                                      "description": "Branch of Service making payments.",
                                      "type": "string",
                                      "enum": [
                                        "Air Force",
                                        "Air Force Reserves",
                                        "Air National Guard",
                                        "Army",
                                        "Army National Guard",
                                        "Army Reserves",
                                        "Coast Guard",
                                        "Coast Guard Reserves",
                                        "Marine Corps",
                                        "Marine Corps Reserves",
                                        "National Oceanic &amp; Atmospheric Administration",
                                        "Navy",
                                        "Navy Reserves",
                                        "Public Health Service",
                                        "Air Force Academy",
                                        "Army Air Corps or Army Air Force",
                                        "Army Nurse Corps",
                                        "Coast Guard Academy",
                                        "Merchant Marine",
                                        "Naval Academy",
                                        "Other",
                                        "US Military Academy",
                                        "Women's Army Corps"
                                      ],
                                      "example": "Air Force"
                                    }
                                  }
                                }
                              }
                            },
                            "hasSeparationPay": {
                              "type": "boolean"
                            }
                          }
                        },
                        "directDeposit": {
                          "description": "Financial Direct Deposit information for Veteran.",
                          "type": "object",
                          "required": [
                            "accountType",
                            "accountNumber",
                            "routingNumber"
                          ],
                          "properties": {
                            "accountType": {
                              "description": "Veteran Account Type.",
                              "type": "string",
                              "enum": [
                                "CHECKING",
                                "SAVINGS"
                              ],
                              "example": "CHECKING"
                            },
                            "accountNumber": {
                              "description": "Veteran Bank Account Number.",
                              "minLength": 4,
                              "maxLength": 17,
                              "type": "string",
                              "example": "123123123123"
                            },
                            "routingNumber": {
                              "description": "Veteran Bank Routing Number.",
                              "type": "string",
                              "pattern": "^\\d{9}$",
                              "example": "123123123"
                            },
                            "bankName": {
                              "description": "Veteran Bank Name.",
                              "maxLength": 35,
                              "type": "string",
                              "example": "Some Bank"
                            }
                          }
                        },
                        "claimantCertification": {
                          "description": "Determines if person submitting the claim is certified to do so.",
                          "type": "boolean",
                          "example": true
                        },
                        "standardClaim": {
                          "description": "A value of false indicates the claim should be processed as a Fully Developed Claim.",
                          "type": "boolean",
                          "example": false
                        },
                        "applicationExpirationDate": {
                          "description": "Time stamp of when claim expires in one year after submission.",
                          "type": "string",
                          "example": "2018-08-28T19:53:45+00:00"
                        },
                        "autoCestPDFGenerationDisabled": {
                          "description": "Allows you to bypass the auto PDF generation and instead upload the Disability form itself through Support Documents.",
                          "type": "boolean",
                          "example": false
                        },
                        "claimDate": {
                          "description": "Date when claim is being submitted to the VA.",
                          "type": "string",
                          "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                          "example": "2018-08-28"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Submits form 526",
        "tags": [
          "Disability"
        ],
        "operationId": "post526Claim",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Establishes a [Disability Compensation Claim](https://www.vba.va.gov/pubs/forms/VBA-21-526EZ-ARE.pdf) in VBMS. Submits any PDF attachments as a multi-part payload and returns an ID. For claims that are not original claims, this endpoint generates a filled 526 PDF along with the submission.\n<br/><br/>\nA 200 response indicates the submission was successful, but the claim has not reached VBMS until it has a “claim established” status. Check claim status using the GET /claims/{id}   endpoint.\n<br/><br/>\n**Original claims**<br/>\nAn original claim is the Veteran’s first claim filed with VA, regardless of the claim type or status. The original claim must have the Veteran’s wet signature or e-signature. Once there is an original claim on file, future claims may be submitted by a representative without the Veteran’s wet signature. Uploading a PDF for subsequent claims is not required or recommended.\n<br/><br/>\nPOST the original claim with the autoCestPDFGenerationDisabled boolean   as true. After a 200 response, use the PUT /forms/526/{id} endpoint to upload a scanned PDF of your form, signed in ink or e-signature, by the Veteran.\n<br/><br/>\nThe claim data submitted through the POST endpoint must match the wet-signed PDF uploaded through the PUT endpoint. If it does not, VA will manually update the data to match the PDF, and your claim may not process correctly.\n<br/><br/>\n**Standard and fully developed claims (FDCs)**<br/>\n[Fully developed claims (FDCs)](https://www.va.gov/  disability/how-to-file-claim/evidence-needed/fully-developed-claims/) are claims certified by the submitter to include all information needed for processing. These claims process faster than claims submitted through the standard claim process. If a claim is certified for the FDC, but is missing needed information, it will route through the standard claim process.\n<br/><br/>\nTo certify a claim for the FDC process, set the standardClaim indicator to false.\n<br/><br/>\n**Flashes and   special issues**<br/>\nIncluding flashes and special issues in your 526 claim submission helps VA properly route and prioritize current and future claims for the Veteran and reduces claims processing time.\n\n - Flashes are attributes that describe special circumstances which apply to a Veteran, such as homelessness or terminal illness. See a full list of [supported flashes](https://github.com/department-of-veterans-affairs/vets-api/blob/30659c8e5b2dd254d3e6b5d18849ff0d5f2e2356/modules/  claims_api/config/schemas/526.json#L35).\n - Special Issues are attributes that describe special circumstances which apply to a particular claim, such as PTSD. See a full list of [supported special Issues](https://github.com/department-of-veterans-affairs/vets-api/blob/30659c8e5b2dd254d3e6b5d18849ff0d5f2e2356/modules/claims_api/config/schemas/526.json#L28).\n\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "526 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "e756f355-667e-465d-a953-c7411242a3c1",
                    "type": "claims_api_claim",
                    "attributes": {
                      "evss_id": null,
                      "date_filed": null,
                      "min_est_date": null,
                      "max_est_date": null,
                      "phase_change_date": null,
                      "open": true,
                      "waiver_submitted": null,
                      "documents_needed": null,
                      "development_letter_sent": null,
                      "decision_letter_sent": null,
                      "phase": null,
                      "ever_phase_back": null,
                      "current_phase_back": null,
                      "requested_decision": null,
                      "claim_type": null,
                      "updated_at": "2021-05-25T13:44:05.440Z",
                      "contention_list": null,
                      "va_representative": null,
                      "events_timeline": [

                      ],
                      "token": "e756f355-667e-465d-a953-c7411242a3c1",
                      "status": "pending",
                      "flashes": [
                        "Hardship",
                        "Homeless"
                      ]
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Internal vets-api Claim ID"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "open",
                            "updated_at",
                            "events_timeline",
                            "token",
                            "status",
                            "flashes"
                          ],
                          "properties": {
                            "evss_id": {
                              "type": "null",
                              "description": "EVSS Claim ID"
                            },
                            "date_filed": {
                              "type": "null",
                              "description": "Date in YYYY-MM-DD the claim was first filed"
                            },
                            "min_est_date": {
                              "type": "null",
                              "description": "Minimum Estimated Claim Completion Date"
                            },
                            "max_est_date": {
                              "type": "null",
                              "description": "Maximum Estimated Claim Completion Date"
                            },
                            "phase_change_date": {
                              "type": "null",
                              "description": "Date of last phase change"
                            },
                            "open": {
                              "type": "boolean",
                              "description": "Has the claim been resolved"
                            },
                            "waiver_submitted": {
                              "type": "null",
                              "description": "Requested Decision or Waiver 5103 Submitted"
                            },
                            "documents_needed": {
                              "type": "null",
                              "description": "Does the claim require additional documents to be submitted"
                            },
                            "development_letter_sent": {
                              "type": "null",
                              "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "decision_letter_sent": {
                              "type": "null",
                              "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "phase": {
                              "type": "null"
                            },
                            "ever_phase_back": {
                              "type": "null"
                            },
                            "current_phase_back": {
                              "type": "null"
                            },
                            "requested_decision": {
                              "type": "null",
                              "description": "The claim filer has requested a claim decision be made"
                            },
                            "claim_type": {
                              "type": "null",
                              "description": "The type of claim originally submitted"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Time stamp of last change to the claim"
                            },
                            "contention_list": {
                              "type": "null"
                            },
                            "va_representative": {
                              "type": "null"
                            },
                            "events_timeline": {
                              "type": "array"
                            },
                            "token": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending"
                              ],
                              "description": "Current status of the claim"
                            },
                            "flashes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": 422,
                      "detail": "The request body isn't a JSON object: \"This is not valid JSON\"",
                      "source": false
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "detail",
                          "source"
                        ],
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "HTTP error code"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": [
                              "string",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "example": {
                      "type": "form/526",
                      "attributes": {
                        "veteran": {
                          "currentlyVAEmployee": false,
                          "currentMailingAddress": {
                            "city": "Portland",
                            "country": "USA",
                            "zipFirstFive": "12345",
                            "addressLine1": "1234 Couch Street",
                            "addressLine2": "Apt. 22",
                            "type": "DOMESTIC",
                            "zipLastFour": "6789",
                            "state": "OR"
                          }
                        },
                        "claimantCertification": true,
                        "disabilities": [
                          {
                            "ratedDisabilityId": "1100583",
                            "diagnosticCode": 9999,
                            "disabilityActionType": "NEW",
                            "name": "PTSD (post traumatic stress disorder)",
                            "specialIssues": [
                              "POW",
                              "Asbestos"
                            ],
                            "secondaryDisabilities": [
                              {
                                "name": "PTSD personal trauma",
                                "disabilityActionType": "SECONDARY",
                                "serviceRelevance": "Caused by a service-connected disability\\nLengthy description"
                              }
                            ]
                          }
                        ],
                        "standardClaim": false,
                        "autoCestPDFGenerationDisabled": false,
                        "applicationExpirationDate": "2015-08-28T19:53:45+00:00",
                        "serviceInformation": {
                          "servicePeriods": [
                            {
                              "activeDutyEndDate": "1990-01-02",
                              "serviceBranch": "Air Force",
                              "activeDutyBeginDate": "1980-02-05"
                            },
                            {
                              "activeDutyEndDate": "1999-01-01",
                              "serviceBranch": "Air Force Reserves",
                              "activeDutyBeginDate": "1990-04-05"
                            }
                          ]
                        }
                      }
                    },
                    "properties": {
                      "attributes": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "description": "Claims API 526 Schema",
                        "type": "object",
                        "required": [
                          "veteran",
                          "serviceInformation",
                          "disabilities",
                          "claimantCertification",
                          "standardClaim",
                          "autoCestPDFGenerationDisabled",
                          "applicationExpirationDate"
                        ],
                        "properties": {
                          "veteran": {
                            "description": "Veteran Object being submitted in Claim",
                            "type": "object",
                            "required": [
                              "currentMailingAddress",
                              "currentlyVAEmployee"
                            ],
                            "properties": {
                              "flashes": {
                                "description": "Attributes that describe special circumstances which apply to a Veteran.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Agent Orange - Vietnam",
                                    "Amyotrophic Lateral Sclerosis",
                                    "Blind",
                                    "Blue Water Navy",
                                    "Formerly Homeless",
                                    "GW Undiagnosed Illness",
                                    "Hardship",
                                    "Homeless",
                                    "Medal of Honor",
                                    "POW",
                                    "Priority Processing - Veteran over age 85",
                                    "Purple Heart",
                                    "Seriously Injured/Very Seriously Injured",
                                    "Specially Adapted Housing Claimed",
                                    "Terminally Ill"
                                  ]
                                },
                                "example": "Hardship"
                              },
                              "currentlyVAEmployee": {
                                "type": "boolean",
                                "description": "Flag if Veteran is VA Employee.",
                                "example": false
                              },
                              "currentMailingAddress": {
                                "description": "Current Mailing Address Object being submitted.",
                                "type": "object",
                                "properties": {
                                  "addressLine1": {
                                    "description": "Address Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "1234 Couch Street"
                                  },
                                  "addressLine2": {
                                    "description": "Additional Address Information Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "Apt. 22"
                                  },
                                  "city": {
                                    "description": "City Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.#]([-a-zA-Z0-9'.# ])?)+$",
                                    "example": "Portland"
                                  },
                                  "country": {
                                    "description": "Country Veteran resides in.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "internationalPostalCode": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of residence Veteran resides in.",
                                    "type": "string",
                                    "default": "DOMESTIC",
                                    "enum": [
                                      "INTERNATIONAL",
                                      "MILITARY",
                                      "DOMESTIC"
                                    ],
                                    "example": "DOMESTIC"
                                  },
                                  "state": {
                                    "description": "State Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^[a-z,A-Z]{2}$",
                                    "example": "OR"
                                  }
                                },
                                "allOf": [
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "INTERNATIONAL"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "type",
                                        "internationalPostalCode"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "DOMESTIC"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "zipFirstFive",
                                        "type",
                                        "state"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "MILITARY"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "addressLine1",
                                        "country",
                                        "zipFirstFive",
                                        "militaryStateCode",
                                        "militaryPostOfficeTypeCode",
                                        "type"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "changeOfAddress": {
                                "description": "A Change of Address Object being submitted.",
                                "type": "object",
                                "properties": {
                                  "beginningDate": {
                                    "description": "Date in YYYY-MM-DD the Veteran changed address.",
                                    "type": "string",
                                    "example": "2018-06-04"
                                  },
                                  "addressChangeType": {
                                    "description": "Temporary or Permanent change of address.",
                                    "type": "string",
                                    "example": "PERMANENT"
                                  },
                                  "addressLine1": {
                                    "description": "New Address Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "1234 Couch Street"
                                  },
                                  "addressLine2": {
                                    "description": "New Additional Address Information Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "Apt. 22"
                                  },
                                  "city": {
                                    "description": "New city Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.#]([-a-zA-Z0-9'.# ])?)+$",
                                    "example": "Portland"
                                  },
                                  "country": {
                                    "description": "New country Veteran resides in.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "New zipcode (First 5 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "New zipcode (Last 4 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "internationalPostalCode": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "New type of residence Veteran resides in.",
                                    "type": "string",
                                    "default": "DOMESTIC",
                                    "enum": [
                                      "INTERNATIONAL",
                                      "MILITARY",
                                      "DOMESTIC"
                                    ],
                                    "example": "DOMESTIC"
                                  },
                                  "militaryStateCode": {
                                    "type": "string"
                                  },
                                  "militaryPostOfficeTypeCode": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "New state Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^[a-z,A-Z]{2}$",
                                    "example": "OR"
                                  }
                                },
                                "allOf": [
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "INTERNATIONAL"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "beginningDate",
                                        "addressChangeType",
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "type",
                                        "internationalPostalCode"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "DOMESTIC"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "beginningDate",
                                        "addressChangeType",
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "zipFirstFive",
                                        "type",
                                        "state"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "MILITARY"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "beginningDate",
                                        "addressChangeType",
                                        "addressLine1",
                                        "country",
                                        "zipFirstFive",
                                        "militaryStateCode",
                                        "militaryPostOfficeTypeCode",
                                        "type"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "homelessness": {
                                "description": "Object describing Veteran Homelessness if applicable.",
                                "type": "object",
                                "required": [
                                  "pointOfContact"
                                ],
                                "properties": {
                                  "pointOfContact": {
                                    "description": "Object describing Homeless Veteran Point of Contact.",
                                    "type": "object",
                                    "required": [
                                      "pointOfContactName",
                                      "primaryPhone"
                                    ],
                                    "properties": {
                                      "pointOfContactName": {
                                        "description": "Point of contact in direct contact with Veteran.",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 100,
                                        "pattern": "^([-a-zA-Z0-9/']+( ?))*$",
                                        "example": "Jane Doe"
                                      },
                                      "primaryPhone": {
                                        "description": "Phone Number Object for Point of Contact.",
                                        "type": "object",
                                        "required": [
                                          "areaCode",
                                          "phoneNumber"
                                        ],
                                        "properties": {
                                          "areaCode": {
                                            "description": "Area code of Point of Contact.",
                                            "type": "string",
                                            "example": "123"
                                          },
                                          "phoneNumber": {
                                            "description": "Primary phone of Point of Contact.",
                                            "type": "string",
                                            "example": "1231234"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "currentlyHomeless": {
                                    "type": "object",
                                    "required": [
                                      "homelessSituationType",
                                      "otherLivingSituation"
                                    ],
                                    "properties": {
                                      "homelessSituationType": {
                                        "description": "Current state of the veteran's homelessness.",
                                        "type": "string",
                                        "default": "OTHER",
                                        "enum": [
                                          "fleeing",
                                          "shelter",
                                          "notShelter",
                                          "anotherPerson",
                                          "other"
                                        ],
                                        "example": "fleeing"
                                      },
                                      "otherLivingSituation": {
                                        "description": "List any other living scenarios.",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "other living situation"
                                      }
                                    }
                                  },
                                  "homelessnessRisk": {
                                    "type": "object",
                                    "required": [
                                      "homelessnessRiskSituationType",
                                      "otherLivingSituation"
                                    ],
                                    "properties": {
                                      "homelessnessRiskSituationType": {
                                        "type": "string",
                                        "default": "OTHER",
                                        "enum": [
                                          "losingHousing",
                                          "leavingShelter",
                                          "other"
                                        ]
                                      },
                                      "otherLivingSituation": {
                                        "type": "string",
                                        "maxLength": 500
                                      }
                                    }
                                  }
                                }
                              },
                              "isTerminallyIll": {
                                "type": "boolean"
                              }
                            }
                          },
                          "serviceInformation": {
                            "description": "Overview of Veteran's service history.",
                            "type": "object",
                            "required": [
                              "servicePeriods"
                            ],
                            "properties": {
                              "servicePeriods": {
                                "description": "Identifies the Service dates and Branch the Veteran served in.",
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "serviceBranch",
                                    "activeDutyBeginDate",
                                    "activeDutyEndDate"
                                  ],
                                  "properties": {
                                    "serviceBranch": {
                                      "description": "Branch of Service during period.",
                                      "type": "string",
                                      "example": "Air Force",
                                      "enum": [
                                        "Air Force",
                                        "Air Force Reserves",
                                        "Air National Guard",
                                        "Army",
                                        "Army National Guard",
                                        "Army Reserves",
                                        "Coast Guard",
                                        "Coast Guard Reserves",
                                        "Marine Corps",
                                        "Marine Corps Reserves",
                                        "National Oceanic &amp; Atmospheric Administration",
                                        "Navy",
                                        "Navy Reserves",
                                        "Public Health Service",
                                        "Air Force Academy",
                                        "Army Air Corps or Army Air Force",
                                        "Army Nurse Corps",
                                        "Coast Guard Academy",
                                        "Merchant Marine",
                                        "Naval Academy",
                                        "Other",
                                        "US Military Academy",
                                        "Women's Army Corps"
                                      ]
                                    },
                                    "activeDutyBeginDate": {
                                      "description": "Date Started Active Duty.",
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                      "example": "1980-02-05"
                                    },
                                    "activeDutyEndDate": {
                                      "description": "Date Completed Active Duty.",
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                      "example": "1990-01-02"
                                    }
                                  }
                                }
                              },
                              "confinements": {
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "confinementBeginDate",
                                    "confinementEndDate"
                                  ],
                                  "properties": {
                                    "confinementBeginDate": {
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                    },
                                    "confinementEndDate": {
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                    }
                                  }
                                }
                              },
                              "reservesNationalGuardService": {
                                "type": "object",
                                "required": [
                                  "title10Activation",
                                  "obligationTermOfServiceFromDate",
                                  "obligationTermOfServiceToDate",
                                  "unitName",
                                  "unitPhone",
                                  "receivingInactiveDutyTrainingPay"
                                ],
                                "properties": {
                                  "title10Activation": {
                                    "type": "object",
                                    "required": [
                                      "anticipatedSeparationDate",
                                      "title10ActivationDate"
                                    ],
                                    "properties": {
                                      "anticipatedSeparationDate": {
                                        "type": "string",
                                        "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                      },
                                      "title10ActivationDate": {
                                        "type": "string",
                                        "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                      }
                                    }
                                  },
                                  "obligationTermOfServiceFromDate": {
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                  },
                                  "obligationTermOfServiceToDate": {
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                  },
                                  "unitName": {
                                    "type": "string"
                                  },
                                  "unitPhone": {
                                    "type": "object",
                                    "required": [
                                      "areaCode",
                                      "phoneNumber"
                                    ],
                                    "properties": {
                                      "areaCode": {
                                        "type": "string"
                                      },
                                      "phoneNumber": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "receivingInactiveDutyTrainingPay": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "alternateNames": {
                                "type": "array",
                                "minItems": 1,
                                "maxItems": 100,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "firstName",
                                    "lastName"
                                  ],
                                  "properties": {
                                    "firstName": {
                                      "type": "string",
                                      "min": 1,
                                      "max": 30,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                    },
                                    "middleName": {
                                      "type": "string",
                                      "min": 1,
                                      "max": 30,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                    },
                                    "lastName": {
                                      "type": "string",
                                      "min": 1,
                                      "max": 30,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disabilities": {
                            "description": "Identifies the Service Disability information of the Veteran.",
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "object",
                              "required": [
                                "disabilityActionType",
                                "name"
                              ],
                              "properties": {
                                "specialIssues": {
                                  "description": "The special issues related to the disability.",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "ALS",
                                      "HEPC",
                                      "PTSD/1",
                                      "PTSD/2",
                                      "PTSD/3",
                                      "PTSD/4",
                                      "MST",
                                      "38 USC 1151",
                                      "ABA Election",
                                      "Abandoned VDC Claim",
                                      "AMC NOD Brokering Project",
                                      "Administrative Decision Review - Level 1",
                                      "Administrative Decision Review - Level 2",
                                      "Agent Orange - Vietnam",
                                      "Agent Orange - outside Vietnam or unknown",
                                      "AMA SOC/SSOC Opt-In",
                                      "Amyotrophic Lateral Sclerosis (ALS)",
                                      "Annual Eligibility Report",
                                      "Asbestos",
                                      "AutoEstablish",
                                      "Automated Drill Pay Adjustment",
                                      "Automated Return to Active Duty",
                                      "BDD – Excluded",
                                      "Brokered - D1BC",
                                      "Brokered - Internal",
                                      "Burn Pit Exposure",
                                      "C-123",
                                      "COWC",
                                      "Character of Discharge",
                                      "Challenge",
                                      "ChemBio",
                                      "Claimant Service Verification Accepted",
                                      "Combat Related Death",
                                      "Compensation Service Review – AO Outside RVN & Ship",
                                      "Compensation Service Review - Equitable Relief",
                                      "Compensation Service Review - Extraschedular",
                                      "Compensation Service Review – MG/CBRNE/Shad",
                                      "Compensation Service Review - Opinion",
                                      "Compensation Service Review - Over $25K",
                                      "Compensation Service Review - POW",
                                      "Compensation Service Review - Radiation",
                                      "Decision Ready Claim",
                                      "Decision Ready Claim - Deferred",
                                      "Decision Ready Claim - Partial Deferred",
                                      "Disability Benefits Questionnaire - Private",
                                      "Disability Benefits Questionnaire - VA",
                                      "DRC – Exam Review Complete Approved",
                                      "DRC – Exam Review Complete Disapproved",
                                      "DRC – Pending File Scan",
                                      "DRC – Vendor Exam Recommendation",
                                      "DTA Error – Exam/MO",
                                      "DTA Error – Fed Recs",
                                      "DTA Error – Other Recs",
                                      "DTA Error – PMRs",
                                      "Emergency Care – CH17 Determination",
                                      "Enhanced Disability Severance Pay",
                                      "Environmental Hazard - Camp Lejeune",
                                      "Environmental Hazard – Camp Lejeune – Louisville",
                                      "Environmental Hazard in Gulf War",
                                      "Extra-Schedular 3.321(b)(1)",
                                      "Extra-Schedular IU 4.16(b)",
                                      "FDC Excluded - Additional Claim Submitted",
                                      "FDC Excluded - All Required Items Not Submitted",
                                      "FDC Excluded - Appeal Pending",
                                      "FDC Excluded - Appeal submitted",
                                      "FDC Excluded - Claim Pending",
                                      "FDC Excluded - Claimant Declined FDC Processing",
                                      "FDC Excluded - Evidence Received After FDC CEST",
                                      "FDC Excluded - FDC Certification Incomplete",
                                      "FDC Excluded - FTR to Examination",
                                      "FDC Excluded - Necessary Form(s) not Submitted",
                                      "FDC Excluded - Needs Non-Fed Evidence Development",
                                      "FDC Excluded - requires INDPT VRFCTN of FTI",
                                      "Fed Record Delay - No Further Dev",
                                      "Force Majeure",
                                      "Fully Developed Claim",
                                      "Gulf War Presumptive",
                                      "HIV",
                                      "Hepatitis C",
                                      "Hospital Adjustment Action Plan FY 18/19",
                                      "IDES Deferral",
                                      "JSRRC Request",
                                      "Local Hearing",
                                      "Local Mentor Review",
                                      "Local Quality Review",
                                      "Local Quality Review IPR",
                                      "Medical Foster Home",
                                      "Military Sexual Trauma (MST)",
                                      "MQAS Separation and Severance Pay Audit",
                                      "Mustard Gas",
                                      "National Quality Review",
                                      "Nehmer AO Peripheral Neuropathy",
                                      "Nehmer Phase II",
                                      "Non-ADL Notification Letter",
                                      "Non-Nehmer AO Peripheral Neuropathy",
                                      "Non-PTSD Personal Trauma",
                                      "Potential Under/Overpayment",
                                      "POW",
                                      "PTSD - Combat",
                                      "PTSD - Non-Combat",
                                      "PTSD - Personal Trauma",
                                      "RO Special issue 1",
                                      "RO Special issue 2",
                                      "RO Special Issue 3",
                                      "RO Special Issue 4",
                                      "RO Special Issue 5",
                                      "RO Special Issue 6",
                                      "RO Special Issue 7",
                                      "RO Special Issue 8",
                                      "RO Special Issue 9",
                                      "RVSR Examination",
                                      "Radiation",
                                      "Radiation Radiogenic Disability Confirmed",
                                      "Rating Decision Review - Level 1",
                                      "Rating Decision Review - Level 2",
                                      "Ready for Exam",
                                      "Same Station Review",
                                      "SHAD",
                                      "Sarcoidosis",
                                      "Simultaneous Award Adjustment Not Permitted",
                                      "Specialized Records Request",
                                      "Stage 1 Development",
                                      "Stage 2 Development",
                                      "Stage 3 Development",
                                      "TBI Exam Review",
                                      "Temp 100 Convalescence",
                                      "Temp 100 Hospitalization",
                                      "Tobacco",
                                      "Tort Claim",
                                      "Traumatic Brain Injury",
                                      "Upfront Verification",
                                      "VACO Special issue 1",
                                      "VACO Special issue 2",
                                      "VACO Special Issue 3",
                                      "VACO Special Issue 4",
                                      "VACO Special Issue 5",
                                      "VACO Special Issue 6",
                                      "VACO Special Issue 7",
                                      "VACO Special Issue 8",
                                      "VACO Special Issue 9",
                                      "VASRD-Cardiovascular",
                                      "VASRD-Dental",
                                      "VASRD-Digestive",
                                      "VASRD-Endocrine",
                                      "VASRD-Eye",
                                      "VASRD-GU",
                                      "VASRD-GYN",
                                      "VASRD-Hemic",
                                      "VASRD-Infectious",
                                      "VASRD-Mental",
                                      "VASRD-Musculoskeletal",
                                      "VASRD-Neurological",
                                      "VASRD-Respiratory/Auditory",
                                      "VASRD-Skin",
                                      "Vendor Exclusion - No Diagnosis",
                                      "VONAPP Direct Connect",
                                      "WARTAC",
                                      "WARTAC Trainee"
                                    ]
                                  },
                                  "example": "ALS"
                                },
                                "ratedDisabilityId": {
                                  "description": "The Type of Disability.",
                                  "type": "string",
                                  "example": "1100583"
                                },
                                "diagnosticCode": {
                                  "description": "Specific Diagnostic Code.",
                                  "type": "integer",
                                  "example": 9999
                                },
                                "disabilityActionType": {
                                  "description": "The status of the current disability.",
                                  "type": "string",
                                  "enum": [
                                    "NONE",
                                    "NEW",
                                    "SECONDARY",
                                    "INCREASE",
                                    "REOPEN"
                                  ],
                                  "example": "NEW"
                                },
                                "name": {
                                  "description": "What the Disability is called.",
                                  "type": "string",
                                  "example": "PTSD (post traumatic stress disorder)"
                                },
                                "secondaryDisabilities": {
                                  "description": "Identifies the Secondary Service Disability information of the Veteran.",
                                  "type": "array",
                                  "minItems": 1,
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "disabilityActionType",
                                      "serviceRelevance"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "What the Disability is called.",
                                        "type": "string",
                                        "example": "PTSD"
                                      },
                                      "disabilityActionType": {
                                        "description": "The status of the secondary disability.",
                                        "type": "string",
                                        "enum": [
                                          "NONE",
                                          "NEW",
                                          "SECONDARY",
                                          "INCREASE",
                                          "REOPEN"
                                        ],
                                        "example": "SECONDARY"
                                      },
                                      "serviceRelevance": {
                                        "description": "How the veteran got the disability.",
                                        "type": "string",
                                        "example": "Caused by a service-connected disability."
                                      },
                                      "specialIssues": {
                                        "description": "The special issues related to the disability.",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "ALS",
                                            "HEPC",
                                            "PTSD/1",
                                            "PTSD/2",
                                            "PTSD/3",
                                            "PTSD/4",
                                            "MST",
                                            "38 USC 1151",
                                            "ABA Election",
                                            "Abandoned VDC Claim",
                                            "AMC NOD Brokering Project",
                                            "Administrative Decision Review - Level 1",
                                            "Administrative Decision Review - Level 2",
                                            "Agent Orange - Vietnam",
                                            "Agent Orange - outside Vietnam or unknown",
                                            "AMA SOC/SSOC Opt-In",
                                            "Amyotrophic Lateral Sclerosis (ALS)",
                                            "Annual Eligibility Report",
                                            "Asbestos",
                                            "AutoEstablish",
                                            "Automated Drill Pay Adjustment",
                                            "Automated Return to Active Duty",
                                            "BDD – Excluded",
                                            "Brokered - D1BC",
                                            "Brokered - Internal",
                                            "Burn Pit Exposure",
                                            "C-123",
                                            "COWC",
                                            "Character of Discharge",
                                            "Challenge",
                                            "ChemBio",
                                            "Claimant Service Verification Accepted",
                                            "Combat Related Death",
                                            "Compensation Service Review – AO Outside RVN & Ship",
                                            "Compensation Service Review - Equitable Relief",
                                            "Compensation Service Review - Extraschedular",
                                            "Compensation Service Review – MG/CBRNE/Shad",
                                            "Compensation Service Review - Opinion",
                                            "Compensation Service Review - Over $25K",
                                            "Compensation Service Review - POW",
                                            "Compensation Service Review - Radiation",
                                            "Decision Ready Claim",
                                            "Decision Ready Claim - Deferred",
                                            "Decision Ready Claim - Partial Deferred",
                                            "Disability Benefits Questionnaire - Private",
                                            "Disability Benefits Questionnaire - VA",
                                            "DRC – Exam Review Complete Approved",
                                            "DRC – Exam Review Complete Disapproved",
                                            "DRC – Pending File Scan",
                                            "DRC – Vendor Exam Recommendation",
                                            "DTA Error – Exam/MO",
                                            "DTA Error – Fed Recs",
                                            "DTA Error – Other Recs",
                                            "DTA Error – PMRs",
                                            "Emergency Care – CH17 Determination",
                                            "Enhanced Disability Severance Pay",
                                            "Environmental Hazard - Camp Lejeune",
                                            "Environmental Hazard – Camp Lejeune – Louisville",
                                            "Environmental Hazard in Gulf War",
                                            "Extra-Schedular 3.321(b)(1)",
                                            "Extra-Schedular IU 4.16(b)",
                                            "FDC Excluded - Additional Claim Submitted",
                                            "FDC Excluded - All Required Items Not Submitted",
                                            "FDC Excluded - Appeal Pending",
                                            "FDC Excluded - Appeal submitted",
                                            "FDC Excluded - Claim Pending",
                                            "FDC Excluded - Claimant Declined FDC Processing",
                                            "FDC Excluded - Evidence Received After FDC CEST",
                                            "FDC Excluded - FDC Certification Incomplete",
                                            "FDC Excluded - FTR to Examination",
                                            "FDC Excluded - Necessary Form(s) not Submitted",
                                            "FDC Excluded - Needs Non-Fed Evidence Development",
                                            "FDC Excluded - requires INDPT VRFCTN of FTI",
                                            "Fed Record Delay - No Further Dev",
                                            "Force Majeure",
                                            "Fully Developed Claim",
                                            "Gulf War Presumptive",
                                            "HIV",
                                            "Hepatitis C",
                                            "Hospital Adjustment Action Plan FY 18/19",
                                            "IDES Deferral",
                                            "JSRRC Request",
                                            "Local Hearing",
                                            "Local Mentor Review",
                                            "Local Quality Review",
                                            "Local Quality Review IPR",
                                            "Medical Foster Home",
                                            "Military Sexual Trauma (MST)",
                                            "MQAS Separation and Severance Pay Audit",
                                            "Mustard Gas",
                                            "National Quality Review",
                                            "Nehmer AO Peripheral Neuropathy",
                                            "Nehmer Phase II",
                                            "Non-ADL Notification Letter",
                                            "Non-Nehmer AO Peripheral Neuropathy",
                                            "Non-PTSD Personal Trauma",
                                            "Potential Under/Overpayment",
                                            "POW",
                                            "PTSD - Combat",
                                            "PTSD - Non-Combat",
                                            "PTSD - Personal Trauma",
                                            "RO Special issue 1",
                                            "RO Special issue 2",
                                            "RO Special Issue 3",
                                            "RO Special Issue 4",
                                            "RO Special Issue 5",
                                            "RO Special Issue 6",
                                            "RO Special Issue 7",
                                            "RO Special Issue 8",
                                            "RO Special Issue 9",
                                            "RVSR Examination",
                                            "Radiation",
                                            "Radiation Radiogenic Disability Confirmed",
                                            "Rating Decision Review - Level 1",
                                            "Rating Decision Review - Level 2",
                                            "Ready for Exam",
                                            "Same Station Review",
                                            "SHAD",
                                            "Sarcoidosis",
                                            "Simultaneous Award Adjustment Not Permitted",
                                            "Specialized Records Request",
                                            "Stage 1 Development",
                                            "Stage 2 Development",
                                            "Stage 3 Development",
                                            "TBI Exam Review",
                                            "Temp 100 Convalescence",
                                            "Temp 100 Hospitalization",
                                            "Tobacco",
                                            "Tort Claim",
                                            "Traumatic Brain Injury",
                                            "Upfront Verification",
                                            "VACO Special issue 1",
                                            "VACO Special issue 2",
                                            "VACO Special Issue 3",
                                            "VACO Special Issue 4",
                                            "VACO Special Issue 5",
                                            "VACO Special Issue 6",
                                            "VACO Special Issue 7",
                                            "VACO Special Issue 8",
                                            "VACO Special Issue 9",
                                            "VASRD-Cardiovascular",
                                            "VASRD-Dental",
                                            "VASRD-Digestive",
                                            "VASRD-Endocrine",
                                            "VASRD-Eye",
                                            "VASRD-GU",
                                            "VASRD-GYN",
                                            "VASRD-Hemic",
                                            "VASRD-Infectious",
                                            "VASRD-Mental",
                                            "VASRD-Musculoskeletal",
                                            "VASRD-Neurological",
                                            "VASRD-Respiratory/Auditory",
                                            "VASRD-Skin",
                                            "Vendor Exclusion - No Diagnosis",
                                            "VONAPP Direct Connect",
                                            "WARTAC",
                                            "WARTAC Trainee"
                                          ]
                                        },
                                        "example": "ALS"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "treatments": {
                            "description": "Identifies the Service Treatment information of the Veteran.",
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "object",
                              "required": [
                                "startDate",
                                "endDate",
                                "treatedDisabilityNames",
                                "center"
                              ],
                              "properties": {
                                "startDate": {
                                  "description": "Date Veteran started treatment.",
                                  "type": "string",
                                  "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                  "example": "2018-03-02"
                                },
                                "endDate": {
                                  "description": "Date Veteran ended treatment.",
                                  "type": "string",
                                  "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                  "example": "2018-03-02"
                                },
                                "treatedDisabilityNames": {
                                  "description": "Identifies the Service Treatment nomenclature of the Veteran.",
                                  "type": "array",
                                  "minItems": 1,
                                  "maxItems": 101,
                                  "uniqueItems": true,
                                  "items": {
                                    "description": "Name of Disabilities Veteran was Treated for.",
                                    "type": "string",
                                    "example": "PTSD (post traumatic stress disorder)"
                                  }
                                },
                                "center": {
                                  "description": "Location of Veteran Treatment.",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "country"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of facility Veteran was treated in.",
                                      "type": "string",
                                      "example": "Private Facility 2"
                                    },
                                    "country": {
                                      "description": "Country Veteran was treated in.",
                                      "type": "string",
                                      "example": "USA"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "servicePay": {
                            "description": "Details about Veteran receiving Service Pay from DoD.",
                            "type": "object",
                            "required": [
                              "waiveVABenefitsToRetainTrainingPay",
                              "waiveVABenefitsToRetainRetiredPay",
                              "militaryRetiredPay"
                            ],
                            "properties": {
                              "waiveVABenefitsToRetainTrainingPay": {
                                "description": "Is Veteran Waiving benefits to retain training pay.",
                                "type": "boolean",
                                "example": true
                              },
                              "waiveVABenefitsToRetainRetiredPay": {
                                "description": "Is Veteran Waiving benefits to retain Retiree pay.",
                                "type": "boolean",
                                "example": true
                              },
                              "militaryRetiredPay": {
                                "description": "Retirement Pay information from Military Service.",
                                "type": "object",
                                "required": [
                                  "receiving",
                                  "payment"
                                ],
                                "properties": {
                                  "receiving": {
                                    "description": "Is Veteran getting Retiree pay.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "payment": {
                                    "description": "Part of DoD paying Retirement Benefits.",
                                    "type": "object",
                                    "required": [
                                      "serviceBranch"
                                    ],
                                    "properties": {
                                      "serviceBranch": {
                                        "description": "Branch of Service making payments.",
                                        "type": "string",
                                        "enum": [
                                          "Air Force",
                                          "Air Force Reserves",
                                          "Air National Guard",
                                          "Army",
                                          "Army National Guard",
                                          "Army Reserves",
                                          "Coast Guard",
                                          "Coast Guard Reserves",
                                          "Marine Corps",
                                          "Marine Corps Reserves",
                                          "National Oceanic &amp; Atmospheric Administration",
                                          "Navy",
                                          "Navy Reserves",
                                          "Public Health Service",
                                          "Air Force Academy",
                                          "Army Air Corps or Army Air Force",
                                          "Army Nurse Corps",
                                          "Coast Guard Academy",
                                          "Merchant Marine",
                                          "Naval Academy",
                                          "Other",
                                          "US Military Academy",
                                          "Women's Army Corps"
                                        ],
                                        "example": "Air Force"
                                      }
                                    }
                                  }
                                }
                              },
                              "hasSeparationPay": {
                                "type": "boolean"
                              }
                            }
                          },
                          "directDeposit": {
                            "description": "Financial Direct Deposit information for Veteran.",
                            "type": "object",
                            "required": [
                              "accountType",
                              "accountNumber",
                              "routingNumber"
                            ],
                            "properties": {
                              "accountType": {
                                "description": "Veteran Account Type.",
                                "type": "string",
                                "enum": [
                                  "CHECKING",
                                  "SAVINGS"
                                ],
                                "example": "CHECKING"
                              },
                              "accountNumber": {
                                "description": "Veteran Bank Account Number.",
                                "minLength": 4,
                                "maxLength": 17,
                                "type": "string",
                                "example": "123123123123"
                              },
                              "routingNumber": {
                                "description": "Veteran Bank Routing Number.",
                                "type": "string",
                                "pattern": "^\\d{9}$",
                                "example": "123123123"
                              },
                              "bankName": {
                                "description": "Veteran Bank Name.",
                                "maxLength": 35,
                                "type": "string",
                                "example": "Some Bank"
                              }
                            }
                          },
                          "claimantCertification": {
                            "description": "Determines if person submitting the claim is certified to do so.",
                            "type": "boolean",
                            "example": true
                          },
                          "standardClaim": {
                            "description": "A value of false indicates the claim should be processed as a Fully Developed Claim.",
                            "type": "boolean",
                            "example": false
                          },
                          "applicationExpirationDate": {
                            "description": "Time stamp of when claim expires in one year after submission.",
                            "type": "string",
                            "example": "2018-08-28T19:53:45+00:00"
                          },
                          "autoCestPDFGenerationDisabled": {
                            "description": "Allows you to bypass the auto PDF generation and instead upload the Disability form itself through Support Documents.",
                            "type": "boolean",
                            "example": false
                          },
                          "claimDate": {
                            "description": "Date when claim is being submitted to the VA.",
                            "type": "string",
                            "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                            "example": "2018-08-28"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/forms/526/{id}": {
      "put": {
        "summary": "Upload a 526 document",
        "tags": [
          "Disability"
        ],
        "operationId": "upload526Attachment",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Used to upload a completed, wet-signed 526 PDF to establish an original claim. Use this endpoint only after following the instructions in the POST /forms/526 endpoint to begin the claim submission.\n<br/><br/>\nThis endpoint works by accepting a document binary PDF as part of a multi-part payload (for example, attachment1, attachment2, attachment3). Each attachment should be encoded separately rather than encoding the whole payload together as with the Benefits Intake API.\n<br/><br/>\nFor other attachments, such as medical records, use the /forms/526/{id}/attachments endpoint.\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID given when Disability Claim was submitted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "526 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "9e7401e7-cc2a-4e39-8d32-ac059da0acf3",
                    "type": "claims_api_claim",
                    "attributes": {
                      "evss_id": null,
                      "date_filed": null,
                      "min_est_date": null,
                      "max_est_date": null,
                      "phase_change_date": null,
                      "open": true,
                      "waiver_submitted": null,
                      "documents_needed": null,
                      "development_letter_sent": null,
                      "decision_letter_sent": null,
                      "phase": null,
                      "ever_phase_back": null,
                      "current_phase_back": null,
                      "requested_decision": null,
                      "claim_type": null,
                      "updated_at": "2021-05-25T13:44:05.771Z",
                      "contention_list": null,
                      "va_representative": null,
                      "events_timeline": [

                      ],
                      "token": "9e7401e7-cc2a-4e39-8d32-ac059da0acf3",
                      "status": "pending",
                      "flashes": [
                        "Hardship",
                        "Homeless"
                      ]
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Internal vets-api Claim ID"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "open",
                            "updated_at",
                            "events_timeline",
                            "token",
                            "status",
                            "flashes"
                          ],
                          "properties": {
                            "evss_id": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "description": "EVSS Claim ID"
                            },
                            "date_filed": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Date in YYYY-MM-DD the claim was first filed"
                            },
                            "min_est_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Minimum Estimated Claim Completion Date"
                            },
                            "max_est_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Maximum Estimated Claim Completion Date"
                            },
                            "phase_change_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Date of last phase change"
                            },
                            "open": {
                              "type": "boolean",
                              "description": "Has the claim been resolved"
                            },
                            "waiver_submitted": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Requested Decision or Waiver 5103 Submitted"
                            },
                            "documents_needed": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Does the claim require additional documents to be submitted"
                            },
                            "development_letter_sent": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "decision_letter_sent": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "phase": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "ever_phase_back": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "current_phase_back": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "requested_decision": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The claim filer has requested a claim decision be made"
                            },
                            "claim_type": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The type of claim originally submitted"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Time stamp of last change to the claim"
                            },
                            "contention_list": {
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "va_representative": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "events_timeline": {
                              "type": "array"
                            },
                            "token": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending"
                              ],
                              "description": "Current status of the claim"
                            },
                            "flashes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Resource not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Unprocessable Entity",
                      "detail": "              Claim submission requires that the \"autoCestPDFGenerationDisabled\" field\n              must be set to \"true\" in order to allow a 526 PDF to be uploaded\n",
                      "code": "422",
                      "status": "422"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "attachment": {
                    "type": "file",
                    "description": "Attachment contents. Must be provided in binary PDF or [base64 string](https://raw.githubusercontent.com/department-of-veterans-affairs/vets-api/master/modules/claims_api/spec/fixtures/base64pdf) format and less than 11 in x 11 in.\n"
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/forms/526/validate": {
      "post": {
        "summary": "Validates a 526 claim form submission.",
        "deprecated": true,
        "tags": [
          "Disability"
        ],
        "operationId": "post526ClaimValidate",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Test to make sure the form submission works with your parameters.\nSubmission validates against the schema returned by the GET /forms/526 endpoint.\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "526 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "claims_api_auto_established_claim_validation",
                    "attributes": {
                      "status": "valid"
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "valid"
                              ],
                              "description": "Return whether or not whether or not the payload is valid"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key veteran",
                      "source": "/"
                    },
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key serviceInformation",
                      "source": "/"
                    },
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key disabilities",
                      "source": "/"
                    },
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key claimantCertification",
                      "source": "/"
                    },
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key standardClaim",
                      "source": "/"
                    },
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key autoCestPDFGenerationDisabled",
                      "source": "/"
                    },
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key applicationExpirationDate",
                      "source": "/"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "detail",
                          "source"
                        ],
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "HTTP error code"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": [
                              "string",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "example": {
                      "type": "form/526",
                      "attributes": {
                        "veteran": {
                          "currentlyVAEmployee": false,
                          "currentMailingAddress": {
                            "city": "Portland",
                            "country": "USA",
                            "zipFirstFive": "12345",
                            "addressLine1": "1234 Couch Street",
                            "addressLine2": "Apt. 22",
                            "type": "DOMESTIC",
                            "zipLastFour": "6789",
                            "state": "OR"
                          }
                        },
                        "claimantCertification": true,
                        "disabilities": [
                          {
                            "ratedDisabilityId": "1100583",
                            "diagnosticCode": 9999,
                            "disabilityActionType": "NEW",
                            "name": "PTSD (post traumatic stress disorder)",
                            "specialIssues": [
                              "POW",
                              "Asbestos"
                            ],
                            "secondaryDisabilities": [
                              {
                                "name": "PTSD personal trauma",
                                "disabilityActionType": "SECONDARY",
                                "serviceRelevance": "Caused by a service-connected disability\\nLengthy description"
                              }
                            ]
                          }
                        ],
                        "standardClaim": false,
                        "autoCestPDFGenerationDisabled": false,
                        "applicationExpirationDate": "2015-08-28T19:53:45+00:00",
                        "serviceInformation": {
                          "servicePeriods": [
                            {
                              "activeDutyEndDate": "1990-01-02",
                              "serviceBranch": "Air Force",
                              "activeDutyBeginDate": "1980-02-05"
                            },
                            {
                              "activeDutyEndDate": "1999-01-01",
                              "serviceBranch": "Air Force Reserves",
                              "activeDutyBeginDate": "1990-04-05"
                            }
                          ]
                        }
                      }
                    },
                    "properties": {
                      "attributes": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "description": "Claims API 526 Schema",
                        "type": "object",
                        "required": [
                          "veteran",
                          "serviceInformation",
                          "disabilities",
                          "claimantCertification",
                          "standardClaim",
                          "autoCestPDFGenerationDisabled",
                          "applicationExpirationDate"
                        ],
                        "properties": {
                          "veteran": {
                            "description": "Veteran Object being submitted in Claim",
                            "type": "object",
                            "required": [
                              "currentMailingAddress",
                              "currentlyVAEmployee"
                            ],
                            "properties": {
                              "flashes": {
                                "description": "Attributes that describe special circumstances which apply to a Veteran.",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Agent Orange - Vietnam",
                                    "Amyotrophic Lateral Sclerosis",
                                    "Blind",
                                    "Blue Water Navy",
                                    "Formerly Homeless",
                                    "GW Undiagnosed Illness",
                                    "Hardship",
                                    "Homeless",
                                    "Medal of Honor",
                                    "POW",
                                    "Priority Processing - Veteran over age 85",
                                    "Purple Heart",
                                    "Seriously Injured/Very Seriously Injured",
                                    "Specially Adapted Housing Claimed",
                                    "Terminally Ill"
                                  ]
                                },
                                "example": "Hardship"
                              },
                              "currentlyVAEmployee": {
                                "type": "boolean",
                                "description": "Flag if Veteran is VA Employee.",
                                "example": false
                              },
                              "currentMailingAddress": {
                                "description": "Current Mailing Address Object being submitted.",
                                "type": "object",
                                "properties": {
                                  "addressLine1": {
                                    "description": "Address Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "1234 Couch Street"
                                  },
                                  "addressLine2": {
                                    "description": "Additional Address Information Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "Apt. 22"
                                  },
                                  "city": {
                                    "description": "City Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.#]([-a-zA-Z0-9'.# ])?)+$",
                                    "example": "Portland"
                                  },
                                  "country": {
                                    "description": "Country Veteran resides in.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "internationalPostalCode": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type of residence Veteran resides in.",
                                    "type": "string",
                                    "default": "DOMESTIC",
                                    "enum": [
                                      "INTERNATIONAL",
                                      "MILITARY",
                                      "DOMESTIC"
                                    ],
                                    "example": "DOMESTIC"
                                  },
                                  "state": {
                                    "description": "State Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^[a-z,A-Z]{2}$",
                                    "example": "OR"
                                  }
                                },
                                "allOf": [
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "INTERNATIONAL"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "type",
                                        "internationalPostalCode"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "DOMESTIC"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "zipFirstFive",
                                        "type",
                                        "state"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "MILITARY"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "addressLine1",
                                        "country",
                                        "zipFirstFive",
                                        "militaryStateCode",
                                        "militaryPostOfficeTypeCode",
                                        "type"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "changeOfAddress": {
                                "description": "A Change of Address Object being submitted.",
                                "type": "object",
                                "properties": {
                                  "beginningDate": {
                                    "description": "Date in YYYY-MM-DD the Veteran changed address.",
                                    "type": "string",
                                    "example": "2018-06-04"
                                  },
                                  "addressChangeType": {
                                    "description": "Temporary or Permanent change of address.",
                                    "type": "string",
                                    "example": "PERMANENT"
                                  },
                                  "addressLine1": {
                                    "description": "New Address Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "1234 Couch Street"
                                  },
                                  "addressLine2": {
                                    "description": "New Additional Address Information Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20,
                                    "example": "Apt. 22"
                                  },
                                  "city": {
                                    "description": "New city Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.#]([-a-zA-Z0-9'.# ])?)+$",
                                    "example": "Portland"
                                  },
                                  "country": {
                                    "description": "New country Veteran resides in.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "New zipcode (First 5 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "New zipcode (Last 4 digits) Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "internationalPostalCode": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "New type of residence Veteran resides in.",
                                    "type": "string",
                                    "default": "DOMESTIC",
                                    "enum": [
                                      "INTERNATIONAL",
                                      "MILITARY",
                                      "DOMESTIC"
                                    ],
                                    "example": "DOMESTIC"
                                  },
                                  "militaryStateCode": {
                                    "type": "string"
                                  },
                                  "militaryPostOfficeTypeCode": {
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "New state Veteran resides in.",
                                    "type": "string",
                                    "pattern": "^[a-z,A-Z]{2}$",
                                    "example": "OR"
                                  }
                                },
                                "allOf": [
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "INTERNATIONAL"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "beginningDate",
                                        "addressChangeType",
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "type",
                                        "internationalPostalCode"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "DOMESTIC"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "beginningDate",
                                        "addressChangeType",
                                        "addressLine1",
                                        "city",
                                        "country",
                                        "zipFirstFive",
                                        "type",
                                        "state"
                                      ]
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "MILITARY"
                                        }
                                      }
                                    },
                                    "then": {
                                      "required": [
                                        "beginningDate",
                                        "addressChangeType",
                                        "addressLine1",
                                        "country",
                                        "zipFirstFive",
                                        "militaryStateCode",
                                        "militaryPostOfficeTypeCode",
                                        "type"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "homelessness": {
                                "description": "Object describing Veteran Homelessness if applicable.",
                                "type": "object",
                                "required": [
                                  "pointOfContact"
                                ],
                                "properties": {
                                  "pointOfContact": {
                                    "description": "Object describing Homeless Veteran Point of Contact.",
                                    "type": "object",
                                    "required": [
                                      "pointOfContactName",
                                      "primaryPhone"
                                    ],
                                    "properties": {
                                      "pointOfContactName": {
                                        "description": "Point of contact in direct contact with Veteran.",
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 100,
                                        "pattern": "^([-a-zA-Z0-9/']+( ?))*$",
                                        "example": "Jane Doe"
                                      },
                                      "primaryPhone": {
                                        "description": "Phone Number Object for Point of Contact.",
                                        "type": "object",
                                        "required": [
                                          "areaCode",
                                          "phoneNumber"
                                        ],
                                        "properties": {
                                          "areaCode": {
                                            "description": "Area code of Point of Contact.",
                                            "type": "string",
                                            "example": "123"
                                          },
                                          "phoneNumber": {
                                            "description": "Primary phone of Point of Contact.",
                                            "type": "string",
                                            "example": "1231234"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "currentlyHomeless": {
                                    "type": "object",
                                    "required": [
                                      "homelessSituationType",
                                      "otherLivingSituation"
                                    ],
                                    "properties": {
                                      "homelessSituationType": {
                                        "description": "Current state of the veteran's homelessness.",
                                        "type": "string",
                                        "default": "OTHER",
                                        "enum": [
                                          "fleeing",
                                          "shelter",
                                          "notShelter",
                                          "anotherPerson",
                                          "other"
                                        ],
                                        "example": "fleeing"
                                      },
                                      "otherLivingSituation": {
                                        "description": "List any other living scenarios.",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "other living situation"
                                      }
                                    }
                                  },
                                  "homelessnessRisk": {
                                    "type": "object",
                                    "required": [
                                      "homelessnessRiskSituationType",
                                      "otherLivingSituation"
                                    ],
                                    "properties": {
                                      "homelessnessRiskSituationType": {
                                        "type": "string",
                                        "default": "OTHER",
                                        "enum": [
                                          "losingHousing",
                                          "leavingShelter",
                                          "other"
                                        ]
                                      },
                                      "otherLivingSituation": {
                                        "type": "string",
                                        "maxLength": 500
                                      }
                                    }
                                  }
                                }
                              },
                              "isTerminallyIll": {
                                "type": "boolean"
                              }
                            }
                          },
                          "serviceInformation": {
                            "description": "Overview of Veteran's service history.",
                            "type": "object",
                            "required": [
                              "servicePeriods"
                            ],
                            "properties": {
                              "servicePeriods": {
                                "description": "Identifies the Service dates and Branch the Veteran served in.",
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "serviceBranch",
                                    "activeDutyBeginDate",
                                    "activeDutyEndDate"
                                  ],
                                  "properties": {
                                    "serviceBranch": {
                                      "description": "Branch of Service during period.",
                                      "type": "string",
                                      "example": "Air Force",
                                      "enum": [
                                        "Air Force",
                                        "Air Force Reserves",
                                        "Air National Guard",
                                        "Army",
                                        "Army National Guard",
                                        "Army Reserves",
                                        "Coast Guard",
                                        "Coast Guard Reserves",
                                        "Marine Corps",
                                        "Marine Corps Reserves",
                                        "National Oceanic &amp; Atmospheric Administration",
                                        "Navy",
                                        "Navy Reserves",
                                        "Public Health Service",
                                        "Air Force Academy",
                                        "Army Air Corps or Army Air Force",
                                        "Army Nurse Corps",
                                        "Coast Guard Academy",
                                        "Merchant Marine",
                                        "Naval Academy",
                                        "Other",
                                        "US Military Academy",
                                        "Women's Army Corps"
                                      ]
                                    },
                                    "activeDutyBeginDate": {
                                      "description": "Date Started Active Duty.",
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                      "example": "1980-02-05"
                                    },
                                    "activeDutyEndDate": {
                                      "description": "Date Completed Active Duty.",
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                      "example": "1990-01-02"
                                    }
                                  }
                                }
                              },
                              "confinements": {
                                "type": "array",
                                "minItems": 1,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "confinementBeginDate",
                                    "confinementEndDate"
                                  ],
                                  "properties": {
                                    "confinementBeginDate": {
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                    },
                                    "confinementEndDate": {
                                      "type": "string",
                                      "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                    }
                                  }
                                }
                              },
                              "reservesNationalGuardService": {
                                "type": "object",
                                "required": [
                                  "title10Activation",
                                  "obligationTermOfServiceFromDate",
                                  "obligationTermOfServiceToDate",
                                  "unitName",
                                  "unitPhone",
                                  "receivingInactiveDutyTrainingPay"
                                ],
                                "properties": {
                                  "title10Activation": {
                                    "type": "object",
                                    "required": [
                                      "anticipatedSeparationDate",
                                      "title10ActivationDate"
                                    ],
                                    "properties": {
                                      "anticipatedSeparationDate": {
                                        "type": "string",
                                        "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                      },
                                      "title10ActivationDate": {
                                        "type": "string",
                                        "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                      }
                                    }
                                  },
                                  "obligationTermOfServiceFromDate": {
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                  },
                                  "obligationTermOfServiceToDate": {
                                    "type": "string",
                                    "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                                  },
                                  "unitName": {
                                    "type": "string"
                                  },
                                  "unitPhone": {
                                    "type": "object",
                                    "required": [
                                      "areaCode",
                                      "phoneNumber"
                                    ],
                                    "properties": {
                                      "areaCode": {
                                        "type": "string"
                                      },
                                      "phoneNumber": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "receivingInactiveDutyTrainingPay": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "alternateNames": {
                                "type": "array",
                                "minItems": 1,
                                "maxItems": 100,
                                "uniqueItems": true,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "firstName",
                                    "lastName"
                                  ],
                                  "properties": {
                                    "firstName": {
                                      "type": "string",
                                      "min": 1,
                                      "max": 30,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                    },
                                    "middleName": {
                                      "type": "string",
                                      "min": 1,
                                      "max": 30,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                    },
                                    "lastName": {
                                      "type": "string",
                                      "min": 1,
                                      "max": 30,
                                      "pattern": "^([-a-zA-Z0-9/']+( ?))+$"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "disabilities": {
                            "description": "Identifies the Service Disability information of the Veteran.",
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "object",
                              "required": [
                                "disabilityActionType",
                                "name"
                              ],
                              "properties": {
                                "specialIssues": {
                                  "description": "The special issues related to the disability.",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "ALS",
                                      "HEPC",
                                      "PTSD/1",
                                      "PTSD/2",
                                      "PTSD/3",
                                      "PTSD/4",
                                      "MST",
                                      "38 USC 1151",
                                      "ABA Election",
                                      "Abandoned VDC Claim",
                                      "AMC NOD Brokering Project",
                                      "Administrative Decision Review - Level 1",
                                      "Administrative Decision Review - Level 2",
                                      "Agent Orange - Vietnam",
                                      "Agent Orange - outside Vietnam or unknown",
                                      "AMA SOC/SSOC Opt-In",
                                      "Amyotrophic Lateral Sclerosis (ALS)",
                                      "Annual Eligibility Report",
                                      "Asbestos",
                                      "AutoEstablish",
                                      "Automated Drill Pay Adjustment",
                                      "Automated Return to Active Duty",
                                      "BDD – Excluded",
                                      "Brokered - D1BC",
                                      "Brokered - Internal",
                                      "Burn Pit Exposure",
                                      "C-123",
                                      "COWC",
                                      "Character of Discharge",
                                      "Challenge",
                                      "ChemBio",
                                      "Claimant Service Verification Accepted",
                                      "Combat Related Death",
                                      "Compensation Service Review – AO Outside RVN & Ship",
                                      "Compensation Service Review - Equitable Relief",
                                      "Compensation Service Review - Extraschedular",
                                      "Compensation Service Review – MG/CBRNE/Shad",
                                      "Compensation Service Review - Opinion",
                                      "Compensation Service Review - Over $25K",
                                      "Compensation Service Review - POW",
                                      "Compensation Service Review - Radiation",
                                      "Decision Ready Claim",
                                      "Decision Ready Claim - Deferred",
                                      "Decision Ready Claim - Partial Deferred",
                                      "Disability Benefits Questionnaire - Private",
                                      "Disability Benefits Questionnaire - VA",
                                      "DRC – Exam Review Complete Approved",
                                      "DRC – Exam Review Complete Disapproved",
                                      "DRC – Pending File Scan",
                                      "DRC – Vendor Exam Recommendation",
                                      "DTA Error – Exam/MO",
                                      "DTA Error – Fed Recs",
                                      "DTA Error – Other Recs",
                                      "DTA Error – PMRs",
                                      "Emergency Care – CH17 Determination",
                                      "Enhanced Disability Severance Pay",
                                      "Environmental Hazard - Camp Lejeune",
                                      "Environmental Hazard – Camp Lejeune – Louisville",
                                      "Environmental Hazard in Gulf War",
                                      "Extra-Schedular 3.321(b)(1)",
                                      "Extra-Schedular IU 4.16(b)",
                                      "FDC Excluded - Additional Claim Submitted",
                                      "FDC Excluded - All Required Items Not Submitted",
                                      "FDC Excluded - Appeal Pending",
                                      "FDC Excluded - Appeal submitted",
                                      "FDC Excluded - Claim Pending",
                                      "FDC Excluded - Claimant Declined FDC Processing",
                                      "FDC Excluded - Evidence Received After FDC CEST",
                                      "FDC Excluded - FDC Certification Incomplete",
                                      "FDC Excluded - FTR to Examination",
                                      "FDC Excluded - Necessary Form(s) not Submitted",
                                      "FDC Excluded - Needs Non-Fed Evidence Development",
                                      "FDC Excluded - requires INDPT VRFCTN of FTI",
                                      "Fed Record Delay - No Further Dev",
                                      "Force Majeure",
                                      "Fully Developed Claim",
                                      "Gulf War Presumptive",
                                      "HIV",
                                      "Hepatitis C",
                                      "Hospital Adjustment Action Plan FY 18/19",
                                      "IDES Deferral",
                                      "JSRRC Request",
                                      "Local Hearing",
                                      "Local Mentor Review",
                                      "Local Quality Review",
                                      "Local Quality Review IPR",
                                      "Medical Foster Home",
                                      "Military Sexual Trauma (MST)",
                                      "MQAS Separation and Severance Pay Audit",
                                      "Mustard Gas",
                                      "National Quality Review",
                                      "Nehmer AO Peripheral Neuropathy",
                                      "Nehmer Phase II",
                                      "Non-ADL Notification Letter",
                                      "Non-Nehmer AO Peripheral Neuropathy",
                                      "Non-PTSD Personal Trauma",
                                      "Potential Under/Overpayment",
                                      "POW",
                                      "PTSD - Combat",
                                      "PTSD - Non-Combat",
                                      "PTSD - Personal Trauma",
                                      "RO Special issue 1",
                                      "RO Special issue 2",
                                      "RO Special Issue 3",
                                      "RO Special Issue 4",
                                      "RO Special Issue 5",
                                      "RO Special Issue 6",
                                      "RO Special Issue 7",
                                      "RO Special Issue 8",
                                      "RO Special Issue 9",
                                      "RVSR Examination",
                                      "Radiation",
                                      "Radiation Radiogenic Disability Confirmed",
                                      "Rating Decision Review - Level 1",
                                      "Rating Decision Review - Level 2",
                                      "Ready for Exam",
                                      "Same Station Review",
                                      "SHAD",
                                      "Sarcoidosis",
                                      "Simultaneous Award Adjustment Not Permitted",
                                      "Specialized Records Request",
                                      "Stage 1 Development",
                                      "Stage 2 Development",
                                      "Stage 3 Development",
                                      "TBI Exam Review",
                                      "Temp 100 Convalescence",
                                      "Temp 100 Hospitalization",
                                      "Tobacco",
                                      "Tort Claim",
                                      "Traumatic Brain Injury",
                                      "Upfront Verification",
                                      "VACO Special issue 1",
                                      "VACO Special issue 2",
                                      "VACO Special Issue 3",
                                      "VACO Special Issue 4",
                                      "VACO Special Issue 5",
                                      "VACO Special Issue 6",
                                      "VACO Special Issue 7",
                                      "VACO Special Issue 8",
                                      "VACO Special Issue 9",
                                      "VASRD-Cardiovascular",
                                      "VASRD-Dental",
                                      "VASRD-Digestive",
                                      "VASRD-Endocrine",
                                      "VASRD-Eye",
                                      "VASRD-GU",
                                      "VASRD-GYN",
                                      "VASRD-Hemic",
                                      "VASRD-Infectious",
                                      "VASRD-Mental",
                                      "VASRD-Musculoskeletal",
                                      "VASRD-Neurological",
                                      "VASRD-Respiratory/Auditory",
                                      "VASRD-Skin",
                                      "Vendor Exclusion - No Diagnosis",
                                      "VONAPP Direct Connect",
                                      "WARTAC",
                                      "WARTAC Trainee"
                                    ]
                                  },
                                  "example": "ALS"
                                },
                                "ratedDisabilityId": {
                                  "description": "The Type of Disability.",
                                  "type": "string",
                                  "example": "1100583"
                                },
                                "diagnosticCode": {
                                  "description": "Specific Diagnostic Code.",
                                  "type": "integer",
                                  "example": 9999
                                },
                                "disabilityActionType": {
                                  "description": "The status of the current disability.",
                                  "type": "string",
                                  "enum": [
                                    "NONE",
                                    "NEW",
                                    "SECONDARY",
                                    "INCREASE",
                                    "REOPEN"
                                  ],
                                  "example": "NEW"
                                },
                                "name": {
                                  "description": "What the Disability is called.",
                                  "type": "string",
                                  "example": "PTSD (post traumatic stress disorder)"
                                },
                                "secondaryDisabilities": {
                                  "description": "Identifies the Secondary Service Disability information of the Veteran.",
                                  "type": "array",
                                  "minItems": 1,
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "disabilityActionType",
                                      "serviceRelevance"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "What the Disability is called.",
                                        "type": "string",
                                        "example": "PTSD"
                                      },
                                      "disabilityActionType": {
                                        "description": "The status of the secondary disability.",
                                        "type": "string",
                                        "enum": [
                                          "NONE",
                                          "NEW",
                                          "SECONDARY",
                                          "INCREASE",
                                          "REOPEN"
                                        ],
                                        "example": "SECONDARY"
                                      },
                                      "serviceRelevance": {
                                        "description": "How the veteran got the disability.",
                                        "type": "string",
                                        "example": "Caused by a service-connected disability."
                                      },
                                      "specialIssues": {
                                        "description": "The special issues related to the disability.",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "ALS",
                                            "HEPC",
                                            "PTSD/1",
                                            "PTSD/2",
                                            "PTSD/3",
                                            "PTSD/4",
                                            "MST",
                                            "38 USC 1151",
                                            "ABA Election",
                                            "Abandoned VDC Claim",
                                            "AMC NOD Brokering Project",
                                            "Administrative Decision Review - Level 1",
                                            "Administrative Decision Review - Level 2",
                                            "Agent Orange - Vietnam",
                                            "Agent Orange - outside Vietnam or unknown",
                                            "AMA SOC/SSOC Opt-In",
                                            "Amyotrophic Lateral Sclerosis (ALS)",
                                            "Annual Eligibility Report",
                                            "Asbestos",
                                            "AutoEstablish",
                                            "Automated Drill Pay Adjustment",
                                            "Automated Return to Active Duty",
                                            "BDD – Excluded",
                                            "Brokered - D1BC",
                                            "Brokered - Internal",
                                            "Burn Pit Exposure",
                                            "C-123",
                                            "COWC",
                                            "Character of Discharge",
                                            "Challenge",
                                            "ChemBio",
                                            "Claimant Service Verification Accepted",
                                            "Combat Related Death",
                                            "Compensation Service Review – AO Outside RVN & Ship",
                                            "Compensation Service Review - Equitable Relief",
                                            "Compensation Service Review - Extraschedular",
                                            "Compensation Service Review – MG/CBRNE/Shad",
                                            "Compensation Service Review - Opinion",
                                            "Compensation Service Review - Over $25K",
                                            "Compensation Service Review - POW",
                                            "Compensation Service Review - Radiation",
                                            "Decision Ready Claim",
                                            "Decision Ready Claim - Deferred",
                                            "Decision Ready Claim - Partial Deferred",
                                            "Disability Benefits Questionnaire - Private",
                                            "Disability Benefits Questionnaire - VA",
                                            "DRC – Exam Review Complete Approved",
                                            "DRC – Exam Review Complete Disapproved",
                                            "DRC – Pending File Scan",
                                            "DRC – Vendor Exam Recommendation",
                                            "DTA Error – Exam/MO",
                                            "DTA Error – Fed Recs",
                                            "DTA Error – Other Recs",
                                            "DTA Error – PMRs",
                                            "Emergency Care – CH17 Determination",
                                            "Enhanced Disability Severance Pay",
                                            "Environmental Hazard - Camp Lejeune",
                                            "Environmental Hazard – Camp Lejeune – Louisville",
                                            "Environmental Hazard in Gulf War",
                                            "Extra-Schedular 3.321(b)(1)",
                                            "Extra-Schedular IU 4.16(b)",
                                            "FDC Excluded - Additional Claim Submitted",
                                            "FDC Excluded - All Required Items Not Submitted",
                                            "FDC Excluded - Appeal Pending",
                                            "FDC Excluded - Appeal submitted",
                                            "FDC Excluded - Claim Pending",
                                            "FDC Excluded - Claimant Declined FDC Processing",
                                            "FDC Excluded - Evidence Received After FDC CEST",
                                            "FDC Excluded - FDC Certification Incomplete",
                                            "FDC Excluded - FTR to Examination",
                                            "FDC Excluded - Necessary Form(s) not Submitted",
                                            "FDC Excluded - Needs Non-Fed Evidence Development",
                                            "FDC Excluded - requires INDPT VRFCTN of FTI",
                                            "Fed Record Delay - No Further Dev",
                                            "Force Majeure",
                                            "Fully Developed Claim",
                                            "Gulf War Presumptive",
                                            "HIV",
                                            "Hepatitis C",
                                            "Hospital Adjustment Action Plan FY 18/19",
                                            "IDES Deferral",
                                            "JSRRC Request",
                                            "Local Hearing",
                                            "Local Mentor Review",
                                            "Local Quality Review",
                                            "Local Quality Review IPR",
                                            "Medical Foster Home",
                                            "Military Sexual Trauma (MST)",
                                            "MQAS Separation and Severance Pay Audit",
                                            "Mustard Gas",
                                            "National Quality Review",
                                            "Nehmer AO Peripheral Neuropathy",
                                            "Nehmer Phase II",
                                            "Non-ADL Notification Letter",
                                            "Non-Nehmer AO Peripheral Neuropathy",
                                            "Non-PTSD Personal Trauma",
                                            "Potential Under/Overpayment",
                                            "POW",
                                            "PTSD - Combat",
                                            "PTSD - Non-Combat",
                                            "PTSD - Personal Trauma",
                                            "RO Special issue 1",
                                            "RO Special issue 2",
                                            "RO Special Issue 3",
                                            "RO Special Issue 4",
                                            "RO Special Issue 5",
                                            "RO Special Issue 6",
                                            "RO Special Issue 7",
                                            "RO Special Issue 8",
                                            "RO Special Issue 9",
                                            "RVSR Examination",
                                            "Radiation",
                                            "Radiation Radiogenic Disability Confirmed",
                                            "Rating Decision Review - Level 1",
                                            "Rating Decision Review - Level 2",
                                            "Ready for Exam",
                                            "Same Station Review",
                                            "SHAD",
                                            "Sarcoidosis",
                                            "Simultaneous Award Adjustment Not Permitted",
                                            "Specialized Records Request",
                                            "Stage 1 Development",
                                            "Stage 2 Development",
                                            "Stage 3 Development",
                                            "TBI Exam Review",
                                            "Temp 100 Convalescence",
                                            "Temp 100 Hospitalization",
                                            "Tobacco",
                                            "Tort Claim",
                                            "Traumatic Brain Injury",
                                            "Upfront Verification",
                                            "VACO Special issue 1",
                                            "VACO Special issue 2",
                                            "VACO Special Issue 3",
                                            "VACO Special Issue 4",
                                            "VACO Special Issue 5",
                                            "VACO Special Issue 6",
                                            "VACO Special Issue 7",
                                            "VACO Special Issue 8",
                                            "VACO Special Issue 9",
                                            "VASRD-Cardiovascular",
                                            "VASRD-Dental",
                                            "VASRD-Digestive",
                                            "VASRD-Endocrine",
                                            "VASRD-Eye",
                                            "VASRD-GU",
                                            "VASRD-GYN",
                                            "VASRD-Hemic",
                                            "VASRD-Infectious",
                                            "VASRD-Mental",
                                            "VASRD-Musculoskeletal",
                                            "VASRD-Neurological",
                                            "VASRD-Respiratory/Auditory",
                                            "VASRD-Skin",
                                            "Vendor Exclusion - No Diagnosis",
                                            "VONAPP Direct Connect",
                                            "WARTAC",
                                            "WARTAC Trainee"
                                          ]
                                        },
                                        "example": "ALS"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "treatments": {
                            "description": "Identifies the Service Treatment information of the Veteran.",
                            "type": "array",
                            "minItems": 1,
                            "uniqueItems": true,
                            "items": {
                              "type": "object",
                              "required": [
                                "startDate",
                                "endDate",
                                "treatedDisabilityNames",
                                "center"
                              ],
                              "properties": {
                                "startDate": {
                                  "description": "Date Veteran started treatment.",
                                  "type": "string",
                                  "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                  "example": "2018-03-02"
                                },
                                "endDate": {
                                  "description": "Date Veteran ended treatment.",
                                  "type": "string",
                                  "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                                  "example": "2018-03-02"
                                },
                                "treatedDisabilityNames": {
                                  "description": "Identifies the Service Treatment nomenclature of the Veteran.",
                                  "type": "array",
                                  "minItems": 1,
                                  "maxItems": 101,
                                  "uniqueItems": true,
                                  "items": {
                                    "description": "Name of Disabilities Veteran was Treated for.",
                                    "type": "string",
                                    "example": "PTSD (post traumatic stress disorder)"
                                  }
                                },
                                "center": {
                                  "description": "Location of Veteran Treatment.",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "country"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of facility Veteran was treated in.",
                                      "type": "string",
                                      "example": "Private Facility 2"
                                    },
                                    "country": {
                                      "description": "Country Veteran was treated in.",
                                      "type": "string",
                                      "example": "USA"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "servicePay": {
                            "description": "Details about Veteran receiving Service Pay from DoD.",
                            "type": "object",
                            "required": [
                              "waiveVABenefitsToRetainTrainingPay",
                              "waiveVABenefitsToRetainRetiredPay",
                              "militaryRetiredPay"
                            ],
                            "properties": {
                              "waiveVABenefitsToRetainTrainingPay": {
                                "description": "Is Veteran Waiving benefits to retain training pay.",
                                "type": "boolean",
                                "example": true
                              },
                              "waiveVABenefitsToRetainRetiredPay": {
                                "description": "Is Veteran Waiving benefits to retain Retiree pay.",
                                "type": "boolean",
                                "example": true
                              },
                              "militaryRetiredPay": {
                                "description": "Retirement Pay information from Military Service.",
                                "type": "object",
                                "required": [
                                  "receiving",
                                  "payment"
                                ],
                                "properties": {
                                  "receiving": {
                                    "description": "Is Veteran getting Retiree pay.",
                                    "type": "boolean",
                                    "example": true
                                  },
                                  "payment": {
                                    "description": "Part of DoD paying Retirement Benefits.",
                                    "type": "object",
                                    "required": [
                                      "serviceBranch"
                                    ],
                                    "properties": {
                                      "serviceBranch": {
                                        "description": "Branch of Service making payments.",
                                        "type": "string",
                                        "enum": [
                                          "Air Force",
                                          "Air Force Reserves",
                                          "Air National Guard",
                                          "Army",
                                          "Army National Guard",
                                          "Army Reserves",
                                          "Coast Guard",
                                          "Coast Guard Reserves",
                                          "Marine Corps",
                                          "Marine Corps Reserves",
                                          "National Oceanic &amp; Atmospheric Administration",
                                          "Navy",
                                          "Navy Reserves",
                                          "Public Health Service",
                                          "Air Force Academy",
                                          "Army Air Corps or Army Air Force",
                                          "Army Nurse Corps",
                                          "Coast Guard Academy",
                                          "Merchant Marine",
                                          "Naval Academy",
                                          "Other",
                                          "US Military Academy",
                                          "Women's Army Corps"
                                        ],
                                        "example": "Air Force"
                                      }
                                    }
                                  }
                                }
                              },
                              "hasSeparationPay": {
                                "type": "boolean"
                              }
                            }
                          },
                          "directDeposit": {
                            "description": "Financial Direct Deposit information for Veteran.",
                            "type": "object",
                            "required": [
                              "accountType",
                              "accountNumber",
                              "routingNumber"
                            ],
                            "properties": {
                              "accountType": {
                                "description": "Veteran Account Type.",
                                "type": "string",
                                "enum": [
                                  "CHECKING",
                                  "SAVINGS"
                                ],
                                "example": "CHECKING"
                              },
                              "accountNumber": {
                                "description": "Veteran Bank Account Number.",
                                "minLength": 4,
                                "maxLength": 17,
                                "type": "string",
                                "example": "123123123123"
                              },
                              "routingNumber": {
                                "description": "Veteran Bank Routing Number.",
                                "type": "string",
                                "pattern": "^\\d{9}$",
                                "example": "123123123"
                              },
                              "bankName": {
                                "description": "Veteran Bank Name.",
                                "maxLength": 35,
                                "type": "string",
                                "example": "Some Bank"
                              }
                            }
                          },
                          "claimantCertification": {
                            "description": "Determines if person submitting the claim is certified to do so.",
                            "type": "boolean",
                            "example": true
                          },
                          "standardClaim": {
                            "description": "A value of false indicates the claim should be processed as a Fully Developed Claim.",
                            "type": "boolean",
                            "example": false
                          },
                          "applicationExpirationDate": {
                            "description": "Time stamp of when claim expires in one year after submission.",
                            "type": "string",
                            "example": "2018-08-28T19:53:45+00:00"
                          },
                          "autoCestPDFGenerationDisabled": {
                            "description": "Allows you to bypass the auto PDF generation and instead upload the Disability form itself through Support Documents.",
                            "type": "boolean",
                            "example": false
                          },
                          "claimDate": {
                            "description": "Date when claim is being submitted to the VA.",
                            "type": "string",
                            "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$",
                            "example": "2018-08-28"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/forms/526/{id}/attachments": {
      "post": {
        "summary": "Upload documents supporting a 526 claim",
        "tags": [
          "Disability"
        ],
        "operationId": "upload526Attachments",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Used to attach supporting documents for a 526 claim. For wet-signature PDFs, use the PUT /forms/526/{id} endpoint.\n\n<br/><br/>\nThis endpoint accepts a document binary PDF as part of a multi-part payload (for example, attachment1, attachment2, attachment3).\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID given when Disability Claim was submitted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "upload response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "c1283277-60fd-4f70-8725-3dcf13b97d07",
                    "type": "claims_api_claim",
                    "attributes": {
                      "evss_id": null,
                      "date_filed": null,
                      "min_est_date": null,
                      "max_est_date": null,
                      "open": true,
                      "waiver_submitted": null,
                      "documents_needed": null,
                      "development_letter_sent": null,
                      "decision_letter_sent": null,
                      "requested_decision": null,
                      "claim_type": null,
                      "updated_at": "2021-05-25T13:44:06.424Z",
                      "contention_list": null,
                      "va_representative": null,
                      "events_timeline": [

                      ],
                      "status": "pending",
                      "supporting_documents": [
                        {
                          "id": "11b4717b-fdb4-4823-90e9-519c1e6fe46c",
                          "type": "claim_supporting_document",
                          "md5": null,
                          "filename": null,
                          "uploaded_at": null
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Internal vets-api Claim ID"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "open",
                            "updated_at",
                            "events_timeline",
                            "status",
                            "supporting_documents"
                          ],
                          "properties": {
                            "evss_id": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "description": "EVSS Claim ID"
                            },
                            "date_filed": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Date in YYYY-MM-DD the claim was first filed"
                            },
                            "min_est_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Minimum Estimated Claim Completion Date"
                            },
                            "max_est_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Maximum Estimated Claim Completion Date"
                            },
                            "phase_change_date": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "format": "date",
                              "description": "Date of last phase change"
                            },
                            "open": {
                              "type": "boolean",
                              "description": "Has the claim been resolved"
                            },
                            "waiver_submitted": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Requested Decision or Waiver 5103 Submitted"
                            },
                            "documents_needed": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Does the claim require additional documents to be submitted"
                            },
                            "development_letter_sent": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Indicates if a Development Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "decision_letter_sent": {
                              "type": [
                                "boolean",
                                "null"
                              ],
                              "description": "Indicates if a Decision Letter has been sent to the Claimant regarding a benefit claim"
                            },
                            "phase": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "ever_phase_back": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "current_phase_back": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "requested_decision": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The claim filer has requested a claim decision be made"
                            },
                            "claim_type": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "The type of claim originally submitted"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date",
                              "description": "Time stamp of last change to the claim"
                            },
                            "contention_list": {
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "va_representative": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "events_timeline": {
                              "type": "array"
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "pending"
                              ],
                              "description": "Current status of the claim"
                            },
                            "supporting_documents": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique identifier of document"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Required by JSON API standard"
                                  },
                                  "md5": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Hashed representation of document"
                                  },
                                  "filename": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "description": "Name of document"
                                  },
                                  "uploaded_at": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "format": "date",
                                    "description": "Date and time document was uploaded"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Resource not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "attachment1": {
                    "type": "file",
                    "description": "Attachment contents. Must be provided in binary PDF or [base64 string](https://raw.githubusercontent.com/department-of-veterans-affairs/vets-api/master/modules/claims_api/spec/fixtures/base64pdf) format and less than 11 in x 11 in.\n"
                  },
                  "attachment2": {
                    "type": "file",
                    "description": "Attachment contents. Must be provided in binary PDF or [base64 string](https://raw.githubusercontent.com/department-of-veterans-affairs/vets-api/master/modules/claims_api/spec/fixtures/base64pdf) format and less than 11 in x 11 in.\n"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/0966": {
      "get": {
        "summary": "Get 0966 JSON Schema for form.",
        "deprecated": true,
        "tags": [
          "Intent to File"
        ],
        "operationId": "get0966JsonSchema",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns a single 0966 JSON schema to auto generate a form.",
        "responses": {
          "200": {
            "description": "schema response",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "Form 0966 Schema",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "compensation",
                          "description": "For type \"burial\", the request must be made by a valid Veteran Representative. If the Representative is not a Veteran or a VA employee, this method is currently not available to them, and they should use the Benefits Intake API as an alternative.",
                          "enum": [
                            "compensation",
                            "pension",
                            "burial"
                          ]
                        },
                        "participant_claimant_id": {
                          "type": "string",
                          "example": "123456789",
                          "description": "Participant ID or SSN of the claimant."
                        },
                        "participant_vet_id": {
                          "type": "string",
                          "example": "987654321"
                        },
                        "received_date": {
                          "type": "string",
                          "example": "2015-01-05T17:42:12.058Z",
                          "format": "datetime"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Submit form 0966 Intent to File.",
        "tags": [
          "Intent to File"
        ],
        "operationId": "post0966itf",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Establishes an intent to file for disability compensation, burial, or pension claims.\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "0966 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "184058",
                    "type": "intent_to_file",
                    "attributes": {
                      "creation_date": "2020-08-10T08:31:26.000-05:00",
                      "expiration_date": "2021-08-10T08:31:18.000-05:00",
                      "type": "compensation",
                      "status": "duplicate"
                    }
                  }
                },
                "schema": {
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Intent to File ID from EVSS"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "creation_date",
                            "expiration_date",
                            "type",
                            "status"
                          ],
                          "properties": {
                            "creation_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the Intent to File was received at the VA"
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the ITF expires, this is 1 year from the created_date"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of ITF filed. Compensation, Pension, or Burial",
                              "enum": [
                                "compensation",
                                "burial",
                                "pension"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the Intent to File",
                              "enum": [
                                "duplicate"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Forbidden",
                      "detail": "Representative cannot file for type 'burial'",
                      "code": "403",
                      "status": "403"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": 422,
                      "detail": "The property /type did not match the following requirements {\"type\"=>\"string\", \"example\"=>\"compensation\", \"description\"=>\"For type \\\"burial\\\", the request must be made by a valid Veteran Representative. If the Representative is not a Veteran or a VA employee, this method is currently not available to them, and they should use the Benefits Intake API as an alternative.\", \"enum\"=>[\"compensation\", \"pension\", \"burial\"]}",
                      "source": "/type"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "detail",
                          "source"
                        ],
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "HTTP error code"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": [
                              "string",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "example": {
                      "type": "form/0966",
                      "attributes": {
                        "type": "compensation"
                      }
                    },
                    "properties": {
                      "attributes": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "description": "Form 0966 Schema",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "compensation",
                            "description": "For type \"burial\", the request must be made by a valid Veteran Representative. If the Representative is not a Veteran or a VA employee, this method is currently not available to them, and they should use the Benefits Intake API as an alternative.",
                            "enum": [
                              "compensation",
                              "pension",
                              "burial"
                            ]
                          },
                          "participant_claimant_id": {
                            "type": "string",
                            "example": "123456789",
                            "description": "Participant ID or SSN of the claimant."
                          },
                          "participant_vet_id": {
                            "type": "string",
                            "example": "987654321"
                          },
                          "received_date": {
                            "type": "string",
                            "example": "2015-01-05T17:42:12.058Z",
                            "format": "datetime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/forms/0966/active": {
      "get": {
        "summary": "Returns last active 0966 Intent to File form submission.",
        "tags": [
          "Intent to File"
        ],
        "operationId": "active0966itf",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns the last active 0966 form for a Veteran.",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of 0966 you wish to get the active submission for.",
            "example": "compensation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "0966 response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "183042",
                    "type": "intent_to_file",
                    "attributes": {
                      "creation_date": "2020-06-05T11:24:28.000-05:00",
                      "expiration_date": "2021-06-05T11:24:28.000-05:00",
                      "type": "compensation",
                      "status": "active"
                    }
                  }
                },
                "schema": {
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Intent to File ID from EVSS"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "creation_date",
                            "expiration_date",
                            "type",
                            "status"
                          ],
                          "properties": {
                            "creation_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the Intent to File was received at the VA"
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the ITF expires, this is 1 year from the created_date"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of ITF filed. Compensation, Pension, or Burial",
                              "enum": [
                                "compensation",
                                "burial",
                                "pension"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the Intent to File",
                              "enum": [
                                "active",
                                "inactive"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "No Intent to file is on record for WESLEY FORD of type compensation",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Unprocessable Entity",
                      "detail": "Must include either compensation, pension or burial as a 'type' parameter.",
                      "code": "422",
                      "status": "422"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/0966/validate": {
      "post": {
        "summary": "Test the 0966 Intent to File form submission.",
        "deprecated": true,
        "tags": [
          "Intent to File"
        ],
        "operationId": "validate0966itf",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Test to ensure the form submission works with your parameters.\nSubmission is validated against the GET /forms/0966 schema.\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "0966 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "intentToFileValidation",
                    "attributes": {
                      "status": "valid"
                    }
                  }
                },
                "schema": {
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the Intent to File",
                              "enum": [
                                "valid"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key type",
                      "source": "/"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "detail",
                          "source"
                        ],
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "HTTP error code"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": [
                              "string",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "example": {
                      "type": "form/0966",
                      "attributes": {
                        "type": "compensation"
                      }
                    },
                    "properties": {
                      "attributes": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "description": "Form 0966 Schema",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "compensation",
                            "description": "For type \"burial\", the request must be made by a valid Veteran Representative. If the Representative is not a Veteran or a VA employee, this method is currently not available to them, and they should use the Benefits Intake API as an alternative.",
                            "enum": [
                              "compensation",
                              "pension",
                              "burial"
                            ]
                          },
                          "participant_claimant_id": {
                            "type": "string",
                            "example": "123456789",
                            "description": "Participant ID or SSN of the claimant."
                          },
                          "participant_vet_id": {
                            "type": "string",
                            "example": "987654321"
                          },
                          "received_date": {
                            "type": "string",
                            "example": "2015-01-05T17:42:12.058Z",
                            "format": "datetime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/forms/2122": {
      "get": {
        "summary": "Gets schema for POA form.",
        "deprecated": true,
        "tags": [
          "Power of Attorney"
        ],
        "operationId": "get2122JsonSchema",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns schema to automatically generate a POA form.",
        "responses": {
          "200": {
            "description": "schema response",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "Form 2122 Schema",
                      "type": "object",
                      "required": [
                        "serviceOrganization"
                      ],
                      "properties": {
                        "veteran": {
                          "type": "object",
                          "required": [
                            "address",
                            "phone",
                            "email"
                          ],
                          "properties": {
                            "address": {
                              "type": "object",
                              "required": [
                                "numberAndStreet",
                                "city",
                                "country",
                                "zipFirstFive"
                              ],
                              "properties": {
                                "numberAndStreet": {
                                  "description": "Street address with number and name.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20
                                },
                                "aptUnitNumber": {
                                  "type": "integer"
                                },
                                "city": {
                                  "description": "City for the address.",
                                  "type": "string",
                                  "example": "Portland"
                                },
                                "state": {
                                  "description": "State for the address.",
                                  "type": "string",
                                  "example": "OR"
                                },
                                "country": {
                                  "description": "Country of the address.",
                                  "type": "string",
                                  "example": "USA"
                                },
                                "zipFirstFive": {
                                  "description": "Zipcode (First 5 digits) of the address.",
                                  "type": "string",
                                  "pattern": "^\\d{5}?$",
                                  "example": "12345"
                                },
                                "zipLastFour": {
                                  "description": "Zipcode (Last 4 digits) of the address.",
                                  "type": "string",
                                  "pattern": "^\\d{4}?$",
                                  "example": "6789"
                                },
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "phone": {
                              "$comment": "the phone fields must not exceed 20 chars, when concatenated",
                              "type": "object",
                              "required": [
                                "areaCode",
                                "phoneNumber"
                              ],
                              "properties": {
                                "countryCode": {
                                  "type": "string",
                                  "pattern": "^[0-9]+$"
                                },
                                "areaCode": {
                                  "description": "Area code of the phone number.",
                                  "type": "string",
                                  "pattern": "^[2-9][0-9]{2}$",
                                  "example": "555"
                                },
                                "phoneNumber": {
                                  "description": "Phone number.",
                                  "type": "string",
                                  "pattern": "^[0-9]{1,14}$",
                                  "example": "555-5555"
                                },
                                "phoneNumberExt": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9]{1,10}$"
                                }
                              }
                            },
                            "email": {
                              "description": "Email address of the veteran.",
                              "type": "string",
                              "pattern": ".@.",
                              "maxLength": 61,
                              "example": "veteran@example.com"
                            },
                            "serviceBranch": {
                              "description": "Service Branch for the veteran.",
                              "type": "string",
                              "enum": [
                                "AIR FORCE",
                                "ARMY",
                                "COAST GUARD",
                                "MARINE CORPS",
                                "NAVY",
                                "OTHER"
                              ],
                              "example": "ARMY"
                            }
                          }
                        },
                        "claimant": {
                          "type": "object",
                          "required": [
                            "firstName",
                            "lastName",
                            "address",
                            "phone",
                            "email",
                            "relationship"
                          ],
                          "properties": {
                            "firstName": {
                              "description": "First name of Claimant.",
                              "type": "string",
                              "example": "John"
                            },
                            "middleInitial": {
                              "description": "Middle initial of Claimant.",
                              "type": "string",
                              "example": "M"
                            },
                            "lastName": {
                              "description": "Last name of Claimant.",
                              "type": "string",
                              "example": "Dow"
                            },
                            "address": {
                              "type": "object",
                              "required": [
                                "numberAndStreet",
                                "city",
                                "country",
                                "zipFirstFive"
                              ],
                              "properties": {
                                "numberAndStreet": {
                                  "description": "Street address with number and name.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20
                                },
                                "aptUnitNumber": {
                                  "type": "integer"
                                },
                                "city": {
                                  "description": "City for the address.",
                                  "type": "string",
                                  "example": "Portland"
                                },
                                "state": {
                                  "description": "State for the address.",
                                  "type": "string",
                                  "example": "OR"
                                },
                                "country": {
                                  "description": "Country of the address.",
                                  "type": "string",
                                  "example": "USA"
                                },
                                "zipFirstFive": {
                                  "description": "Zipcode (First 5 digits) of the address.",
                                  "type": "string",
                                  "pattern": "^\\d{5}?$",
                                  "example": "12345"
                                },
                                "zipLastFour": {
                                  "description": "Zipcode (Last 4 digits) of the address.",
                                  "type": "string",
                                  "pattern": "^\\d{4}?$",
                                  "example": "6789"
                                },
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "phone": {
                              "$comment": "the phone fields must not exceed 20 chars, when concatenated",
                              "type": "object",
                              "required": [
                                "areaCode",
                                "phoneNumber"
                              ],
                              "properties": {
                                "countryCode": {
                                  "type": "string",
                                  "pattern": "^[0-9]+$"
                                },
                                "areaCode": {
                                  "description": "Area code of the phone number.",
                                  "type": "string",
                                  "pattern": "^[2-9][0-9]{2}$",
                                  "example": "555"
                                },
                                "phoneNumber": {
                                  "description": "Phone number.",
                                  "type": "string",
                                  "pattern": "^[0-9]{1,14}$",
                                  "example": "555-5555"
                                },
                                "phoneNumberExt": {
                                  "type": "string",
                                  "pattern": "^[a-zA-Z0-9]{1,10}$"
                                }
                              }
                            },
                            "email": {
                              "description": "Email address of the claimant.",
                              "type": "string",
                              "pattern": ".@.",
                              "maxLength": 61,
                              "example": "claimant@example.com"
                            },
                            "relationship": {
                              "description": "Relationship of claimant to the veteran.",
                              "type": "string",
                              "example": "Spouse"
                            }
                          }
                        },
                        "serviceOrganization": {
                          "description": "Details of the Service Organization representing the veteran.",
                          "type": "object",
                          "required": [
                            "poaCode"
                          ],
                          "properties": {
                            "poaCode": {
                              "description": "The POA code of the organization.",
                              "type": "string",
                              "example": "A1Q"
                            },
                            "organizationName": {
                              "description": "Name of the service organization.",
                              "type": "string",
                              "example": "I help vets LLC."
                            },
                            "firstName": {
                              "description": "First Name of the representative.",
                              "type": "string",
                              "example": "John"
                            },
                            "lastName": {
                              "description": "Last Name of the representative",
                              "type": "string",
                              "example": "Doe"
                            },
                            "jobTitle": {
                              "description": "Job title of the representative.",
                              "type": "string",
                              "example": "Veteran Service representative"
                            },
                            "address": {
                              "type": "object",
                              "required": [
                                "numberAndStreet",
                                "city",
                                "country",
                                "zipFirstFive"
                              ],
                              "properties": {
                                "numberAndStreet": {
                                  "description": "Street address with number and name.",
                                  "type": "string",
                                  "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                  "maxLength": 20
                                },
                                "aptUnitNumber": {
                                  "type": "integer"
                                },
                                "city": {
                                  "description": "City for the address.",
                                  "type": "string",
                                  "example": "Portland"
                                },
                                "state": {
                                  "description": "State for the address.",
                                  "type": "string",
                                  "example": "OR"
                                },
                                "country": {
                                  "description": "Country of the address.",
                                  "type": "string",
                                  "example": "USA"
                                },
                                "zipFirstFive": {
                                  "description": "Zipcode (First 5 digits) of the address.",
                                  "type": "string",
                                  "pattern": "^\\d{5}?$",
                                  "example": "12345"
                                },
                                "zipLastFour": {
                                  "description": "Zipcode (Last 4 digits) of the address.",
                                  "type": "string",
                                  "pattern": "^\\d{4}?$",
                                  "example": "6789"
                                },
                                "additionalProperties": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "email": {
                              "description": "Email address of the service organization or representative.",
                              "type": "string",
                              "pattern": ".@.",
                              "maxLength": 61,
                              "example": "veteran_representative@example.com"
                            },
                            "appointmentDate": {
                              "description": "Date of appointment with Veteran.",
                              "type": "string",
                              "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                            }
                          }
                        },
                        "recordConsent": {
                          "description": "AUTHORIZATION FOR REPRESENTATIVE'S ACCESS TO RECORDS PROTECTED BY SECTION 7332, TITLE 38, U.S.C.",
                          "type": "boolean"
                        },
                        "consentLimits": {
                          "description": "Consent in Item 19 for the disclosure of records relating to treatment for drug abuse, alcoholism or alcohol abuse, infection with the human immunodeficiency virus (HIV), or sickle cell anemia is limited as follows.",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "DRUG ABUSE",
                              "ALCOHOLISM",
                              "HIV",
                              "SICKLE CELL"
                            ]
                          },
                          "example": "DRUG ABUSE"
                        },
                        "consentAddressChange": {
                          "description": "AUTHORIZATION FOR REPRESENTATIVE TO ACT ON CLAIMANT'S BEHALF TO CHANGE CLAIMANT'S ADDRESS.",
                          "type": "boolean"
                        },
                        "signatures": {
                          "type": "object",
                          "required": [
                            "veteran",
                            "representative"
                          ],
                          "properties": {
                            "veteran": {
                              "description": "Base64 encoded png image of the veterans signature.",
                              "title": "Signature of the Veteran",
                              "type": "string"
                            },
                            "representative": {
                              "description": "Base64 encoded png image of the representative signature.",
                              "title": "Signature of the Veteran Representative",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Submit a POA form.",
        "tags": [
          "Power of Attorney"
        ],
        "operationId": "post2122",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "The endpoint establishes POA for a representative.\nOnce ID.me authorizes the Veteran or VSO via OpenID, this endpoint requests the:\n\n - poaCode\n - POA first name\n - POA last name\n - Signature, which can be a:\n\n   - Base64-encoded image or signature block, allowing the API to auto-populate\nand attach the VA 21-22 form to the request without requiring a PDF upload, or\n\n   - PDF documentation of VA 21-22 form with an ink signature, attached using the PUT /forms/2122/{id} endpoint\n\n\nA 200 response means the submission was successful, but does not mean the POA is effective.\nCheck the status of a POA submission by using the GET /forms/2122/{id} endpoint.\n\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "2122 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "265d7d6a-dd51-4cb7-94ff-d3a9f42b9a67",
                    "type": "claims_api_power_of_attorneys",
                    "attributes": {
                      "status": "pending",
                      "date_request_accepted": "2021-05-25",
                      "representative": {
                        "service_organization": {
                          "poa_code": "074"
                        }
                      },
                      "previous_poa": null
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Power of Attorney Submission UUID"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "date_request_accepted",
                            "representative"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Says if the power of attorney is pending, submitted, updated or errored",
                              "enum": [
                                "pending",
                                "submitted",
                                "updated",
                                "errored"
                              ]
                            },
                            "date_request_accepted": {
                              "type": "string",
                              "description": "Date request was first accepted",
                              "format": "date"
                            },
                            "representative": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "service_organization"
                              ],
                              "properties": {
                                "service_organization": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "required": [
                                    "poa_code"
                                  ],
                                  "properties": {
                                    "poa_code": {
                                      "type": "string",
                                      "description": "Power of Attorney Code submitted for Veteran"
                                    }
                                  }
                                }
                              }
                            },
                            "previous_poa": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Current or Previous Power of Attorney Code submitted for Veteran"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": 422,
                      "detail": "The property /serviceOrganization/poaCode did not match the following requirements {\"description\"=>\"The POA code of the organization.\", \"type\"=>\"string\", \"example\"=>\"A1Q\"}",
                      "source": "/serviceOrganization/poaCode"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "detail",
                          "source"
                        ],
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "HTTP error code"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": [
                              "string",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "example": {
                      "type": "form/21-22",
                      "attributes": {
                        "serviceOrganization": {
                          "poaCode": "A1Q"
                        }
                      }
                    },
                    "properties": {
                      "attributes": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "description": "Form 2122 Schema",
                        "type": "object",
                        "required": [
                          "serviceOrganization"
                        ],
                        "properties": {
                          "veteran": {
                            "type": "object",
                            "required": [
                              "address",
                              "phone",
                              "email"
                            ],
                            "properties": {
                              "address": {
                                "type": "object",
                                "required": [
                                  "numberAndStreet",
                                  "city",
                                  "country",
                                  "zipFirstFive"
                                ],
                                "properties": {
                                  "numberAndStreet": {
                                    "description": "Street address with number and name.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20
                                  },
                                  "aptUnitNumber": {
                                    "type": "integer"
                                  },
                                  "city": {
                                    "description": "City for the address.",
                                    "type": "string",
                                    "example": "Portland"
                                  },
                                  "state": {
                                    "description": "State for the address.",
                                    "type": "string",
                                    "example": "OR"
                                  },
                                  "country": {
                                    "description": "Country of the address.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "phone": {
                                "$comment": "the phone fields must not exceed 20 chars, when concatenated",
                                "type": "object",
                                "required": [
                                  "areaCode",
                                  "phoneNumber"
                                ],
                                "properties": {
                                  "countryCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$"
                                  },
                                  "areaCode": {
                                    "description": "Area code of the phone number.",
                                    "type": "string",
                                    "pattern": "^[2-9][0-9]{2}$",
                                    "example": "555"
                                  },
                                  "phoneNumber": {
                                    "description": "Phone number.",
                                    "type": "string",
                                    "pattern": "^[0-9]{1,14}$",
                                    "example": "555-5555"
                                  },
                                  "phoneNumberExt": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{1,10}$"
                                  }
                                }
                              },
                              "email": {
                                "description": "Email address of the veteran.",
                                "type": "string",
                                "pattern": ".@.",
                                "maxLength": 61,
                                "example": "veteran@example.com"
                              },
                              "serviceBranch": {
                                "description": "Service Branch for the veteran.",
                                "type": "string",
                                "enum": [
                                  "AIR FORCE",
                                  "ARMY",
                                  "COAST GUARD",
                                  "MARINE CORPS",
                                  "NAVY",
                                  "OTHER"
                                ],
                                "example": "ARMY"
                              }
                            }
                          },
                          "claimant": {
                            "type": "object",
                            "required": [
                              "firstName",
                              "lastName",
                              "address",
                              "phone",
                              "email",
                              "relationship"
                            ],
                            "properties": {
                              "firstName": {
                                "description": "First name of Claimant.",
                                "type": "string",
                                "example": "John"
                              },
                              "middleInitial": {
                                "description": "Middle initial of Claimant.",
                                "type": "string",
                                "example": "M"
                              },
                              "lastName": {
                                "description": "Last name of Claimant.",
                                "type": "string",
                                "example": "Dow"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "numberAndStreet",
                                  "city",
                                  "country",
                                  "zipFirstFive"
                                ],
                                "properties": {
                                  "numberAndStreet": {
                                    "description": "Street address with number and name.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20
                                  },
                                  "aptUnitNumber": {
                                    "type": "integer"
                                  },
                                  "city": {
                                    "description": "City for the address.",
                                    "type": "string",
                                    "example": "Portland"
                                  },
                                  "state": {
                                    "description": "State for the address.",
                                    "type": "string",
                                    "example": "OR"
                                  },
                                  "country": {
                                    "description": "Country of the address.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "phone": {
                                "$comment": "the phone fields must not exceed 20 chars, when concatenated",
                                "type": "object",
                                "required": [
                                  "areaCode",
                                  "phoneNumber"
                                ],
                                "properties": {
                                  "countryCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$"
                                  },
                                  "areaCode": {
                                    "description": "Area code of the phone number.",
                                    "type": "string",
                                    "pattern": "^[2-9][0-9]{2}$",
                                    "example": "555"
                                  },
                                  "phoneNumber": {
                                    "description": "Phone number.",
                                    "type": "string",
                                    "pattern": "^[0-9]{1,14}$",
                                    "example": "555-5555"
                                  },
                                  "phoneNumberExt": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{1,10}$"
                                  }
                                }
                              },
                              "email": {
                                "description": "Email address of the claimant.",
                                "type": "string",
                                "pattern": ".@.",
                                "maxLength": 61,
                                "example": "claimant@example.com"
                              },
                              "relationship": {
                                "description": "Relationship of claimant to the veteran.",
                                "type": "string",
                                "example": "Spouse"
                              }
                            }
                          },
                          "serviceOrganization": {
                            "description": "Details of the Service Organization representing the veteran.",
                            "type": "object",
                            "required": [
                              "poaCode"
                            ],
                            "properties": {
                              "poaCode": {
                                "description": "The POA code of the organization.",
                                "type": "string",
                                "example": "A1Q"
                              },
                              "organizationName": {
                                "description": "Name of the service organization.",
                                "type": "string",
                                "example": "I help vets LLC."
                              },
                              "firstName": {
                                "description": "First Name of the representative.",
                                "type": "string",
                                "example": "John"
                              },
                              "lastName": {
                                "description": "Last Name of the representative",
                                "type": "string",
                                "example": "Doe"
                              },
                              "jobTitle": {
                                "description": "Job title of the representative.",
                                "type": "string",
                                "example": "Veteran Service representative"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "numberAndStreet",
                                  "city",
                                  "country",
                                  "zipFirstFive"
                                ],
                                "properties": {
                                  "numberAndStreet": {
                                    "description": "Street address with number and name.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20
                                  },
                                  "aptUnitNumber": {
                                    "type": "integer"
                                  },
                                  "city": {
                                    "description": "City for the address.",
                                    "type": "string",
                                    "example": "Portland"
                                  },
                                  "state": {
                                    "description": "State for the address.",
                                    "type": "string",
                                    "example": "OR"
                                  },
                                  "country": {
                                    "description": "Country of the address.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "email": {
                                "description": "Email address of the service organization or representative.",
                                "type": "string",
                                "pattern": ".@.",
                                "maxLength": 61,
                                "example": "veteran_representative@example.com"
                              },
                              "appointmentDate": {
                                "description": "Date of appointment with Veteran.",
                                "type": "string",
                                "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                              }
                            }
                          },
                          "recordConsent": {
                            "description": "AUTHORIZATION FOR REPRESENTATIVE'S ACCESS TO RECORDS PROTECTED BY SECTION 7332, TITLE 38, U.S.C.",
                            "type": "boolean"
                          },
                          "consentLimits": {
                            "description": "Consent in Item 19 for the disclosure of records relating to treatment for drug abuse, alcoholism or alcohol abuse, infection with the human immunodeficiency virus (HIV), or sickle cell anemia is limited as follows.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "DRUG ABUSE",
                                "ALCOHOLISM",
                                "HIV",
                                "SICKLE CELL"
                              ]
                            },
                            "example": "DRUG ABUSE"
                          },
                          "consentAddressChange": {
                            "description": "AUTHORIZATION FOR REPRESENTATIVE TO ACT ON CLAIMANT'S BEHALF TO CHANGE CLAIMANT'S ADDRESS.",
                            "type": "boolean"
                          },
                          "signatures": {
                            "type": "object",
                            "required": [
                              "veteran",
                              "representative"
                            ],
                            "properties": {
                              "veteran": {
                                "description": "Base64 encoded png image of the veterans signature.",
                                "title": "Signature of the Veteran",
                                "type": "string"
                              },
                              "representative": {
                                "description": "Base64 encoded png image of the representative signature.",
                                "title": "Signature of the Veteran Representative",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/forms/2122/{id}": {
      "put": {
        "summary": "Upload a signed 21-22 document.",
        "tags": [
          "Power of Attorney"
        ],
        "operationId": "upload2122Attachment",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Accepts a document binary as part of a multipart payload.\nUse this PUT endpoint after the POST endpoint for uploading the signed 21-22 PDF form.\n\n",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "UUID given when Power of Attorney was submitted",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "2122 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "0007c72b-bd0a-443c-b571-0683c468435f",
                    "type": "claims_api_power_of_attorneys",
                    "attributes": {
                      "status": "submitted",
                      "date_request_accepted": "2021-05-25",
                      "representative": {
                        "service_organization": {
                          "poa_code": "074"
                        }
                      },
                      "previous_poa": null
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Power of Attorney Submission UUID"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "date_request_accepted",
                            "representative"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Says if the power of attorney is pending, submitted, updated or errored",
                              "enum": [
                                "pending",
                                "submitted",
                                "updated",
                                "errored"
                              ]
                            },
                            "date_request_accepted": {
                              "type": "string",
                              "description": "Date request was first accepted",
                              "format": "date"
                            },
                            "representative": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "service_organization"
                              ],
                              "properties": {
                                "service_organization": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "required": [
                                    "poa_code"
                                  ],
                                  "properties": {
                                    "poa_code": {
                                      "type": "string",
                                      "description": "Power of Attorney Code submitted for Veteran"
                                    }
                                  }
                                }
                              }
                            },
                            "previous_poa": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Current or Previous Power of Attorney Code submitted for Veteran"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Resource not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "attachment": {
                    "type": "file",
                    "description": "Attachment contents. Must be provided in binary PDF or [base64 string](https://raw.githubusercontent.com/department-of-veterans-affairs/vets-api/master/modules/claims_api/spec/fixtures/base64pdf) format and less than 11 in x 11 in.\n"
                  }
                }
              }
            }
          },
          "required": true
        }
      },
      "get": {
        "summary": "Check POA status by ID.",
        "tags": [
          "Power of Attorney"
        ],
        "operationId": "get2122poa",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Based on ID, returns a 21-22 submission and current status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the 21-22 submission",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "2122 response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1c186bbf-d5ef-4fa4-993f-4929234da2da",
                    "type": "claims_api_power_of_attorneys",
                    "attributes": {
                      "status": "submitted",
                      "date_request_accepted": "2021-05-25",
                      "representative": {
                        "service_organization": {
                          "poa_code": "074"
                        }
                      },
                      "previous_poa": null
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Power of Attorney Submission UUID"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "date_request_accepted",
                            "representative"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Says if the power of attorney is pending, submitted, updated or errored",
                              "enum": [
                                "pending",
                                "submitted",
                                "updated",
                                "errored"
                              ]
                            },
                            "date_request_accepted": {
                              "type": "string",
                              "description": "Date request was first accepted",
                              "format": "date"
                            },
                            "representative": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "service_organization"
                              ],
                              "properties": {
                                "service_organization": {
                                  "type": "object",
                                  "additionalProperties": true,
                                  "required": [
                                    "poa_code"
                                  ],
                                  "properties": {
                                    "poa_code": {
                                      "type": "string",
                                      "description": "Power of Attorney Code submitted for Veteran"
                                    }
                                  }
                                }
                              }
                            },
                            "previous_poa": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Current or Previous Power of Attorney Code submitted for Veteran"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Resource not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/2122/active": {
      "get": {
        "summary": "Check active POA status.",
        "tags": [
          "Power of Attorney"
        ],
        "operationId": "getActive2122Poa",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns the last active POA for a Veteran.\nTo check the status of new POA submissions, use the GET /forms/2122/{id} endpoint.\n\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "2122 response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": null,
                    "type": "claims_api_power_of_attorneys",
                    "attributes": {
                      "status": "updated",
                      "date_request_accepted": null,
                      "representative": {
                        "service_organization": {
                          "name": "Some Great Organization",
                          "phone_number": "555-555-5555",
                          "poa_code": "HelloWorld"
                        }
                      },
                      "previous_poa": null
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "null"
                        },
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "date_request_accepted",
                            "representative"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Says if the power of attorney is pending, submitted, updated or errored",
                              "enum": [
                                "pending",
                                "submitted",
                                "updated",
                                "errored"
                              ]
                            },
                            "date_request_accepted": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Date request was first accepted",
                              "format": "date"
                            },
                            "representative": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "service_organization"
                              ],
                              "properties": {
                                "service_organization": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "poa_code"
                                  ],
                                  "properties": {
                                    "poa_code": {
                                      "type": "string",
                                      "description": "Power of Attorney Code submitted for Veteran"
                                    },
                                    "name": {
                                      "description": "Name of representative.  Can be organization or individual name.",
                                      "type": "string",
                                      "example": "Some Great Organization"
                                    },
                                    "phone_number": {
                                      "description": "Phone number of representative. Can be organization or individual phone number.",
                                      "type": "string",
                                      "example": "555-555-5555"
                                    }
                                  }
                                }
                              }
                            },
                            "previous_poa": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Current or Previous Power of Attorney Code submitted for Veteran"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "POA not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/2122/validate": {
      "post": {
        "summary": "21-22 POA form submission test run.",
        "deprecated": true,
        "tags": [
          "Power of Attorney"
        ],
        "operationId": "validate2122poa",
        "security": [
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Test to make sure the form submission works with your parameters.\n",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Veteran SSN if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-First-Name",
            "required": false,
            "description": "Veteran first name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Last-Name",
            "required": false,
            "description": "Veteran last name if consumer is representative",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-VA-Birth-Date",
            "required": false,
            "description": "Veteran birthdate if consumer is representative",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "2122 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "powerOfAttorneyValidation",
                    "attributes": {
                      "status": "valid"
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Required by JSON API standard"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Says if the power of attorney is pending, submitted, updated or errored",
                              "enum": [
                                "valid"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized",
                      "code": "401",
                      "status": "401"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail",
                          "code",
                          "status"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "code": {
                            "type": "string",
                            "description": "HTTP error code"
                          },
                          "status": {
                            "type": "string",
                            "description": "HTTP error code"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": 422,
                      "detail": "The property / did not contain the required key serviceOrganization",
                      "source": "/"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "status",
                          "detail",
                          "source"
                        ],
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "HTTP error code"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": [
                              "string",
                              "boolean"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "example": {
                      "type": "form/21-22",
                      "attributes": {
                        "serviceOrganization": {
                          "poaCode": "A1Q"
                        }
                      }
                    },
                    "properties": {
                      "attributes": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "description": "Form 2122 Schema",
                        "type": "object",
                        "required": [
                          "serviceOrganization"
                        ],
                        "properties": {
                          "veteran": {
                            "type": "object",
                            "required": [
                              "address",
                              "phone",
                              "email"
                            ],
                            "properties": {
                              "address": {
                                "type": "object",
                                "required": [
                                  "numberAndStreet",
                                  "city",
                                  "country",
                                  "zipFirstFive"
                                ],
                                "properties": {
                                  "numberAndStreet": {
                                    "description": "Street address with number and name.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20
                                  },
                                  "aptUnitNumber": {
                                    "type": "integer"
                                  },
                                  "city": {
                                    "description": "City for the address.",
                                    "type": "string",
                                    "example": "Portland"
                                  },
                                  "state": {
                                    "description": "State for the address.",
                                    "type": "string",
                                    "example": "OR"
                                  },
                                  "country": {
                                    "description": "Country of the address.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "phone": {
                                "$comment": "the phone fields must not exceed 20 chars, when concatenated",
                                "type": "object",
                                "required": [
                                  "areaCode",
                                  "phoneNumber"
                                ],
                                "properties": {
                                  "countryCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$"
                                  },
                                  "areaCode": {
                                    "description": "Area code of the phone number.",
                                    "type": "string",
                                    "pattern": "^[2-9][0-9]{2}$",
                                    "example": "555"
                                  },
                                  "phoneNumber": {
                                    "description": "Phone number.",
                                    "type": "string",
                                    "pattern": "^[0-9]{1,14}$",
                                    "example": "555-5555"
                                  },
                                  "phoneNumberExt": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{1,10}$"
                                  }
                                }
                              },
                              "email": {
                                "description": "Email address of the veteran.",
                                "type": "string",
                                "pattern": ".@.",
                                "maxLength": 61,
                                "example": "veteran@example.com"
                              },
                              "serviceBranch": {
                                "description": "Service Branch for the veteran.",
                                "type": "string",
                                "enum": [
                                  "AIR FORCE",
                                  "ARMY",
                                  "COAST GUARD",
                                  "MARINE CORPS",
                                  "NAVY",
                                  "OTHER"
                                ],
                                "example": "ARMY"
                              }
                            }
                          },
                          "claimant": {
                            "type": "object",
                            "required": [
                              "firstName",
                              "lastName",
                              "address",
                              "phone",
                              "email",
                              "relationship"
                            ],
                            "properties": {
                              "firstName": {
                                "description": "First name of Claimant.",
                                "type": "string",
                                "example": "John"
                              },
                              "middleInitial": {
                                "description": "Middle initial of Claimant.",
                                "type": "string",
                                "example": "M"
                              },
                              "lastName": {
                                "description": "Last name of Claimant.",
                                "type": "string",
                                "example": "Dow"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "numberAndStreet",
                                  "city",
                                  "country",
                                  "zipFirstFive"
                                ],
                                "properties": {
                                  "numberAndStreet": {
                                    "description": "Street address with number and name.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20
                                  },
                                  "aptUnitNumber": {
                                    "type": "integer"
                                  },
                                  "city": {
                                    "description": "City for the address.",
                                    "type": "string",
                                    "example": "Portland"
                                  },
                                  "state": {
                                    "description": "State for the address.",
                                    "type": "string",
                                    "example": "OR"
                                  },
                                  "country": {
                                    "description": "Country of the address.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "phone": {
                                "$comment": "the phone fields must not exceed 20 chars, when concatenated",
                                "type": "object",
                                "required": [
                                  "areaCode",
                                  "phoneNumber"
                                ],
                                "properties": {
                                  "countryCode": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$"
                                  },
                                  "areaCode": {
                                    "description": "Area code of the phone number.",
                                    "type": "string",
                                    "pattern": "^[2-9][0-9]{2}$",
                                    "example": "555"
                                  },
                                  "phoneNumber": {
                                    "description": "Phone number.",
                                    "type": "string",
                                    "pattern": "^[0-9]{1,14}$",
                                    "example": "555-5555"
                                  },
                                  "phoneNumberExt": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{1,10}$"
                                  }
                                }
                              },
                              "email": {
                                "description": "Email address of the claimant.",
                                "type": "string",
                                "pattern": ".@.",
                                "maxLength": 61,
                                "example": "claimant@example.com"
                              },
                              "relationship": {
                                "description": "Relationship of claimant to the veteran.",
                                "type": "string",
                                "example": "Spouse"
                              }
                            }
                          },
                          "serviceOrganization": {
                            "description": "Details of the Service Organization representing the veteran.",
                            "type": "object",
                            "required": [
                              "poaCode"
                            ],
                            "properties": {
                              "poaCode": {
                                "description": "The POA code of the organization.",
                                "type": "string",
                                "example": "A1Q"
                              },
                              "organizationName": {
                                "description": "Name of the service organization.",
                                "type": "string",
                                "example": "I help vets LLC."
                              },
                              "firstName": {
                                "description": "First Name of the representative.",
                                "type": "string",
                                "example": "John"
                              },
                              "lastName": {
                                "description": "Last Name of the representative",
                                "type": "string",
                                "example": "Doe"
                              },
                              "jobTitle": {
                                "description": "Job title of the representative.",
                                "type": "string",
                                "example": "Veteran Service representative"
                              },
                              "address": {
                                "type": "object",
                                "required": [
                                  "numberAndStreet",
                                  "city",
                                  "country",
                                  "zipFirstFive"
                                ],
                                "properties": {
                                  "numberAndStreet": {
                                    "description": "Street address with number and name.",
                                    "type": "string",
                                    "pattern": "^([-a-zA-Z0-9'.,&#]([-a-zA-Z0-9'.,&# ])?)+$",
                                    "maxLength": 20
                                  },
                                  "aptUnitNumber": {
                                    "type": "integer"
                                  },
                                  "city": {
                                    "description": "City for the address.",
                                    "type": "string",
                                    "example": "Portland"
                                  },
                                  "state": {
                                    "description": "State for the address.",
                                    "type": "string",
                                    "example": "OR"
                                  },
                                  "country": {
                                    "description": "Country of the address.",
                                    "type": "string",
                                    "example": "USA"
                                  },
                                  "zipFirstFive": {
                                    "description": "Zipcode (First 5 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{5}?$",
                                    "example": "12345"
                                  },
                                  "zipLastFour": {
                                    "description": "Zipcode (Last 4 digits) of the address.",
                                    "type": "string",
                                    "pattern": "^\\d{4}?$",
                                    "example": "6789"
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "email": {
                                "description": "Email address of the service organization or representative.",
                                "type": "string",
                                "pattern": ".@.",
                                "maxLength": 61,
                                "example": "veteran_representative@example.com"
                              },
                              "appointmentDate": {
                                "description": "Date of appointment with Veteran.",
                                "type": "string",
                                "pattern": "^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$"
                              }
                            }
                          },
                          "recordConsent": {
                            "description": "AUTHORIZATION FOR REPRESENTATIVE'S ACCESS TO RECORDS PROTECTED BY SECTION 7332, TITLE 38, U.S.C.",
                            "type": "boolean"
                          },
                          "consentLimits": {
                            "description": "Consent in Item 19 for the disclosure of records relating to treatment for drug abuse, alcoholism or alcohol abuse, infection with the human immunodeficiency virus (HIV), or sickle cell anemia is limited as follows.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "DRUG ABUSE",
                                "ALCOHOLISM",
                                "HIV",
                                "SICKLE CELL"
                              ]
                            },
                            "example": "DRUG ABUSE"
                          },
                          "consentAddressChange": {
                            "description": "AUTHORIZATION FOR REPRESENTATIVE TO ACT ON CLAIMANT'S BEHALF TO CHANGE CLAIMANT'S ADDRESS.",
                            "type": "boolean"
                          },
                          "signatures": {
                            "type": "object",
                            "required": [
                              "veteran",
                              "representative"
                            ],
                            "properties": {
                              "veteran": {
                                "description": "Base64 encoded png image of the veterans signature.",
                                "title": "Signature of the Veteran",
                                "type": "string"
                              },
                              "representative": {
                                "description": "Base64 encoded png image of the representative signature.",
                                "title": "Signature of the Veteran Representative",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "basePath": "/services/claims/v1",
  "servers": [
    {
      "url": "https://sandbox-api.va.gov/services/claims/{version}",
      "description": "VA.gov API sandbox environment",
      "variables": {
        "version": {
          "default": "v1"
        }
      }
    },
    {
      "url": "https://api.va.gov/services/claims/{version}",
      "description": "VA.gov API production environment",
      "variables": {
        "version": {
          "default": "v1"
        }
      }
    }
  ]
}