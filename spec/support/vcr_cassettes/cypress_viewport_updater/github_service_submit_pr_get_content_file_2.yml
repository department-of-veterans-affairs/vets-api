---
http_interactions:
- request:
    method: get
    uri: https://api.github.com/repos/department-of-veterans-affairs/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/vnd.github.v3+json
      User-Agent:
      - Octokit Ruby Gem 4.21.0
      Content-Type:
      - application/json
      Authorization:
      - removed
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - GitHub.com
      Date:
      - Wed, 31 Aug 2022 15:11:30 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Cache-Control:
      - private, max-age=60, s-maxage=60
      Vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP
      - Accept-Encoding, Accept, X-Requested-With
      Etag:
      - W/"f7d5583af84b58b7eb45704e602fcce862482483"
      Last-Modified:
      - Wed, 31 Aug 2022 14:19:05 GMT
      X-Github-Media-Type:
      - github.v3; format=json
      X-Ratelimit-Limit:
      - '15000'
      X-Ratelimit-Remaining:
      - '14990'
      X-Ratelimit-Reset:
      - '1661962055'
      X-Ratelimit-Used:
      - '10'
      X-Ratelimit-Resource:
      - core
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - '0'
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Content-Security-Policy:
      - default-src 'none'
      X-Github-Request-Id:
      - F1B5:19B4:9206B9:1AB95A4:630F7A21
    body:
      encoding: ASCII-8BIT
      string: '{"name":"viewportPreset.js","path":"src/platform/testing/e2e/cypress/support/commands/viewportPreset.js","sha":"f7d5583af84b58b7eb45704e602fcce862482483","size":3384,"url":"https://api.github.com/repos/department-of-veterans-affairs/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js?ref=main","html_url":"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js","git_url":"https://api.github.com/repos/department-of-veterans-affairs/vets-website/git/blobs/f7d5583af84b58b7eb45704e602fcce862482483","download_url":"https://raw.githubusercontent.com/department-of-veterans-affairs/vets-website/main/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js","type":"file","content":"Y29uc3QgcHJlc2V0cyA9IHsKICAvLyBUb3AgbW9iaWxlIHByZXNldHMgYnkg\ndHJhZmZpYyBwZXJjZW50YWdlLCBkZXNjZW5kaW5nCiAgJ3ZhLXRvcC1tb2Jp\nbGUtMSc6IHsgd2lkdGg6IDQxNCwgaGVpZ2h0OiA4OTYgfSwKICAndmEtdG9w\nLW1vYmlsZS0yJzogeyB3aWR0aDogMzkwLCBoZWlnaHQ6IDg0NCB9LAogICd2\nYS10b3AtbW9iaWxlLTMnOiB7IHdpZHRoOiA0MjgsIGhlaWdodDogOTI2IH0s\nCiAgJ3ZhLXRvcC1tb2JpbGUtNCc6IHsgd2lkdGg6IDM3NSwgaGVpZ2h0OiA4\nMTIgfSwKICAndmEtdG9wLW1vYmlsZS01JzogeyB3aWR0aDogMzc1LCBoZWln\naHQ6IDY2NyB9LAogIC8vIFRvcCB0YWJsZXQgcHJlc2V0cyBieSB0cmFmZmlj\nIHBlcmNlbnRhZ2UsIGRlc2NlbmRpbmcKICAndmEtdG9wLXRhYmxldC0xJzog\neyB3aWR0aDogNzY4LCBoZWlnaHQ6IDEwMjQgfSwKICAndmEtdG9wLXRhYmxl\ndC0yJzogeyB3aWR0aDogODAwLCBoZWlnaHQ6IDEyODAgfSwKICAndmEtdG9w\nLXRhYmxldC0zJzogeyB3aWR0aDogNjAxLCBoZWlnaHQ6IDk2MiB9LAogICd2\nYS10b3AtdGFibGV0LTQnOiB7IHdpZHRoOiA4MTAsIGhlaWdodDogMTA4MCB9\nLAogICd2YS10b3AtdGFibGV0LTUnOiB7IHdpZHRoOiA1MzQsIGhlaWdodDog\nODU0IH0sCiAgLy8gVG9wIGRlc2t0b3AgcHJlc2V0cyBieSB0cmFmZmljIHBl\ncmNlbnRhZ2UsIGRlc2NlbmRpbmcKICAndmEtdG9wLWRlc2t0b3AtMSc6IHsg\nd2lkdGg6IDE5MjAsIGhlaWdodDogMTA4MCB9LAogICd2YS10b3AtZGVza3Rv\ncC0yJzogeyB3aWR0aDogMTM2NiwgaGVpZ2h0OiA3NjggfSwKICAndmEtdG9w\nLWRlc2t0b3AtMyc6IHsgd2lkdGg6IDE1MzYsIGhlaWdodDogODY0IH0sCiAg\nJ3ZhLXRvcC1kZXNrdG9wLTQnOiB7IHdpZHRoOiAxNDQwLCBoZWlnaHQ6IDkw\nMCB9LAogICd2YS10b3AtZGVza3RvcC01JzogeyB3aWR0aDogMTI4MCwgaGVp\nZ2h0OiA3MjAgfSwKfTsKCmNvbnN0IGlzVmFsaWRQcmVzZXQgPSBwcmVzZXQg\nPT4gcHJlc2V0c1twcmVzZXRdICE9PSB1bmRlZmluZWQ7Cgpjb25zdCBpc1Zh\nbGlkT3JpZW50YXRpb24gPSBvcmllbnRhdGlvbiA9PiB7CiAgcmV0dXJuIG9y\naWVudGF0aW9uID09PSAncG9ydHJhaXQnIHx8IG9yaWVudGF0aW9uID09PSAn\nbGFuZHNjYXBlJzsKfTsKCmNvbnN0IGlzVmFsaWRPcHRpb25zID0gb3B0aW9u\ncyA9PiB7CiAgcmV0dXJuICgKICAgICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29i\namVjdCcgJiYKICAgICAgb3B0aW9ucyAhPT0gbnVsbCAmJgogICAgICBvcHRp\nb25zLmxvZyAmJgogICAgICBvcHRpb25zLmxvZyA9PT0gdHJ1ZSkgfHwKICAg\nIG9wdGlvbnMubG9nID09PSBmYWxzZQogICk7Cn07Cgpjb25zdCBwcmVzZXRF\ncnJvciA9ICJwcmVzZXQgYXJndW1lbnQgaXMgaW52YWxpZCBiZWNhdXNlIHBy\nZXNldCBkb2Vzbid0IGV4aXN0IjsKCmNvbnN0IG9yaWVudGF0aW9uRXJyb3Ig\nPQogICJvcmllbnRhdGlvbiBhcmd1bWVudCBtdXN0IGJlICdwb3J0cmFpdCcg\nb3IgJ2xhbmRzY2FwZSciOwoKY29uc3Qgb3B0aW9uc0Vycm9yID0KICAib3B0\naW9ucyBhcmd1bWVudCBtdXN0IGJlIGFuIG9iamVjdCB3aXRoIGEgJ2xvZycg\nc2V0IHRvIGEgYm9vbGVhbiI7Cgpjb25zdCBmb3JtYXRFcnJvcnMgPSBlcnJv\ncnMgPT4gZXJyb3JzLm1hcChlID0+IGBcbiogJHtlfWApOwoKY29uc3Qgdmll\nd3BvcnRQcmVzZXRIZWxwZXIgPSAocHJlc2V0LCBvcmllbnRhdGlvbiwgb3B0\naW9ucykgPT4gewogIGlmICgKICAgIGlzVmFsaWRQcmVzZXQocHJlc2V0KSAm\nJgogICAgaXNWYWxpZE9yaWVudGF0aW9uKG9yaWVudGF0aW9uKSAmJgogICAg\naXNWYWxpZE9wdGlvbnMob3B0aW9ucykKICApIHsKICAgIGNvbnN0IHsgd2lk\ndGgsIGhlaWdodCB9ID0gcHJlc2V0c1twcmVzZXRdOwogICAgb3JpZW50YXRp\nb24gPT09ICdwb3J0cmFpdCcKICAgICAgPyBjeS52aWV3cG9ydCh3aWR0aCwg\naGVpZ2h0LCBvcHRpb25zKQogICAgICA6IGN5LnZpZXdwb3J0KGhlaWdodCwg\nd2lkdGgsIG9wdGlvbnMpOwogIH0gZWxzZSBpZiAoCiAgICAhaXNWYWxpZFBy\nZXNldChwcmVzZXQpICYmCiAgICAhaXNWYWxpZE9yaWVudGF0aW9uKG9yaWVu\ndGF0aW9uKSAmJgogICAgIWlzVmFsaWRPcHRpb25zKG9wdGlvbnMpCiAgKSB7\nCiAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgIGZvcm1hdEVycm9ycyhbcHJl\nc2V0RXJyb3IsIG9yaWVudGF0aW9uRXJyb3IsIG9wdGlvbnNFcnJvcl0pLAog\nICAgKTsKICB9IGVsc2UgaWYgKGlzVmFsaWRQcmVzZXQocHJlc2V0KSAmJiBp\nc1ZhbGlkT3JpZW50YXRpb24ob3JpZW50YXRpb24pKSB7CiAgICB0aHJvdyBu\nZXcgRXJyb3IoZm9ybWF0RXJyb3JzKFtvcHRpb25zRXJyb3JdKSk7CiAgfSBl\nbHNlIGlmIChpc1ZhbGlkT3JpZW50YXRpb24ob3JpZW50YXRpb24pICYmIGlz\nVmFsaWRPcHRpb25zKG9wdGlvbnMpKSB7CiAgICB0aHJvdyBuZXcgRXJyb3Io\nZm9ybWF0RXJyb3JzKFtwcmVzZXRFcnJvcl0pKTsKICB9IGVsc2UgaWYgKGlz\nVmFsaWRQcmVzZXQocHJlc2V0KSAmJiBpc1ZhbGlkT3B0aW9ucyhvcHRpb25z\nKSkgewogICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdEVycm9ycyhbb3JpZW50\nYXRpb25FcnJvcl0pKTsKICB9IGVsc2UgaWYgKGlzVmFsaWRQcmVzZXQocHJl\nc2V0KSkgewogICAgdGhyb3cgbmV3IEVycm9yKGZvcm1hdEVycm9ycyhbb3Jp\nZW50YXRpb25FcnJvciwgb3B0aW9uc0Vycm9yXSkpOwogIH0gZWxzZSBpZiAo\naXNWYWxpZE9yaWVudGF0aW9uKG9yaWVudGF0aW9uKSkgewogICAgdGhyb3cg\nbmV3IEVycm9yKGZvcm1hdEVycm9ycyhbcHJlc2V0RXJyb3IsIG9wdGlvbnNF\ncnJvcl0pKTsKICB9IGVsc2UgewogICAgdGhyb3cgbmV3IEVycm9yKGZvcm1h\ndEVycm9ycyhbcHJlc2V0RXJyb3IsIG9yaWVudGF0aW9uRXJyb3JdKSk7CiAg\nfQp9OwoKLyoqCiAqIFNldHMgdGhlIHZpZXdwb3J0IGJ5IHByZXNldCBuYW1l\nLgogKiBAcGFyYW0gIHtTdHJpbmd9IHByZXNldCAgICAgICBUaGUgcHJlc2V0\nIG5hbWUKICogQHBhcmFtICB7U3RyaW5nfSBvcmllbnRhdGlvbiAgJ3BvcnRy\nYWl0JyBvciAnbGFuZHNjYXBlJywgZGVmYXVsdHMgdG8gJ3BvcnRyYWl0Jwog\nKiBAcGFyYW0gIHtPYmplY3R9IG9wdGlvbnMgICAgICAnbG9nJyBwcm9wZXJ0\neSBpcyBzZXQgdG8gYSBib29sZWFuLCBkZWZhdWx0cyB0byB0cnVlCiAqLwpD\neXByZXNzLkNvbW1hbmRzLmFkZCgKICAndmlld3BvcnRQcmVzZXQnLAogIChw\ncmVzZXQsIG9yaWVudGF0aW9uID0gJ3BvcnRyYWl0Jywgb3B0aW9ucyA9IHsg\nbG9nOiB0cnVlIH0pID0+IHsKICAgIHRyeSB7CiAgICAgIHZpZXdwb3J0UHJl\nc2V0SGVscGVyKHByZXNldCwgb3JpZW50YXRpb24sIG9wdGlvbnMpOwogICAg\nfSBjYXRjaCAoZSkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoZSk7CiAgICB9\nCiAgfSwKKTsK\n","encoding":"base64","_links":{"self":"https://api.github.com/repos/department-of-veterans-affairs/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js?ref=main","git":"https://api.github.com/repos/department-of-veterans-affairs/vets-website/git/blobs/f7d5583af84b58b7eb45704e602fcce862482483","html":"https://github.com/department-of-veterans-affairs/vets-website/blob/main/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js"}}'
  recorded_at: Wed, 31 Aug 2022 15:11:29 GMT
- request:
    method: get
    uri: https://api.github.com/repos/department-of-veterans-affairs/vets-website/contents/src/platform/testing/e2e/cypress/support/commands/viewportPreset.js
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/vnd.github.V3.raw
      User-Agent:
      - Octokit Ruby Gem 4.21.0
      Content-Type:
      - application/json
      Authorization:
      - removed
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - GitHub.com
      Date:
      - Wed, 31 Aug 2022 15:11:30 GMT
      Content-Type:
      - application/vnd.github.V3.raw; charset=utf-8
      Content-Length:
      - '3384'
      Cache-Control:
      - private, max-age=60, s-maxage=60
      Vary:
      - Accept, Authorization, Cookie, X-GitHub-OTP
      - Accept-Encoding, Accept, X-Requested-With
      Etag:
      - '"f7d5583af84b58b7eb45704e602fcce862482483"'
      Last-Modified:
      - Wed, 31 Aug 2022 14:19:05 GMT
      X-Github-Media-Type:
      - github.v3; param=V3.raw
      X-Ratelimit-Limit:
      - '15000'
      X-Ratelimit-Remaining:
      - '14989'
      X-Ratelimit-Reset:
      - '1661962055'
      X-Ratelimit-Used:
      - '11'
      X-Ratelimit-Resource:
      - core
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      Access-Control-Allow-Origin:
      - "*"
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      X-Frame-Options:
      - deny
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - '0'
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Content-Security-Policy:
      - default-src 'none'
      X-Github-Request-Id:
      - F1B6:0DF5:752642:10FB430:630F7A22
    body:
      encoding: UTF-8
      string: |
        const presets = {
          // Top mobile presets by traffic percentage, descending
          'va-top-mobile-1': { width: 414, height: 896 },
          'va-top-mobile-2': { width: 390, height: 844 },
          'va-top-mobile-3': { width: 428, height: 926 },
          'va-top-mobile-4': { width: 375, height: 812 },
          'va-top-mobile-5': { width: 375, height: 667 },
          // Top tablet presets by traffic percentage, descending
          'va-top-tablet-1': { width: 768, height: 1024 },
          'va-top-tablet-2': { width: 800, height: 1280 },
          'va-top-tablet-3': { width: 601, height: 962 },
          'va-top-tablet-4': { width: 810, height: 1080 },
          'va-top-tablet-5': { width: 534, height: 854 },
          // Top desktop presets by traffic percentage, descending
          'va-top-desktop-1': { width: 1920, height: 1080 },
          'va-top-desktop-2': { width: 1366, height: 768 },
          'va-top-desktop-3': { width: 1536, height: 864 },
          'va-top-desktop-4': { width: 1440, height: 900 },
          'va-top-desktop-5': { width: 1280, height: 720 },
        };

        const isValidPreset = preset => presets[preset] !== undefined;

        const isValidOrientation = orientation => {
          return orientation === 'portrait' || orientation === 'landscape';
        };

        const isValidOptions = options => {
          return (
            (typeof options === 'object' &&
              options !== null &&
              options.log &&
              options.log === true) ||
            options.log === false
          );
        };

        const presetError = "preset argument is invalid because preset doesn't exist";

        const orientationError =
          "orientation argument must be 'portrait' or 'landscape'";

        const optionsError =
          "options argument must be an object with a 'log' set to a boolean";

        const formatErrors = errors => errors.map(e => `\n* ${e}`);

        const viewportPresetHelper = (preset, orientation, options) => {
          if (
            isValidPreset(preset) &&
            isValidOrientation(orientation) &&
            isValidOptions(options)
          ) {
            const { width, height } = presets[preset];
            orientation === 'portrait'
              ? cy.viewport(width, height, options)
              : cy.viewport(height, width, options);
          } else if (
            !isValidPreset(preset) &&
            !isValidOrientation(orientation) &&
            !isValidOptions(options)
          ) {
            throw new Error(
              formatErrors([presetError, orientationError, optionsError]),
            );
          } else if (isValidPreset(preset) && isValidOrientation(orientation)) {
            throw new Error(formatErrors([optionsError]));
          } else if (isValidOrientation(orientation) && isValidOptions(options)) {
            throw new Error(formatErrors([presetError]));
          } else if (isValidPreset(preset) && isValidOptions(options)) {
            throw new Error(formatErrors([orientationError]));
          } else if (isValidPreset(preset)) {
            throw new Error(formatErrors([orientationError, optionsError]));
          } else if (isValidOrientation(orientation)) {
            throw new Error(formatErrors([presetError, optionsError]));
          } else {
            throw new Error(formatErrors([presetError, orientationError]));
          }
        };

        /**
         * Sets the viewport by preset name.
         * @param  {String} preset       The preset name
         * @param  {String} orientation  'portrait' or 'landscape', defaults to 'portrait'
         * @param  {Object} options      'log' property is set to a boolean, defaults to true
         */
        Cypress.Commands.add(
          'viewportPreset',
          (preset, orientation = 'portrait', options = { log: true }) => {
            try {
              viewportPresetHelper(preset, orientation, options);
            } catch (e) {
              throw new Error(e);
            }
          },
        );
  recorded_at: Wed, 31 Aug 2022 15:11:30 GMT
recorded_with: VCR 6.1.0
