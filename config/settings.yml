hostname: 127.0.0.1:3000 # possible fallback for unsafe request.host

vsp_environment: localhost

virtual_hosts: ["127.0.0.1", "localhost"] # Safe host names

# For CORS requests; separate multiple origins with a comma
web_origin: http://localhost:3000,http://localhost:3001,http://127.0.0.1:3000,http://127.0.0.1:3001,null
web_origin_regex: \Ahttps?:\/\/www\.va\.gov\z

logingov:
  client_id: https://sqa.eauth.va.gov/isam/sps/saml20sp/saml20
  redirect_uri: http://localhost:3000/v0/sign_in/callback
  logout_redirect_uri: http://localhost:3000/v0/sign_in/logingov_logout_proxy
  client_cert_path: spec/fixtures/sign_in/oauth.crt
  client_key_path: spec/fixtures/sign_in/oauth.key
  oauth_url: https://idp.int.identitysandbox.gov
  oauth_public_key: spec/fixtures/logingov/logingov_oauth_pub.pem

idme:
  client_id: ef7f1237ed3c396e4b4a2b04b608a7b1
  client_secret: ae657fd2b253d17be7b48ecdb39d7b34
  redirect_uri: http://localhost:3000/v0/sign_in/callback
  client_cert_path: spec/fixtures/sign_in/oauth.crt
  client_key_path: spec/fixtures/sign_in/oauth.key
  oauth_url: https://api.idmelabs.com

map_services:
  chatbot_client_id: 2bb9803acfc3
  sign_up_service_client_id: c7d6e0fc9a39
  check_in_client_id: bc75b71c7e67
  appointments_client_id: 74b3145e1354555e
  oauth_url: https://veteran.apps-staging.va.gov
  client_cert_path: spec/fixtures/map/oauth.crt
  client_key_path: spec/fixtures/map/oauth.key
  sign_up_service_url: https://cerner.apps-staging.va.gov
  sign_up_service_provisioning_api_key: abcd1234
  secure_token_service:
    mock: true
  sign_up_service:
    mock: true

# Settings for new SAML authentication with SSOe
saml_ssoe:
  idp_metadata_file: config/ssoe_idp_int_metadata_isam.xml
  cert_path: ~
  cert_new_path: ~
  key_path: ~
  issuer: https://ssoe-sp-localhost.va.gov
  callback_url: http://localhost:3000/v1/sessions/callback
  logout_url: https://int.eauth.va.gov/slo/globallogout
  logout_app_key: https://ssoe-sp-dev.va.gov
  tou_decline_logout_app_key: https://dev-api.va.gov/agreements_declined
  request_signing: false
  relay: ~
  response_signing: false
  response_encryption: false
  identity_slack_webhook: ~
  idp_sso_service_binding: "urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"

ssoe_eauth_cookie:
  name: vagov_saml_request_localhost
  domain: localhost
  secure: false

session_cookie:
  secure: false

sign_in:
  jwt_encode_key: 'spec/fixtures/sign_in/privatekey.pem'
  jwt_old_encode_key: 'spec/fixtures/sign_in/privatekey_old.pem'
  cookies_secure: false
  info_cookie_domain: localhost
  auto_uplevel: true
  mock_auth_url: http://localhost:3000/mocked_authentication/profiles
  mock_redirect_uri: http://localhost:3000/v0/sign_in/callback
  mockdata_sync_api_key: ~
  vaweb_client_id: vaweb
  vamobile_client_id: vamobile
  arp_client_id: arp
  sts_client:
    base_url: http://localhost:3000
    key_path: spec/fixtures/sign_in/sts_client.pem

terms_of_use:
  current_version: v1
  provisioner_cookie_domain: localhost
  enabled_clients: vaweb, mhv, myvahealth

lockbox:
  master_key: "0d78eaf0e90d4e7b8910c9112e16e66d8b00ec4054a89aa426e32712a13371e9"
  previous_master_key: "a798f118b400a1a7552597cc94f44c577919c76b3d26c1eed8ae0703f4240216"

binaries:
  # you can specify a full path in settings.local.yml if necessary
  pdfinfo: pdfinfo
  pdftk: pdftk
  clamdscan: /usr/bin/clamdscan

clamav:
  mock: false
  # host & port here are only used in development here:
  # config/initializers/clamav.rb
  host: 'clamav'
  port: '3310'

db_encryption_key: f01ff8ebd1a2b053ad697ae1f0d86adb

database_url: postgis:///vets-api
test_database_url: postgis:///vets-api-test

relative_url_root: /

# This is a fake secret key base... not used in any envs
secret_key_base: c1a13acb916e6ebf1d2a93a3924586520508b609e80e048364902cd36ab602c9ec6ddcb47ac66e7903dbc77ae876df5564658a4f786b50497440b0c7dc029361
old_secret_key_base: 8af0fe1e378586520e4324694897eb269bd0fffa1c5be6cc3b4ffb9dbde095d0bef5c7fdab73cd05685d8fe1dd589287d78b38e4de7116fbe14461e414072677

dmc:
  client_id: "0be3d60e3983438199f192b6e723a6f0"
  client_secret: "secret"
  mock_debts: false
  mock_fsr: false
  url: https://internal-dsva-vagov-dev-fwdproxy-1893365470.us-gov-west-1.elb.amazonaws.com:4465/api/v1/digital-services/
  debts_endpoint: debt-letter/get
  fsr_payment_window: 30

mcp:
  vbs_client_key: abcd1234abcd1234abcd1234abcd1234abcd1234
  vbs:
    url: https://fake_url.com:9000
    host: fake_url.com:9000
    base_path: /base/path
    service_name: VBS
    mock: false
    mock_vista: false
    api_key: abcd1234abcd1234abcd1234abcd1234abcd1234
  vbs_v2:
    url: https://fake_url.com:9000
    host: fake_url.com:9000
    base_path: /base/path
    service_name: VBS
    mock: false
    mock_vista: false
    api_key: abcd1234abcd1234abcd1234abcd1234abcd1234
  notifications:
    job_interval: 10
    batch_size: 10

fsr:
  prefill: true

review_instance_slug: ~

sidekiq_admin_panel: false

salesforce-gibft:
  url: "https://va--rdtcddev.cs33.my.salesforce.com/"

salesforce-carma:
  mock: true
  url: "https://fake-carma.salesforce.com"
  consumer_key: 12345ABC.QQ_1234BBfake
  signing_key_path: "spec/fixtures/carma/privatekey.pem" # A dummy private key used for test suite
  username: fake-user@va.gov.carmafake

salesforce:
  env: dev

form_10_10cg:
  carma:
    mulesoft:
      mock: false
      host: ~
      client_id: ~
      client_secret: ~
      timeout: 30
      async_timeout: 600
      auth:
        mock: false
        timeout: ~
        token_url: ~
        client_id: ~
        client_secret: ~
  poa:
    s3:
      aws_access_key_id: my-aws-key-id
      aws_secret_access_key: my-aws-access-key
      bucket: my-bucket
      enabled: true
      region: us-gov-west-1

vbs:
  url: https://vbs.example.com/api/v1

# Settings for Education Benefits
edu:
  prefill: true
  sftp:
    host: ~
    pass: ~
    user: ~
    port: ~
    relative_307_path: ~
    relative_351_path: ~
  slack:
    webhook_url: https://example.com
  spool_error:
    emails:
      - Joseph.Preisser@va.gov
      - Shay.Norton-Leonard@va.gov
      - PIERRE.BROWN@va.gov
      - VAVBAHIN/TIMS@vba.va.gov
      - EDUAPPMGMT.VBACO@VA.GOV
      - vfep_support_team@va.gov
      - eugenia.gina.ronat@accenturefederal.com
      - morgan.whaley@accenturefederal.com
      - m.c.shah@accenturefederal.com
      - patrick.arthur@accenturefederal.com
      - adam.freemer@accenturefederal.com
      - dan.brooking@accenturefederal.com
      - sebastian.cooper@accenturefederal.com
      - david.rowley@accenturefederal.com
      - nick.barthelemy@accenturefederal.com
    staging_emails:
  staging_spool_contents:
    emails:
      - noah.stern@va.gov
      - gregg.puhala@va.gov
      - kara.ciprich@va.gov
      - napoleon.kernessant@govcio.com
      - vishnhav.ashok@va.gov
      - donna.saunders@va.gov
      - ariana.adili@govcio.com
      - marelby.hernandez@va.gov
      - nawar.hussein@va.gov
      - engin.akman@va.gov

dependents:
  prefill: true

pension_burial:
  prefill: true
  sftp:
    relative_path: "../VETSGOV_PENSION"

central_mail:
  upload:
    enabled: true
    host: "test2.domaonline.com/EmmsAPI"
    token: "<CENTRAL_MAIL_TOKEN>"

# Settings for BIP Services
bip:
  claims:
    url: "https://claims-uat.dev8.bip.va.gov"
    mock: false

# Settings for VAProfile
vet360:
  url: "https://int.vet360.va.gov"
  contact_information:
    url: "https://qa.vaprofile.va.gov"
    cache_enabled: false
    enabled: true
    timeout: 30
    mock: false
  demographics:
    cache_enabled: false
    enabled: true
    timeout: 30
    mock: true
  military_personnel:
    cache_enabled: false
    enabled: true
    timeout: 30
    mock: false
  veteran_status:
    cache_enabled: true
    enabled: true
    timeout: 30
    mock: false
  address_validation:
    hostname: "sandbox-api.va.gov"
    api_key: "<AV_KEY>"
  profile_information:
    enabled: true
    timeout: 30
    use_mocks: false

# Settings for IHub
ihub:
  url: "https://qacrmdac.np.crm.vrm.vba.va.gov"
  appointments:
    timeout: 30
    mock: true
  in_production: false

# Settings for Medical Devices Ordering Tool
mdot:
  prefill: true
  url: https://internal-dsva-vagov-staging-fwdproxy-1821450725.us-gov-west-1.elb.amazonaws.com:4466
  api_key: abcd1234abcd1234abcd1234abcd1234abcd1234
  mock: false
  enabled: false

# Settings for Decision Reviews
decision_review:
  benchmark_performance: true
  prefill: true
  url: https://sandbox-api.va.gov/services/appeals/v1/decision_reviews
  api_key: abcd1234abcd1234abcd1234abcd1234abcd1234
  mock: false
  pdf_validation:
    enabled: true
    url: https://sandbox-api.va.gov/services/vba_documents/v1
  s3:
    aws_access_key_id: ~
    aws_secret_access_key: ~
    region: region
    bucket: bucket
  v1:
    url: https://sandbox-api.va.gov/services/appeals/v2/decision_reviews

# Settings for modules/dhp_connected_devices
dhp:
  mock: false
  fitbit:
    client_id: ""
    client_secret: ""
    redirect_uri: "http://localhost:3000/dhp_connected_devices/fitbit-callback"
    scope: "heartrate activity nutrition sleep"
    code_challenge: ""
    code_verifier: ""
  s3:
    aws_access_key_id: ""
    aws_secret_access_key: ""
    bucket: ""
    region: "us-gov-west-1"

# Settings for modules/appeals_api
modules_appeals_api:
  token_validation:
    appeals_status:
      api_key: ""
    contestable_issues:
      api_key: ""
    higher_level_reviews:
      api_key: ""
    legacy_appeals:
      api_key: ""
    notice_of_disagreements:
      api_key: ""
    supplemental_claims:
      api_key: ""
  # The token generation values below are only used for development rake tasks.
  token_generation:
    ccg:
      config_uri: "https://dev-api.va.gov/oauth2/appeals/system/v1/.well-known/openid-configuration"
      # Get a client ID by submitting your public jwk here - make sure to check the boxes for the APIs under
      # "Client Credentials Grant APIs": https://developer.va.gov/onboarding/request-sandbox-access
      client_id: ""
      # Absolute path to the private key file matching the jwk:
      private_key_path: ""
    auth:
      config_uri: "https://dev-api.va.gov/oauth2/appeals/v1/.well-known/openid-configuration"
      # Get a client ID/secret by submitting this form - make sure to check the boxes for the APIs under
      # "Authorization Code Flow APIs": https://developer.va.gov/onboarding/request-sandbox-access
      client_id: ""
      client_secret: ""
      redirect_uri: ""
      user_email: ""
      user_password: ""
  slack:
    api_key: ""
    appeals_channel_id: ""
  documentation:
    path_enabled_flag: false
    wip_docs:
      # List of flags to indicate parts of documentation that are still WIP and not ready for production.
      # See the rswag:appeals_api:dev rake task, spec_helper, and DocHelpers#wip_doc_enabled? for usage info to opt-in.
      # NOTE: Do not remove this key even if it's empty.
  legacy_appeals_enabled: true
  reports:
    daily_decision_review:
      enabled: false
    weekly_decision_review:
      enabled: false
    daily_error:
      enabled: false
    weekly_error:
      enabled: false
  schema_dir: config/schemas
  evidence_submissions:
    location:
      prefix: http://some.fakesite.com/path
      replacement: http://another.fakesite.com/rewrittenpath
  s3:
    uploads_enabled: false
    aws_access_key_id: "aws_access_key_id"
    aws_secret_access_key: "aws_secret_access_key"
    region: "region"
    bucket: "bucket"
  status_simulation_enabled: false

onsite_notifications:
  public_key: ~
  template_ids:
    - "f9947b27-df3b-4b09-875c-7f76594d766d" # staging    - debt notification
    - "7efc2b8b-e59a-4571-a2ff-0fd70253e973" # production - debt notification

vre_counseling:
  prefill: true

vre_readiness:
  prefill: true

coe:
  prefill: true

adapted_housing:
  prefill: true

intent_to_file:
  prefill: true

ivc_champva:
  prefill: true

form_upload_flow:
  prefill: true

# Settings for Expiry Scanner
expiry_scanner:
  slack:
    channel_id: ~
  directories: ~

argocd:
  slack:
    api_key: ~

# Settings for Accredited Rep Management
acc_rep_management:
  prefill: true

# Settings for EVSS
evss:
  prefill: true
  url: https://csraciapp6.evss.srarad.com
  service_name: "wss-form526-services-web"
  alternate_service_name: "wss-form526-services-web-v2"
  cert_path: ~
  key_path: ~
  root_cert_path: ~
  versions:
    claims: 3.6
    common: 11.6
    documents: 3.7
  s3:
    uploads_enabled: false
    aws_access_key_id: EVSS_S3_AWS_ACCESS_KEY_ID_XYZ
    aws_secret_access_key: EVSS_S3_AWS_SECRET_ACCESS_KEY_XYZ
    bucket: evss_s3_bucket
    region: evss_s3_region
  disability_compensation_form:
    timeout: 55 # ~1 minute
    submit_timeout: 355 # ~6 minutes
  dvp:
    url: http://fake.dvp-docker-container
  letters:
    url: https://csraciapp6.evss.srarad.com
    timeout: 55
  ppiu:
    timeout: 30
  pciu:
    timeout: 30
  pciu_address:
    timeout: 30
  mock_claims: false
  mock_common_service: true
  mock_disabilities_form: true
  mock_gi_bill_status: false
  mock_itf: true
  mock_letters: false
  mock_pciu: true
  mock_pciu_address: false
  mock_ppiu: true
  mock_reference: true
  mock_vso_search: false
  aws:
    url: http://fake.evss-reference-data-service.dev/v1
    cert_path: ~
    key_path: ~
    root_ca: ~
  international_postal_codes: "config/evss/international_postal_codes.json"

# Settings for GI Bill Data Service
gids:
  url: https://dev.va.gov/gids
  open_timeout: 1
  read_timeout: 1

mvi_hca:
  url: http://example.com

# Settings for Healthcare Application
# This CA chain is nonsense but allows local development to work with pre-prod environment.
hca:
  prefill: true
  endpoint: https://test-foo.vets.gov
  timeout: 30
  ee:
    endpoint: "http://example.com"
    user: "HCASvcUsr"
    pass: "password"

ppms:
  url: https://some.fakesite.com
  apim_url: https://some.other.fakesite.com
  open_timeout: 15
  read_timeout: 55
  api_keys:
    fakekey: fakevalue

# Settings for MyHealthEVet
mhv:
  # include ranges first, then individual exceptions to the ranges last.
  facility_range: [[358, 718], [720, 740], [742, 758]]
  facility_specific: [["741MM"]] # 741 is excluded, but 741MM is included
  rx:
    host: https://mhv-api.example.com
    app_token: fake-app-token
    collection_caching_enabled: false
    mock: true
  sm:
    host: https://mhv-api.example.com
    app_token: fake-app-token
    mock: true
  bb:
    mock: true
    collection_caching_enabled: true
  account:
    mock: false
  medical_records:
    host: fake-host
    app_token: fake-app-token
    x_auth_key: fake-x-auth-key
  account_creation:
    mock: true
    host: https://apigw-intb.aws.myhealth.va.gov
    access_key: some-access-key
    sts:
      service_account_id: c34b86f2130ff3cd4b1d309bc09d8740
      issuer: http://localhost:3000

# Settings for alternate MHV integration for mobile app
mhv_mobile:
  sm:
    app_token: fake-app-token

# Settings for Master Veteran Index
mvi:
  url: http://ps-dev.commserv.healthevet.va.gov:8110/psim_webservice/IdMWebService
  open_timeout: 15
  timeout: 30
  mock: false
  processing_code: T
  client_cert_path: /fake/client/cert/path
  client_key_path: /fake/client/key/path
  pii_logging: false

caseflow:
  mock: true
  app_token: PUBLICDEMO123
  host: https://dsva-appeals-certification-dev-1895622301.us-gov-west-1.elb.amazonaws.com
  timeout: 119
  # The forwardproxy timeout is 2m so I want something slightly less than that so we don't get the forwardproxy's html
  # response when we're expecting JSON.  Ideally, caseflow would respond quicker but they're still giving good responses
  # in over a minute.

vic:
  url: https://some.fakesite.com
  signing_key_path: /fake/signing/key/path

# Settings for (preneeds) burials.
preneeds:
  host: http://some.fakesite.com
  wsdl: "config/preneeds/wsdl/preneeds.wsdl"

webhooks:
  require_https: true

# Settings for VBA Document upload service module
vba_documents:
  v2_upload_endpoint_enabled: false
  v2_enabled: false
  documentation:
    path_enabled_flag: false
  report_enabled: false
  monthly_report: false
  location:
    prefix: http://some.fakesite.com/path
    replacement: http://another.fakesite.com/rewrittenpath
  s3:
    enabled: false
    aws_access_key_id: "aws_access_key_id"
    aws_secret_access_key: "aws_secret_access_key"
    region: "region"
    bucket: "bucket"
  sns:
    topic_arns:
      - vetsgov-arn
      - vagov-arn
  slack:
    enabled: false
    api_key: ""
    channel_id: ""
    default_alert_email: ""
    in_flight_notification_hung_time_in_days: 14
    renotification_in_minutes: 240
    update_stalled_notification_in_minutes: 180
  webhooks:
    registration_next_run_in_minutes: 15
    registration_max_retries: 3

#Settings for Ask VA Api Module
ask_va_api:
  prefill: true
  crm_api:
    auth_url: https://login.microsoftonline.us
    base_url: https://dev.integration.d365.va.gov
    client_id: client_id
    client_secret: secret
    resource: resource
    veis_api_path: eis/vagov.lob.ava/api
    tenant_id: abcdefgh-1234-5678-12345-11e8b8ce491e
    ocp_apim_subscription_key: subscription_key
    redis_token_expiry: 3540 # 59 minutes
    mock: true
    service_name: VEIS-API
  authentication:
    max_auth_retry_limit: 3
    retry_attempt_expiry: 604800 # 7 Days

#Settings for Claims Api Module
claims_api:
  pdf_generator_526:
    url: ~
    path: '/form-526ez-pdf-generator/v1/forms/'
    content_type: 'application/vnd.api+json'
  report_enabled: false
  audit_enabled: false
  s3:
    enabled: false
    aws_access_key_id: ~
    aws_secret_access_key: ~
    region: ~
    bucket: ~
  disability_claims_mock_override: false
  schema_dir: config/schemas
  slack:
    webhook_url: https://example.com
  claims_error_reporting:
    environment_name: ~
  v2_docs:
    enabled: false
  token_validation:
    api_key:
  benefits_documents:
    auth:
      ccg:
        client_id: ~
        rsa_key: ~
        aud_claim_url: ~
    host: https://sandbox-api.va.gov
    use_mocks: false
  poa_v2:
    disable_jobs: false
  vanotify:
    representative_template_id: ~
    service_organization_template_id: ~
    services:
      lighthouse:
        api_key: ~

connected_apps_api:
  connected_apps:
    url: https://sandbox-api.va.gov/internal/auth/v3/user/connected-apps
    api_key: ~
    revoke_url: https://sandbox-api.va.gov/internal/auth/v3/user/consent
    auth_access_key: ~

authorization_server_scopes_api:
  auth_server:
    url: https://sandbox-api.va.gov/internal/auth/v2/server

redis:
  host: localhost
  port: 6379
  app_data:
    url: redis://localhost:6379
  sidekiq:
    url: redis://localhost:6379
  rails_cache:
    url: redis://localhost:6379

# Settings for GovDelivery (email delivery)
govdelivery:
  staging_service: true
  server: stage-tms.govdelivery.com
  token: ~

# Settings for Education Benefits report uploading
reports:
  send_email: true
  aws:
    access_key_id: ~
    bucket: ~
    region: ~
    secret_access_key: ~
  spool10203_submission:
    emails:
      - Brian.Grubb@va.gov
      - dana.kuykendall@va.gov
      - Jennifer.Waltz2@va.gov
      - Joseph.Preisser@va.gov
      - Joshua.Lashbrook@va.gov
      - kathleen.dalfonso@va.gov
      - kyle.pietrosanto@va.gov
      - lihan@adhocteam.us
      - Lucas.Tickner@va.gov
      - Ricardo.DaSilva@va.gov
      - robert.shinners@va.gov
      - shay.norton@va.gov
      - tammy.hurley1@va.gov
    staging_emails:
      - Brian.Grubb@va.gov
      - Joseph.Preisser@va.gov
      - kyle.pietrosanto@va.gov
      - lihan@adhocteam.us
      - Lucas.Tickner@va.gov
      - Ricardo.DaSilva@va.gov
      - tammy.hurley1@va.gov
      - vfep_support_team@va.gov
      - eugenia.gina.ronat@accenturefederal.com
      - morgan.whaley@accenturefederal.com
      - m.c.shah@accenturefederal.com
      - d.a.barnes@accenturefederal.com
      - jacob.finnern@accenturefederal.com
      - hocine.halli@accenturefederal.com
      - adam.freemer@accenturefederal.com
  spool_submission:
    emails:
      - Brian.Grubb@va.gov
      - dana.kuykendall@va.gov
      - Jennifer.Waltz2@va.gov
      - Joseph.Preisser@va.gov
      - Joshua.Lashbrook@va.gov
      - kathleen.dalfonso@va.gov
      - kyle.pietrosanto@va.gov
      - lihan@adhocteam.us
      - Lucas.Tickner@va.gov
      - Ricardo.DaSilva@va.gov
      - shay.norton@va.gov
      - tammy.hurley1@va.gov
    staging_emails:
      - Brian.Grubb@va.gov
      - Joseph.Preisser@va.gov
      - kyle.pietrosanto@va.gov
      - lihan@adhocteam.us
      - Lucas.Tickner@va.gov
      - Ricardo.DaSilva@va.gov
      - tammy.hurley1@va.gov
      - vfep_support_team@va.gov
      - eugenia.gina.ronat@accenturefederal.com
      - morgan.whaley@accenturefederal.com
      - m.c.shah@accenturefederal.com
      - d.a.barnes@accenturefederal.com
      - jacob.finnern@accenturefederal.com
      - hocine.halli@accenturefederal.com
      - adam.freemer@accenturefederal.com
  year_to_date_report:
    emails:
      - 222A.VBAVACO@va.gov
      - 224B.VBAVACO@va.gov
      - 224C.VBAVACO@va.gov
      - Brandon.Scott2@va.gov
      - Brian.Grubb@va.gov
      - Christina.DiTucci@va.gov
      - EDU.VBAMUS@va.gov
      - John.McNeal@va.gov
      - Joseph.Preisser@va.gov
      - Joshua.Lashbrook@va.gov
      - kathleen.dalfonso@va.gov
      - kyle.pietrosanto@va.gov
      - Lucas.Tickner@va.gov
      - michele.mendola@va.gov
      - Ricardo.DaSilva@va.gov
      - shay.norton@va.gov
      - tammy.hurley1@va.gov
    staging_emails:
      - Brian.Grubb@va.gov
      - Joseph.Preisser@va.gov
      - kyle.pietrosanto@va.gov
      - lee.munson@va.gov
      - lihan@adhocteam.us
      - Lucas.Tickner@va.gov
      - matthew.ziolkowski@va.gov
      - Michael.Johnson19@va.gov
      - patrick.burk@va.gov
      - preston.sanders@va.gov
      - robyn.noles@va.gov
      - Ricardo.DaSilva@va.gov
      - tammy.hurley1@va.gov
      - vfep_support_team@va.gov
      - eugenia.gina.ronat@accenturefederal.com
      - morgan.whaley@accenturefederal.com
      - m.c.shah@accenturefederal.com
      - d.a.barnes@accenturefederal.com
      - jacob.finnern@accenturefederal.com
      - hocine.halli@accenturefederal.com
      - adam.freemer@accenturefederal.com

oidc:
  isolated_audience:
    default: ~
    claims: ~

sentry:
  dsn: ~

iam_ssoe:
  client_cert_path: ~
  client_key_path: ~
  client_id: "Mobile_App_API_Server_LOWERS"
  # oauth (rest) and sts (soap) services are on different hosts
  oauth_url: "https://int.fed.eauth.va.gov:444"
  sts_url: "https://preprod.services.eauth.va.gov:9301"
  timeout: 20

statsd:
  host: ~
  port: ~

shrine:
  claims:
    type: local
    path: claims

# Settings for maintenance window API
# Services should be a map from logical service name to PagerDuty service id
maintenance:
  pagerduty_api_url: https://api.pagerduty.com
  pagerduty_api_token: FAKE
  service_query_prefix: "External: "
  services:
    carma: P6XLE0T
    appeals: P9S4RFU
    arcgis: P45YBFA
    coe: PXXXXXX
    dslogon: P9DJJAV
    es: PH7OPR4
    evss: PZKWB6Y
    global: PLPSIB0
    idme: PVWB4R8
    logingov: P2SHMM9
    mvi: PCIPVGJ
    mhv: PP2ZZ2V
    pega: P3ZJCBK
    search: PRG8HJI
    tims: PUL8OQ4
    vet360: PHVOGQ1
    vetext_vaccine: P9PG8HG
    vic: P7LW3MS
    hcq: PWGA814
  aws:
    access_key_id: ~
    bucket: ~
    region: ~
    secret_access_key: ~

# Note: in addition to enabling / disabling betamocks here, you _must_ also
# change the 'mock' bool for each service you want to mock in this settings file
betamocks:
  enabled: true
  recording: false
  cache_dir: ~
  services_config: config/betamocks/services_config.yml

# Settings for search
search:
  access_key: SEARCH_GOV_ACCESS_KEY
  affiliate: va
  mock_search: false
  url: https://search.usa.gov/api/v2/search/i14y

search_gsa:
  access_key: SEARCH_GOV_ACCESS_KEY
  affiliate: va
  mock_search: false
  url: https://api.gsa.gov/technology/searchgov/v2/results/i14y

# Settings for search-typeahead
search_typeahead:
  api_key: API_GOV_ACCESS_KEY
  name: va
  url: https://api.gsa.gov/technology/searchgov/v1

# Settings for search-click-tracking
search_click_tracking:
  access_key: SEARCH_GOV_ACCESS_KEY
  affiliate: va
  mock: false
  url: https://api.gsa.gov/technology/searchgov/v2

bgs:
  application: ~
  client_station_id: ~
  client_username: ~
  env: ~
  mock_response_location: ~
  mock_responses: ~
  ssl_verify_mode: "peer"
  url: "https://something.fake.va.gov"

directory:
  url: http://example.com/services/apps/v0/
  apikey: fake_apikey
  health_server_id: ~

va_mobile:
  url: "https://veteran.apps.va.gov"
  ppms_base_url: "https://staff.apps.va.gov"
  mock: false
  key_path: /fake/client/key/path
  timeout: 25

vetext:
  url: "https://something.fake.va.gov"
  mock: false
  token: fake_token
  timeout: 15

hqva_mobile:
  url: "https://veteran.apps.va.gov"
  mock: false
  key_path: /app/secret/health-quest.key
  development_key_path: modules/health_quest/config/rsa/sandbox_rsa
  timeout: 15
  facilities:
    url: "https://staging-api.va.gov"
    ids_path: "/facilities_api/v1/va"
  lighthouse:
    url: "https://sandbox-api.va.gov"
    pgd_path: "/services/pgd/v0/r4"
    pgd_token_path: "/oauth2/pgd/v1/token"
    health_api_path: "/services/fhir/v0/r4"
    health_token_path: "/oauth2/health/system/v1/token"
    host: "sandbox-api.va.gov"
    pgd_aud_claim_url: "https://deptva-eval.okta.com/oauth2/aus8x27nv4g4BS01v2p7"
    health_aud_claim_url: "https://deptva-eval.okta.com/oauth2/aus8nm1q0f7VQ0a482p7"
    condition_aud_claim_url: "https://deptva-eval.okta.com/oauth2/aus8nm1q0f7VQ0a482p7/v1/token"
    claim_common_id: "0oabja2lpllERXWxo2p7"
    grant_type: "client_credentials"
    client_assertion_type: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
    redis_session_prefix: "healthquest_lighthouse"
    health_api: "health_api"
    pgd_api: "pgd_api"
    mock: false
    key_path: /app/secret/health-quest.lighthouse.key
    pgd_api_scopes:
      - "launch launch/patient"
      - "patient/Observation.read"
      - "patient/Observation.write"
      - "patient/Questionnaire.read"
      - "patient/Questionnaire.write"
      - "patient/QuestionnaireResponse.read"
      - "patient/QuestionnaireResponse.write"
    health_api_scopes:
      - "launch launch/patient"
      - "patient/Appointment.read"
      - "patient/Location.read"
      - "patient/Organization.read"
      - "patient/Patient.read"
      - "patient/Condition.read"
      - "patient/Observation.read"
      - "patient/Practitioner.read"
      - "patient/Medication.read"
      - "system/Endpoint.read"

# settings va.gov uses related to lighthouse api's
lighthouse:
  auth:
    ccg:
      client_id: ~
      rsa_key: ~
  api_key: fake_key
  benefits_claims:
    host: https://sandbox-api.va.gov
    access_token:
      aud_claim_url: https://deptva-eval.okta.com/oauth2/ausdg7guis2TYDlFe2p7/v1/token
      client_id: ~
      rsa_key: ~
    use_mocks: false
    form526:
      host: https://staging-api.va.gov
      access_token:
        aud_claim_url: https://deptva-eval.okta.com/oauth2/ausdg7guis2TYDlFe2p7/v1/token
        client_id: ~
        rsa_key: ~
      use_mocks: false
  benefits_documents:
    host: https://sandbox-api.va.gov
    access_token:
      aud_claim_url: https://deptva-eval.okta.com/oauth2/ausi3ui83fLa68IJv2p7/v1/token
    use_mocks: false
  benefits_education:
    host: https://sandbox-api.va.gov
    access_token:
      client_id: ~
      rsa_key: ~
      aud_claim_url: https://deptva-eval.okta.com/oauth2/ausln2mo4jCAYRrlR2p7/v1/token
    use_mocks: false
  benefits_intake:
    host: https://sandbox-api.va.gov
    path: /services/vba_documents
    version: v1
    use_mocks: false
    api_key: ~
    report:
      stale_sla: 10 # days
      batch_size: 1000
  letters_generator:
    url: https://sandbox-api.va.gov
    path: /services/va-letter-generator/v1/
    use_mocks: false
    access_token:
      path: oauth2/va-letter-generator/system/v1/token
      client_id: ~
      rsa_key: ~
      aud_claim_url: https://deptva-eval.okta.com/oauth2/ausftw7zk6eHr7gMN2p7/v1/token
  benefits_reference_data:
    url: https://sandbox-api.va.gov
    path: services/benefits-reference-data
    version: v1
  direct_deposit:
    host: https://sandbox-api.va.gov
    access_token:
      aud_claim_url: https://deptva-eval.okta.com/oauth2/ausi0e21hbv5iElEh2p7/v1/token
      client_id: ~
      rsa_key: ~
    use_mocks: false
  veterans_health:
    url: https://sandbox-api.va.gov
    fast_tracker:
      client_assertion_type: "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
      api_scope:
        - "launch"
        - "patient/AllergyIntolerance.read"
        - "patient/DiagnosticReport.read"
        - "patient/Patient.read"
        - "system/Patient.read"
        - "patient/Observation.read"
        - "patient/Practitioner.read"
        - "patient/MedicationRequest.read"
        - "patient/Condition.read"
      aud_claim_url: "https://deptva-eval.okta.com/oauth2/aus8nm1q0f7VQ0a482p7/v1/token"
      client_id: "0oaaxkp0aeXEJkMFw2p7"
      grant_type: "client_credentials"
      api_key: /app/secret/lighthouse_fast_track_api.key
  facilities:
    url: https://sandbox-api.va.gov
    api_key: fake_key
  veteran_verification:
    host: https://staging-api.va.gov
    aud_claim_url: https://deptva-eval.okta.com/oauth2/ausi3u00gw66b9Ojk2p7/v1/token
    use_mocks: false
    form526:
      host: https://staging-api.va.gov
      access_token:
        client_id: ~
        rsa_key: ~
      use_mocks: false
  s3:
    uploads_enabled: false
    bucket: lighthouse_s3_bucket
    region: lighthouse_s3_region

mail_automation:
  url: https://viccs-api-test.ibm-intelligent-automation.com
  endpoint: /mas/api/test/masInsertAndInitiateApcasClaimProcessing
  token_endpoint: /pca/api/test/token
  client_id: va_gov_test
  client_secret: fake_key

forms:
  url: https://sandbox-api.va.gov/services/va_forms/v0/
  mock: false

vbms:
  url: "https://internal-dsva-vagov-dev-fwdproxy-1893365470.us-gov-west-1.elb.amazonaws.com:4449"
  saml: "vetsapi.client.vbms.aide.oit.va.gov.saml-token.xml"
  ca_cert: VBMS-Client-Signing-CA.crt
  cert: vetsapi.client.vbms.aide.oit.va.gov.crt
  client_keyfile: vetsapi.client.vbms.aide.oit.va.gov.p12
  server_cert: vbms.aide.oit.va.gov.crt
  environment_directory: /app/secret
  env: test

vet_verification:
  key_path: modules/veteran_verification/spec/fixtures/verification_test.pem
  mock_bgs: false
  mock_bgs_url: false

github_stats:
  username: github-stats-rake
  token: fake_token

google_analytics:
  url: "https://internal-dsva-vagov-staging-fwdproxy-1821450725.us-gov-west-1.elb.amazonaws.com:4473"
  tracking_id: ~

covid_vaccine:
  allowed_facilities:
    [
      402,
      405,
      436,
      437,
      438,
      442,
      459,
      460,
      463,
      501,
      502,
      503,
      504,
      506,
      508,
      509,
      512,
      515,
      516,
      517,
      518,
      519,
      520,
      521,
      523,
      526,
      528,
      529,
      531,
      534,
      537,
      538,
      539,
      540,
      541,
      542,
      544,
      546,
      548,
      549,
      550,
      552,
      553,
      554,
      556,
      557,
      558,
      561,
      562,
      564,
      565,
      568,
      570,
      573,
      575,
      578,
      580,
      581,
      583,
      585,
      586,
      589,
      590,
      593,
      595,
      596,
      598,
      600,
      603,
      605,
      607,
      608,
      610,
      612,
      613,
      614,
      618,
      619,
      620,
      621,
      623,
      626,
      629,
      630,
      631,
      632,
      635,
      636,
      637,
      640,
      642,
      644,
      646,
      648,
      649,
      650,
      652,
      653,
      654,
      655,
      656,
      657,
      658,
      659,
      660,
      662,
      663,
      664,
      666,
      667,
      668,
      671,
      672,
      673,
      674,
      675,
      676,
      678,
      679,
      687,
      688,
      689,
      691,
      692,
      693,
      695,
      740,
      756,
      757,
    ]
  enrollment_service:
    job_enabled: false
    sftp:
      host: fake_host
      port: ~
      username: fake_username
      password: fake_password

virtual_agent:
  webchat_secret: fake_secret
  webchat_secret_msft: fake_secret
  webchat_secret_nlu: fake_secret
  webchat_pva2_secret: fake_secret
  webchat_root_bot_secret: fake_secret
  lighthouse_api_uri: https://sandbox-api.va.gov/services/appeals/v0/appeals
  lighthouse_api_key: fake_api_key
  cxdw_client_secret: fake_secret
  cxdw_client_id: fake_id
  cxdw_app_uri: fake_app_uri
  cxdw_dataverse_uri: fake_dataverse_uri
  cxdw_table_prefix: fake_table_prefix
  speech_token_request_uri: https://eastus.api.cognitive.microsoft.com/sts/v1.0/issuetoken
  speech_token_subscription_key: fake_speech_token_subscription_key

# Settings for notifications client
vanotify:
  client_url: http://fakeapi.com
  services:
    va_gov:
      api_key: fake_secret
      template_id:
        appoint_a_representative_confirmation_email: appoint_a_representative_confirmation_email_template_id
        burial_claim_confirmation_email_template_id: burial_claim_confirmation_email_template_id
        ch31_vbms_form_confirmation_email: ch31_vbms_fake_template_id
        ch31_central_mail_form_confirmation_email: ch31_central_mail_fake_template_id
        career_counseling_confirmation_email: career_counseling_confirmation_email_template_id
        form527ez_confirmation_email: form527ez_confirmation_email_template_id
        preneeds_burial_form_email: preneeds_burial_form_email_template_id
        contact_info_change: fake_template_id
        form0994_confirmation_email: form0994_confirmation_email_template_id
        form0994_extra_action_confirmation_email: form0994_extra_action_confirmation_email_template_id
        form1990_confirmation_email: form1990_confirmation_email_template_id
        form1990e_confirmation_email: form1990e_confirmation_email_template_id
        form1990meb_approved_confirmation_email: form1990meb_approved_confirmation_email_template_id
        form1990meb_offramp_confirmation_email: form1990meb_offramp_confirmation_email_template_id
        form1990meb_denied_confirmation_email: form1990meb_denied_confirmation_email_template_id
        form1990emeb_approved_confirmation_email: form1990emeb_approved_confirmation_email_template_id
        form1990emeb_offramp_confirmation_email: form1990emeb_offramp_confirmation_email_template_id
        form1990emeb_denied_confirmation_email: form1990emeb_denied_confirmation_email_template_id
        form1995_confirmation_email: form1995_confirmation_email_template_id
        form21_0966_confirmation_email: form21_0966_confirmation_email_template_id
        form21_0972_confirmation_email: form21_0972_confirmation_email_template_id
        form21_0972_error_email: form21_0972_error_email_template_id
        form21_0972_received_email: form21_0972_received_email_template_id
        form21_10203_confirmation_email: form21_10203_confirmation_email_template_id
        form21_10210_confirmation_email: form21_10210_confirmation_email_template_id
        form21_10210_error_email: form21_10210_error_email_template_id
        form21_10210_received_email: form21_10210_received_email_template_id
        form20_10206_confirmation_email: form20_10206_confirmation_email_template_id
        form20_10206_error_email: form20_10206_error_email_template_id
        form20_10206_received_email: form20_10206_received_email_template_id
        form20_10207_confirmation_email: form20_10207_confirmation_email_template_id
        form20_10207_error_email: form20_10207_error_email_template_id
        form20_10207_received_email: form20_10207_received_email_template_id
        form21_0845_confirmation_email: form21_0845_confirmation_email_template_id
        form21_0845_error_email: form21_0845_error_email_template_id
        form21_0845_received_email: form21_0845_received_email_template_id
        form21p_0847_confirmation_email: form21p_0847_confirmation_email_template_id
        form21p_0847_error_email: form21p_0847_error_email_template_id
        form21p_0847_received_email: form21p_0847_received_email_template_id
        form21_4142_confirmation_email: form21_4142_confirmation_email_template_id
        form21_4142_error_email: form21_4142_error_email_template_id
        form21_4142_received_email: form21_4142_received_email_template_id
        form40_0247_confirmation_email: form40_0247_confirmation_email_template_id
        form526_confirmation_email: fake_template_id
        form526_submission_failed_email: fake_template_id
        form5490_confirmation_email: form5490_confirmation_email_template_id
        form5495_confirmation_email: form5495_confirmation_email_template_id
        form686c_confirmation_email: fake_template_id
        form686c_reminder_email: fake_template_id
        form1010ez_reminder_email: fake_template_id
        form1880_reminder_email: form1880_reminder_email_template_id
        in_progress_reminder_email_generic: fake_template_id
        covid_vaccine_registration: fake_template_id
        covid_vaccine_expanded_registration: fake_template_id
        direct_deposit: direct_deposit_template_id
        direct_deposit_edu: edu_template_id
        direct_deposit_comp_pen: comp_pen_template_id
        login_reactivation_email: reactivation_email_test_b
    lighthouse:
      api_key: fake_secret
    dmc:
      api_key: fake_secret
      template_id:
        fsr_confirmation_email: fake_template_id
        vha_new_copay_statement_email: fake_template_id
        fsr_streamlined_confirmation_email: fake_template_id
    check_in:
      api_key: fake_secret
      sms_sender_id: fake_secret
      template_id:
        claim_submission_success_text: fake_template_id
        claim_submission_duplicate_text: fake_template_id
        claim_submission_error_text: fake_template_id
    oracle_health:
      sms_sender_id: fake_secret
      template_id:
        claim_submission_success_text: fake_template_id
        claim_submission_duplicate_text: fake_template_id
        claim_submission_error_text: fake_template_id
    benefits_decision_review:
      api_key: fake_secret
    benefits_disability:
      api_key: fake_secret
      template_id:
        form526_document_upload_failure_notification_template_id: form526_document_upload_failure_notification_template_id
        form4142_upload_failure_notification_template_id: form4142_upload_failure_notification_template_id
        form0781_upload_failure_notification_template_id: form0781_upload_failure_notification_template_id
    ivc_champva:
      api_key: fake_secret
      template_id:
        form_10_10d_email: form_10_10d_email
        form_10_7959f_1_email: form_10_7959f_1_email
        form_10_7959f_2_email: form_10_7959f_2_email
        form_10_7959c_email: form_10_7959c_email
        form_10_7959a_email: form_10_7959a_email
    health_apps_1010:
      api_key: fake_secret
      template_id:
        form1010_ez_failure_email: fake_template_id
        form1010_ezr_failure_email: fake_template_id
  mock: false
  links:
    connected_applications: https://www.va.gov/profile/connected-applications
    password_reset: https://www.va.gov/resources/signing-in-to-vagov/#what-if-i-cant-sign-in-to-vago

# Settings to connect to the drupal forms graphql api
va_forms:
  drupal_username: ~
  drupal_password: ~
  drupal_url: https://fake-url.com
  form_reloader:
    enabled: false
  # A notification for when a forms url has changed
  slack:
    enabled: false
    api_key: ""
    channel_id: ""

# Settings for connecting to genISIS, this is the storage system for the COVID Research initiative
genisis:
  base_url: https://vaausapprne60.aac.dva.va.gov
  service_path: /COVID19Service
  user: TestUser
  pass: bogus

# Settings for connecting AFS Veteran Services
dgi:
  jwt:
    public_key_path: modules/meb_api/spec/fixtures/dgi_public_test.pem
    private_key_path: modules/meb_api/spec/fixtures/dgi_private_test.pem
  vets:
    url: "https://jenkins.ld.afsp.io:32512/vets-service/v1/" # Docker setup for microservice
    mock: false

# Settings for the VEText integration (mobile push notifications)
vetext_push:
  va_mobile_app_sid: mobile-app-sid
  va_mobile_app_debug_sid: mobile-app-debug-sid
  base_url: https://vetext1.r01.med.va.gov
  user: vets-api-username
  pass: secret

res:
  base_url: ~
  api_key: ~

veteran_readiness_and_employment:
  base_url: ~
  credentials: ~
  auth_endpoint: ~
  daily_report:
    emails:
      - VRC.VBABOS@va.gov
      - VRE.VBAPRO@va.gov
      - VRE.VBANYN@va.gov
      - VRC.VBABUF@va.gov
      - VRE.VBAHAR@va.gov
      - vre.vbanew@va.gov
      - VREBDD.VBAPHI@va.gov
      - VRE.VBAPIT@va.gov
      - VRE.VBABAL@va.gov
      - VRE.VBAROA@va.gov
      - VRE.VBAHUN@va.gov
      - VRETMP.VBAATG@va.gov
      - VRE281900.VBASPT@va.gov
      - VRC.VBAWIN@va.gov
      - VRC.VBACMS@va.gov
      - VREAPPS.VBANAS@va.gov
      - VRC.VBANOL@va.gov
      - VRE.VBAMGY@va.gov
      - VRE.VBAJAC@va.gov
      - VRE.VBACLE@va.gov
      - VRE.VBAIND@va.gov
      - VRE.VBALOU@va.gov
      - VAVBACHI.VRE@va.gov
      - VRE.VBADET@va.gov
      - VREApplications.VBAMIW@va.gov
      - VRC.VBASTL@va.gov
      - VRE.VBADES@va.gov
      - VRE.VBALIN@va.gov
      - VRC.VBASPL@va.gov
      - VRE.VBADEN@va.gov
      - VRC.VBAALB@va.gov
      - VRE.VBASLC@va.gov
      - VRC.VBAOAK@va.gov
      - ROVRC.VBALAN@va.gov
      - VRE.VBAPHO@va.gov
      - VRE.VBASEA@va.gov
      - VRE.VBABOI@va.gov
      - VRE.VBAPOR@va.gov
      - VREAPPS.VBAWAC@va.gov
      - VRE.VBALIT@va.gov
      - VREBDD.VBAMUS@va.gov
      - VRE.VBAREN@va.gov
      - MBVRE.VBASAJ@va.gov
      - VRE.VBAMPI@va.gov
      - VRE.VBAHOU@va.gov
      - VRE.VBAWAS@va.gov
      - VRE.VBAMAN@va.gov
      - EBENAPPS.VBASDC@va.gov
      - VRE.VBATOG@va.gov
      - VRE.VBAMAN@va.gov
      - VRC.VBAFHM@va.gov
      - VRC.VBAFAR@va.gov
      - VRC.VBAFAR@va.gov
      - VRE.VBADEN@va.gov
      - VRE.VBAWIC@va.gov
      - VRC.VBAHON@va.gov
      - VAVBA/WIM/RO/VR&E@vba.va.gov
      - VRE.VBAANC@va.gov
      - VRE.VBAPIT@va.gov
      - VRE-CMS.VBAVACO@va.gov

# Settings for connecting to the va.gov Google Analytics for the Cypress Viewport Updater
google_analytics_cvu:
  type: service_account
  project_id: vsp-analytics-and-insights
  private_key_id: ~
  private_key: ~
  client_email: va-gov-top-user-viewports@vsp-analytics-and-insights.iam.gserviceaccount.com
  client_id: ~
  auth_uri: https://accounts.google.com/o/oauth2/auth
  token_uri: https://oauth2.googleapis.com/token
  auth_provider_x509_cert_url: https://www.googleapis.com/oauth2/v1/certs
  client_x509_cert_url: https://www.googleapis.com/robot/v1/metadata/x509/va-gov-top-user-viewports%40vsp-analytics-and-insights.iam.gserviceaccount.com

# Settings for connecting to the cypress-viewport-updater-bot GitHub app
github_cvu:
  installation_id: ~
  integration_id: ~
  private_pem: ~

chip:
  url: https://vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
  base_path: dev
  api_gtwy_id: 2dcdrrn5zc
  redis_timeout: 30
  mock: true
  mobile_app:
    tenant_id: 6f1c8b41-9c77-469d-852d-269c51a7d380
    username: 'testuser'
    password: '12345'

check_in:
  vaos:
    mock: false
  map_api:
    url: https://veteran.apps-staging.va.gov
    service_name: MAP-API
  travel_reimbursement_api:
    auth_url: https://login.microsoftonline.us
    auth_url_v2: ~
    tenant_id: abcdefgh-1234-5678-12345-11e8b8ce491e
    claims_url: https://dev.integration.d365.va.gov
    claims_url_v2: ~
    claims_base_path: EC/ClaimIngestSvc
    redis_token_expiry: 3540 # 59 minutes
    service_name: BTSSS-API
  travel_reimbursement_api_v2:
    auth_url: https://login.microsoftonline.us
    auth_url_v2: ~
    tenant_id: abcdefgh-1234-5678-12345-11e8b8ce491e
    client_id: ~
    client_secret: ~
    claims_url: https://dev.integration.d365.va.gov
    claims_url_v2: ~
    claims_base_path: ~
    redis_token_expiry: 3540 # 59 minutes
    service_name: BTSSS-API
  authentication:
    max_auth_retry_limit: 3
    retry_attempt_expiry: 604800 # 7 Days
  chip_api:
    url: https://vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
    base_path: dev
    host: vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
    tmp_api_user: TzY6DFrnjPE8dwxUMbFf9HjbFqRim2MgXpMpMciXJFVohyURUJAc7W99rpFzhfh2B3sVnn4
    tmp_api_id: 2dcdrrn5zc
    tmp_api_username: vetsapiTempUser
    service_name: CHIP-API
    mock: false
    key_path: fake_api_path
    redis_session_prefix: check_in
    timeout: 30
  chip_api_v2:
    url: https://vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
    base_path: dev
    host: vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
    tmp_api_user: TzY6DFrnjPE8dwxUMbFf9HjbFqRim2MgXpMpMciXJFVohyURUJAc7W99rpFzhfh2B3sVnn4
    tmp_api_id: 2dcdrrn5zc
    tmp_api_username: vetsapiTempUser
    service_name: CHIP-API
    mock: false
    key_path: fake_api_path
    redis_session_prefix: check_in_chip_v2
    timeout: 30
  lorota_v2:
    url: https://vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
    host: vpce-06399548ef94bdb41-lk4qp2nd.execute-api.us-gov-west-1.vpce.amazonaws.com
    base_path: dev
    api_id: 22t00c6f97
    api_key: fake_key
    service_name: LoROTA-API
    mock: false
    key_path: fake_api_path
    redis_session_prefix: check_in_lorota_v2
    redis_token_expiry: 43200 # 12 Hours

rack:
  cookie_secret: ~

# Settings for BID Services
bid:
  awards:
    base_url: ~
    credentials: ~
    mock: true

rrd:
  alerts:
    recipients:
      - fake_email
  event_tracking:
    recipients:
      - fake_email
  mas_tracking:
    recipients:
      - fake_email
  mas_all_claims_tracking:
    recipients:
      - fake_email
  pact_tracking:
    recipients:
      - fake_email

virtual_regional_office:
  url: http://localhost:8120
  api_key: 9d3868d1-ec15-4889-8002-2bff1b50ba62
  evidence_pdf_path: evidence-pdf
  ctn_classification_path: classifier
  vagov_classification_path: contention-classification/va-gov-claim-classifier
  max_cfi_path: employee-experience/max-ratings
  ep_merge_path: employee-experience-ep-merge-app/merge

# Settings for Test User Dashboard modules
test_user_dashboard:
  env: dev
  github_oauth:
    client_id:
    client_secret:

websockets:
  websocket_settings: false

lighthouse_health_immunization:
  client_id: "0oad0xggirKLf2ger2p7"
  audience_claim_url: "https://deptva-eval.okta.com/oauth2/aus8nm1q0f7VQ0a482p7/v1/token"
  key_path: ~
  access_token_url: "https://sandbox-api.va.gov/oauth2/health/system/v1/token"
  api_url: "https://sandbox-api.va.gov/services/fhir/v0/r4"
  scopes:
    - "launch launch/patient"
    - "patient/Immunization.read"
    - "patient/Location.read"

mobile_lighthouse:
  client_id: "0oajpx78t3M8kurld2p7"
  rsa_key: ~

token_validation:
  url: https://dev-api.va.gov/internal/auth

notifications:
  public_key: ~

sidekiq:
  github_organization: ~
  github_team: ~
  github_oauth_key: ~
  github_oauth_secret: ~
  github_api_key: ~

flipper:
  mute_logs: false
  github_organization: ~
  github_team: ~
  github_oauth_key: ~
  github_oauth_secret: ~
  github_api_key: ~

lgy:
  base_url: http://www.example.com
  app_id: ~
  api_key: ~
  mock_coe: true

lgy_sahsha:
  base_url: http://www.example.com
  app_id: ~
  api_key: ~
  mock_coe: false

form526_backup:
  enabled: true
  # Can be single or multi, to send 1 payload or many, to central mail
  submission_method: "single"
  api_key: ~
  url: https://sandbox-api.va.gov/services/vba_documents/v1/
  aws:
    bucket: ~
    region: ~
    access_key_id: ~
    secret_access_key: ~

benefits_intake_service:
  enabled: true
  api_key: ~
  url: ~
  aws:
    bucket: ~
    region: ~
    access_key_id: ~
    secret_access_key: ~

form526_export:
  aws:
    bucket: ~
    region: ~
    access_key_id: ~
    secret_access_key: ~

forms_api_benefits_intake:
  api_key: ~
  url: https://sandbox-api.va.gov/services/vba_documents/v1/

form1095_b:
  s3:
    aws_access_key_id: ~
    aws_secret_access_key: ~
    bucket: "bucket"
    enabled: true
    region: "region"

ivc_forms:
  s3:
    bucket: "bucket"
    enabled: true
    region: "region"
  sidekiq:
    missing_form_status_job:
      enabled: true

coverband:
  github_organization: ~
  github_team: ~
  github_oauth_key: ~
  github_oauth_secret: ~
  github_api_key: ~

dogstatsd:
  enabled: false

vha:
  sharepoint:
    sharepoint_url: "dvagov.sharepoint.com"
    client_id: "fake_sharepoint_client_id"
    client_secret: "fake_sharepoint_client_secret"
    tenant_id: "fake_sharepoint_tenant_id"
    resource: "00000003-0000-0ff1-ce00-000000000000"
    service_name: "VHA-SHAREPOINT"
    base_path: "/sites/vhafinance/MDW"
    authentication_url: "https://accounts.accesscontrol.windows.net"
    mock: true

avs:
  mock: true
  timeout: 55
  url: "https://something.fake.va.gov"
  api_jwt: abcd1234abcd1234abcd1234abcd1234abcd1234

brd:
  api_key: 'fake_key'
  base_name: 'https://something.fake.va.gov'

travel_pay:
  sts:
    service_account_id: ~
  mock: true
  veis:
    client_id: ~
    client_secret: ~
    resource: ~
    tenant_id: ~
    auth_url: https://login.microsoftonline.us
  subscription_key: ~
  base_url: ~
  client_number: ~
  service_name: BTSSS-API

xlsx_file_fetcher:
  github_access_token: ~

vye:
  ivr_key: ~
  # The scrypt hash below contains keyword arguments that are passed wholesale to OpenSSL::KDF::scrypt:
  #
  # | Key  | Description                                          |
  # | ---- | ---------------------------------------------------- |
  # | salt | Salt                                                 |
  # | N    | CPU/memory cost parameter. This must be a power of 2 |
  # | r    | Block size parameter                                 |
  # | p    | Parallelization parameter                            |
  #
  # See OpenSSL documentation for more information:
  #   https://ruby-doc.org/core-3.1.2/OpenSSL/KDF.html#method-c-scrypt
  # See OWASP Cheat Sheet Series for more information about the best configuration for production:
  #   https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html#scrypt
  scrypt:
    salt: ~
    N: 16384
    r: 8
    p: 1
    length: 16
  s3:
    access_key_id: ~
    secret_access_key: ~
    region: ~
    bucket: ~

schema_contract:
  appointments_index: 'modules/vaos/app/schemas/appointments_index.json'
  test_index: 'spec/fixtures/schema_contract/test_schema.json'

form_mock_ae_design_patterns:
  prefill: true
