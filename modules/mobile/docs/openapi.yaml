openapi: "3.0.0"
info:
  version: 0.0.0
  title: VA Mobile API
  license:
    name: MIT
  description: >
    The Department of Veterans Affairs mobile API. All paths are relative to https://api.va.gov/mobile.
servers:
  - url: https://api.va.gov/mobile
paths:
  /:
    get:
      summary: /
      description: Returns a welcome message.
      operationId: welcome
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
  /v0/military-service-history:
    get:
      summary: /v0/military-service-history
      description: Returns user's service history
      operationId: getServiceHistory
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MilitaryHistory"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /v0/letters:
    get:
      summary: /v0/letters
      description: Returns the list of letter names and types for the given user
      operationId: letters
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Letters"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '422':
          description: Failure in processing entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /v0/letters/beneficiary:
    get:
      summary: /v0/letters/beneficiary
      description: Returns benefit info and options for the given user with or without a dependent
      operationId: beneficiary
      security:
        - Bearer: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LettersBenficiaryInfo"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /v0/letters/{type}/download:
    post:
      summary: /v0/letters/{id}
      description: Returns requested letter for download
      operationId: download
      security:
        - Bearer: [ ]
      parameters:
        - in: path
          name: type
          required: true
          schema:
            type: string
          description: letter type
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/letterOptions'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /v0/user:
    get:
      summary: /v0/user
      description: >
        Returns the user profile, including the user's addresses and the services
        the user has the requisite ids to access. Meta data for this endpoint returns all the services available in the API.
      operationId: user.getProfile
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                  meta:
                    properties:
                      availableServices:
                        type: array
                        example:
                          - appeals
                          - appointments
                          - claims
                          - directDepositBenefits
                          - lettersAndDocuments
                          - militaryServiceHistory
                          - userProfileUpdate
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

  /v0/user/addresses:
    put:
      summary: /v0/user/addresses
      description: Updates a user's residential or mailing address
      operationId: user.updateAddress
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: A domestic, internation, or military address
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressUpdate'
            example:
              validationKey: 0,
              id: 181513
              addressLine1: "1493 Martin Luther King Rd"
              city: "Fulton"
              countryName: "United States"
              countryCodeIso3: "USA"
              stateCode: "MS"
              zipCode: "38843"
              addressType: "DOMESTIC"
              addressPou: "RESIDENCE/CHOICE"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    required:
                      - id
                      - string
                    properties:
                      id:
                        type: string
                        example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                      type:
                        type: string
                        example: "asyncTransactionVet360AddressTransactions"
                      attributes:
                        type: object
                        required:
                          - transactionId
                          - transactionStatus
                          - type
                        properties:
                          transactionId:
                            type: string
                            example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                          transactionStatus:
                            type: string
                            example: "RECEIVED"
                          type:
                            type: string
                            example: "AsyncTransaction::Vet360::AddressTransaction"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

  /v0/user/emails:
    put:
      summary: /v0/user/emails
      description: Updates a user's email address
      operationId: user.updateEmailAddress
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: The new email address
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailUpdate'
            example:
              id: 42,
              emailAddress: "person42@example.com"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    required:
                      - id
                      - string
                    properties:
                      id:
                        type: string
                        example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                      type:
                        type: string
                        example: "asyncTransactionVet360AddressTransactions"
                      attributes:
                        type: object
                        required:
                          - transactionId
                          - transactionStatus
                          - type
                        properties:
                          transactionId:
                            type: string
                            example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                          transactionStatus:
                            type: string
                            example: "RECEIVED"
                          type:
                            type: string
                            example: "AsyncTransaction::Vet360::AddressTransaction"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

  /v0/user/phones:
    put:
      summary: /v0/user/phones
      description: Updates a user's phone number
      operationId: user.updatePhoneNumber
      security:
        - Bearer: [ ]
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
      requestBody:
        description: The new phone number
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Phone'
            example:
              id: 157032
              areaCode: "704"
              countryCode: "1"
              phoneNumber: "7749069"
              phoneType: "HOME"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    required:
                      - id
                      - string
                    properties:
                      id:
                        type: string
                        example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                      type:
                        type: string
                        example: "asyncTransactionVet360AddressTransactions"
                      attributes:
                        type: object
                        required:
                          - transactionId
                          - transactionStatus
                          - type
                        properties:
                          transactionId:
                            type: string
                            example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                          transactionStatus:
                            type: string
                            example: "RECEIVED"
                          type:
                            type: string
                            example: "AsyncTransaction::Vet360::AddressTransaction"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '422':
          description: Unprocessable Entity, usually because of one or more invalid parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

  /v0/user/transaction-status:
    get:
      summary: /v0/user/transaction-status/:transactionId
      description: \[Not implemented\] Returns the status of a user profile update (e.g. address update)
      operationId: user.updateAddress
      security:
        - Bearer: []
      parameters:
        - in: header
          name: X-Key-Inflection
          schema:
            type: string
            description: Allows the API to return camelCase keys rather than snake_case.
            example: 'camel'
        - in: query
          name: transactionId
          schema:
            type: string
            example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
          required: true
          description: The id of the transaction being looked up
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  data:
                    required:
                      - id
                      - string
                    properties:
                      id:
                        type: string
                        example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                      type:
                        type: string
                        example: "asyncTransactionVet360AddressTransactions"
                      attributes:
                        type: object
                        required:
                          - transactionId
                          - transactionStatus
                          - type
                        properties:
                          transactionId:
                            type: string
                            example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
                          transactionStatus:
                            type: string
                            example: "COMPLETED_SUCCESS"
                          type:
                            type: string
                            example: "AsyncTransaction::Vet360::AddressTransaction"
        '401':
          description: Authentication is possible but has failed or not yet been provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '408':
          description: The response from this API timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '500':
          description: An internal API error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '502':
          description: An upstream service the API depends on returned an error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '503':
          description: An upstream service is unavailable, or its circuit breaker may have been tripped.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        '504':
          description: A response from an upstream service timed out.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"

components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Authentication is via an access token returned from IAM's SSOe service. Pass the access token in the 'Authorization' Header in the format 'Bearer {accessToken}'. e.g. 'Bearer abcdefg1234567'.

  schemas:
    MilitaryHistory:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              example: "militaryInformation"
            id:
              type: string
              example: "abe3f152-90b0-45cb-8776-4958bad0e0ef"
            attributes:
              type: object
              required:
                - serviceHistory
              properties:
                serviceHistory:
                  type: array
                  items:
                    type: object
                    $ref: "#/components/schemas/ServiceHistory"
    ServiceHistory:
      required:
        - branchOfService
        - beginDate
        - endDate
        - formattedBeginDate
        - formattedEndDate
      properties:
        branchOfService:
          type: string
          example: "United States Marine Corps"
        beginDate:
          type: string
          example: "1997-09-17"
        endDate:
          type: string
          example: "2002-12-31"
        formattedBeginDate:
          type: string
          example: "September 17, 1997"
        formattedEndDate:
          type: string
          example: "December 31, 2002"
    Errors:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Error:
      required:
        - title
        - detail
        - code
        - status
      properties:
        title:
          type: string
        detail:
          type: string
        code:
          type: string
        status:
          type: string
        source:
          type: string
        meta:
          type: object
          required:
            - messages
          properties:
            messages:
              type: array
              items:
                type: object
                required:
                  - key
                  - severity
                  - text
                properties:
                  key:
                    type: string
                  severity:
                    type: string
                  text:
                    type: string
    EVSSAuthError:
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            required:
              - title
              - detail
              - code
              - status
            properties:
              title:
                type: string
                example: Not Found
              detail:
                type: string
                example: "The requested resource could not be found but may be available again in the future."
              code:
                type: string
                example: '404'
              status:
                type: string
                example: '404'
    Message:
      required:
        - attributes
      properties:
        attributes:
          type: object
          required:
            - message
          properties:
            message:
              type: string
              example: "Welcome to the mobile API"
    Letters:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              example: "letters"
            id:
              type: string
              example: "abe3f152-90b0-45cb-8776-4958bad0e0ef"
            attributes:
              type: object
              required:
                - letters
              properties:
                letters:
                  type: array
                  items:
                    type: object
                    $ref: "#/components/schemas/LettersInfo"
    LettersInfo:
      required:
        - name
        - letterType
      properties:
        name:
          type: string
          example: "Commissary Letter"
        letterType:
          type: string
          enum:
            - "commissary"
            - "proof_of_service"
            - "medicare_partd"
            - "minimum_essential_coverage"
            - "service_verification"
            - "civil_service"
            - "benefit_summary"
            - "benefit_verification"
            - "certificate_of_eligibility"
    LettersBenficiaryInfo:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
            - attributes
          properties:
            type:
              type: string
              example: "evssLettersBeneficiaryResponses"
            id:
              type: string
              example: "3be0c7de-bfe1-4101-a326-5567bcd98b63"
            attributes:
              type: object
              required:
                - letters
                - benefitInformation
              properties:
                benefitInformation:
                  type: object
                  required:
                    - awardEffectiveDate
                    - hasChapter35Eligibility
                    - monthlyAwardAmount
                    - serviceConnectedPercentage
                  properties:
                    awardEffectiveDate:
                      type: string
                      example: "2013-06-06T04:00:00.000+00:00"
                    hasChapter35Eligibility:
                      type: boolean
                      example: true
                    monthlyAwardAmount:
                      type: number
                      example: 123
                    serviceConnectedPercentage:
                      type: number
                      example: 2
                    hasDeathResultOfDisability:
                      type: boolean
                      example: false
                    hasSurvivorsIndemnityCompensationAward:
                      type: boolean
                      example: true
                    hasSurvivorsPensionAward:
                      type: boolean
                      example: false
                    hasAdaptedHousing:
                      type: boolean
                      example: true
                    hasIndividualUnemployabilityGranted:
                      type: boolean
                      example: false
                    hasNonServiceConnectedPension:
                      type: boolean
                      example: true
                    hasServiceConnectedDisabilities:
                      type: boolean
                      example: false
                    hasSpecialMonthlyCompensation:
                      type: boolean
                      example: true
                militaryService:
                  type: array
                  items:
                    type: object
                    required:
                      - branch
                      - characterOfService
                      - enteredDate
                      - releasedDate
                    properties:
                      branch:
                        type: string
                        example: "Army"
                      characterOfService:
                        type: string
                        enum:
                          - "HONORABLE"
                          - "OTHER_THAN_HONORABLE"
                          - "UNDER_HONORABLE_CONDITIONS"
                          - "GENERAL"
                          - "UNCHARACTERIZED"
                          - "UNCHARACTERIZED_ENTRY_LEVEL"
                          - "DISHONORABLE"
                      enteredDate:
                        type: string
                        example: "1973-01-01T05:00:00.000+00:00"
                      releasedDate:
                        type: string
                        example: "1977-10-01T04:00:00.000+00:00"
    letterOptions:
      type: object
      required:
        - militaryService
        - serviceConnectedDisabilities
        - serviceConnectedEvaluation
        - nonServiceConnectedPension
        - monthlyAward
        - unemployable
        - specialMonthlyCompensation
        - adaptedHousing
        - chapter35Eligibility
        - deathResultOfDisability
        - survivorsAward
      properties:
        militaryService:
          type: boolean
        serviceConnectedDisabilities:
          type: boolean
        serviceConnectedEvaluation:
          type: boolean
        nonServiceConnectedPension:
          type: boolean
        monthlyAward:
          type: boolean
        unemployable:
          type: boolean
        specialMonthlyCompensation:
          type: boolean
        adaptedHousing:
          type: boolean
        chapter35Eligibility:
          type: boolean
        deathResultOfDisability:
          type: boolean
        survivorsAward:
          type: boolean
    User:
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          example: "abe3f152-90b0-45cb-8776-4958bad0e0ef"
        type:
          type: string
          example: "user"
        attributes:
          type: object
          required:
            - profile
            - authorizedServices
          properties:
            profile:
              type: object
              required:
                - firstName
                - middleName
                - lastName
                - email
                - birthDate
                - gender
                - addresses
              properties:
                firstName:
                  type: string
                  example: "John"
                middleName:
                  type: string
                  example: "A"
                lastName:
                  type: string
                  example: "Smith"
                email:
                  type: string
                  example: "john.a.smith@domain.com"
                residentialAddress:
                  $ref: "#/components/schemas/Address"
                mailingAddress:
                  $ref: "#/components/schemas/Address"
                homePhone:
                  $ref: "#/components/schemas/Phone"
                mobilePhone:
                  $ref: "#/components/schemas/Phone"
                workPhone:
                  $ref: "#/components/schemas/Phone"
            authorizedServices:
              type: array
              items:
                type: string
              example:
                - appeals
                - directDepositBenefits
                - militaryServiceHistory
    Address:
      required:
        - addressLine1
        - addressLine2
        - addressLine3
        - addressPou
        - addressType
        - city
        - countryCode
        - internationalPostalCode
        - province
        - stateCode
        - zipCode
        - zipCodeSuffix
      properties:
        addressLine1:
          type: string
          example: "1493 Martin Luther King Rd"
        addressLine2:
          type: string, null
        addressLine3:
          type: string, null
        addressPou:
          type: string
          enum: [ "RESIDENCE/CHOICE", "CORRESPONDENCE" ]
          example: "RESIDENCE/CHOICE"
        addressType:
          type: string
          enum: ["DOMESTIC", "INTERNATIONAL"]
          example: "DOMESTIC"
        city:
          type: string
          example: "Fulton"
        countryCode:
          type: string
          example: "US"
        internationalPostalCode:
          type: string, null
          example: null
        province:
          type: string, null
          example: null
        stateCode:
          type: string
          example: "NY"
        zipCode:
          type: string
          example: "97062"
        zipCodeSuffix:
          type: string, null
          example: "1234"

    AddressUpdate:
      required:
        - validationKey
        - addressLine1
        - addressPou
        - addressType
        - city
        - countryCode
      properties:
        validationKey:
          type: integer
          example: 0
        addressLine1:
          type: string
          example: "1493 Martin Luther King Rd"
        addressLine2:
          type: string, null
        addressLine3:
          type: string, null
        addressPou:
          type: string
          enum: [ "RESIDENCE/CHOICE", "CORRESPONDENCE" ]
          example: "RESIDENCE/CHOICE"
        addressType:
          type: string
          enum: [ "DOMESTIC", "INTERNATIONAL" ]
          example: "DOMESTIC"
        city:
          type: string
          example: "Fulton"
        countryCode:
          type: string
          example: "US"
        internationalPostalCode:
          type: string, null
          example: null
        province:
          type: string, null
          example: null
        stateCode:
          type: string
          example: "NY"
        zipCode:
          type: string
          example: "97062"
        zipCodeSuffix:
          type: string, null
          example: "1234"

    EmailUpdate:
      required:
        - id
        - emailAddress
      properties:
        id:
          type: integer
          example: 42
        emailAddress:
          type: string
          example: "person42@example.com"

    Phone:
      required:
        - id
        - areaCode
        - countryCode
        - phoneNumber
        - phoneType
      properties:
        id:
          type: integer
          example: 157032
        areaCode:
          type: string
          example: "704"
        countryCode:
          type: string
          example: "1"
        phoneNumber:
          type: string
          example: "7749069"
        phoneType:
          type: string
          enum: [ "HOME", "MOBILE", "WORK" ]
          example: "HOME"
