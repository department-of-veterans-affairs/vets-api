{
  "openapi": "3.0.1",
  "info": {
    "title": "Benefits Claims",
    "version": "v2",
    "description": "## Background\n\nThe Benefits Claims API Version 2 lets internal consumers: \n\n-   Retrieve existing claim information, including status, by claim ID\n-   Automatically establish an Intent To File (21-0966) in VBMS\n\nAdditional functionality will be added over time.\n\nYou should use the [Benefits Claims API Version 1](https://developer.va.gov/explore/benefits/docs/claims?version=current) if: \n\n-   You are not an internal consumer, and/or\n-   You want automatic establishment of disability compensation claims in Veterans Benefits Management System (VBMS) or power of attorney (POA)\n    \n## Technical Overview\n\nThis API accepts a payload of requests and responses with the payload identifying the claim and Veteran. Responses provide the submission’s processing status. Responses also provide a unique ID which can be used with the appropriate GET endpoint to return detailed, end-to-end claims status tracking. \n\nEnd-to-end claims tracking provides the status of claims as they move through the submission process, but does not return whether the claim was approved or denied. \n\n### Claim statuses\n\n-   Pending - the claim is successfully submitted to Lighthouse\n-   Errored -  the submission encountered upstream errors\n-   Canceled -  the claim was identified as a duplicate or another issue caused the claim to be canceled. For duplicate claims,  the tracking of the claim's progress happens under a different Claim ID . \n\nOther statuses this API returns align with the [VA.gov](http://va.gov/) [claim status descriptions](https://www.va.gov/resources/what-your-claim-status-means/), which are:\n\n-   Claim received\n-   Initial review\n-   Evidence gathering, review, and decision\n-   Preparation for notification\n-   Complete\n\n### Finding a Veteran's unique VA ID\n\nThis API uses a unique Veteran identifier to identify the subject of each API request. This Veteran identifier can be retrieved by passing the Veteran’s first name, last name, DOB, and SSN to the ‘/veteran-id’ endpoint. This identifier should then be used as the Veteran ID parameter in request URLs.\n\nNote: though Veteran identifiers are typically static, they may change over time. If a specific Veteran ID suddenly responds with a ‘404 not found’ error, the identifier may have changed. It’s a good idea to periodically check the identifier for each Veteran.\n\n### Authentication and authorization\n\nTo make an API request, use our [client credentials grant](https://developer.va.gov/explore/authorization/docs/client-credentials?api=claims) to receive an [OAuth token](https://oauth.net/2/). \n\n### Test data for sandbox environment use\n\nWe use mock [test data in the sandbox environment](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts.md). Sandbox test data and test users for the Benefits Claims API are valid for all versions of the API.\n"
  },
  "tags": [
    {
      "name": "Veteran Identifier",
      "description": "Allows authenticated veterans and veteran representatives to retrieve a veteran's id."
    },
    {
      "name": "Claims",
      "description": "Allows authenticated and authorized users to access claims data for a given Veteran. No data is returned if the user is not authenticated and authorized.\n"
    },
    {
      "name": "5103 Waiver",
      "description": "Allows authenticated and authorized users to file a 5103 Notice Response on a claim."
    },
    {
      "name": "Intent to File",
      "description": "Allows authenticated and authorized users to automatically establish an Intent to File (21-0966) in VBMS.\n"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer_token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "productionOauth": {
        "type": "oauth2",
        "description": "This API uses OAuth 2 with the authorization code grant flow. [More info](https://developer.va.gov/explore/authorization?api=claims)",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.va.gov/oauth2/authorization",
            "tokenUrl": "https://api.va.gov/oauth2/token",
            "scopes": {
              "system/claim.read": "Retrieve claim data",
              "system/claim.write": "Submit claim data"
            }
          }
        }
      },
      "sandboxOauth": {
        "type": "oauth2",
        "description": "This API uses OAuth 2 with the authorization code grant flow. [More info](https://developer.va.gov/explore/authorization?api=claims)",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://sandbox-api.va.gov/oauth2/authorization",
            "tokenUrl": "https://sandbox-api.va.gov/oauth2/token",
            "scopes": {
              "system/claim.read": "Retrieve claim data",
              "system/claim.write": "Submit claim data"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/veteran-id:find": {
      "post": {
        "summary": "Retrieve Veteran ID.",
        "tags": [
          "Veteran Identifier"
        ],
        "operationId": "postVeteranId",
        "security": [
          {
            "productionOauth": [
              "system/claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Allows authenticated and authorized users to retrieve a Veteran's ID.",
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Veteran's unique identifier",
            "content": {
              "application/json": {
                "example": {
                  "id": "1012667145V762142"
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1012667145V762142"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "invalid value for SSN",
                      "detail": "blank is not valid for SSN"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Resource not found"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ssn",
                  "birthdate",
                  "firstName",
                  "lastName"
                ],
                "properties": {
                  "ssn": {
                    "type": "string",
                    "example": "796130115",
                    "description": "SSN of Veteran being represented"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Tamara",
                    "description": "First name of Veteran being represented"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Ellis",
                    "description": "Last name of Veteran being represented"
                  },
                  "birthdate": {
                    "type": "string",
                    "example": "1967-06-19",
                    "description": "Date of birth of Veteran being represented, in iso8601 format"
                  }
                },
                "example": {
                  "ssn": "796130115",
                  "firstName": "Tamara",
                  "lastName": "Ellis",
                  "birthdate": "1967-06-19"
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/veterans/{veteranId}/claims": {
      "get": {
        "summary": "Find all benefits claims for a Veteran.",
        "tags": [
          "Claims"
        ],
        "operationId": "findClaims",
        "security": [
          {
            "productionOauth": [
              "system/claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Retrieves all claims for Veteran.",
        "parameters": [
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "example": "1012667145V762142",
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "claim response",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "555555555",
                      "type": "claim",
                      "attributes": {
                        "baseEndProductCode": "400",
                        "claimDate": "2017-05-02",
                        "claimPhaseDates": {
                          "phaseChangeDate": "2017-10-18"
                        },
                        "claimType": "Compensation",
                        "closeDate": "2017-10-18",
                        "decisionLetterSent": false,
                        "developmentLetterSent": false,
                        "documentsNeeded": false,
                        "endProductCode": "404",
                        "evidenceWaiverSubmitted5103": false,
                        "lighthouseId": null,
                        "status": "COMPLETE"
                      }
                    }
                  ]
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id",
                          "type",
                          "attributes"
                        ],
                        "additionalProperties": false,
                        "description": "Claim details",
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": true,
                            "description": "Claim ID in VBMS. If a claim was submitted with Lighthouse and not successfully established upstream, it could have a null claimId.",
                            "example": "600131328"
                          },
                          "type": {
                            "type": "string",
                            "example": "claim"
                          },
                          "attributes": {
                            "type": "object",
                            "required": [
                              "baseEndProductCode",
                              "claimType",
                              "claimDate",
                              "claimPhaseDates",
                              "closeDate",
                              "developmentLetterSent",
                              "decisionLetterSent",
                              "documentsNeeded",
                              "endProductCode",
                              "evidenceWaiverSubmitted5103",
                              "lighthouseId",
                              "status"
                            ],
                            "properties": {
                              "baseEndProductCode": {
                                "type": "string",
                                "description": "Base end product code for claim",
                                "example": "400"
                              },
                              "claimType": {
                                "type": "string",
                                "description": "Name of claim type",
                                "example": "Compensation"
                              },
                              "claimDate": {
                                "format": "date",
                                "type": "string",
                                "description": "Date in YYYY-MM-DD the claim was first filed",
                                "example": "2018-06-04"
                              },
                              "claimPhaseDates": {
                                "type": "object",
                                "properties": {
                                  "phaseChangeDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "The date that the claim changed to its current phase",
                                    "example": "2017-10-18"
                                  }
                                }
                              },
                              "closeDate": {
                                "format": "date",
                                "type": "string",
                                "description": "Date claim was closed",
                                "example": "2019-09-04"
                              },
                              "developmentLetterSent": {
                                "type": "boolean",
                                "description": "If true, a development letter has been sent to the claimant regarding a benefit claim",
                                "example": "false"
                              },
                              "decisionLetterSent": {
                                "type": "boolean",
                                "description": "If true, a decision letter has been sent to the claimant regarding a benefit claim",
                                "example": "false"
                              },
                              "documentsNeeded": {
                                "type": "boolean",
                                "description": "If true, the claim requires additional documents to be submitted",
                                "example": "false"
                              },
                              "endProductCode": {
                                "type": "string",
                                "description": "End product code of claim"
                              },
                              "evidenceWaiverSubmitted5103": {
                                "type": "boolean",
                                "nullable": true,
                                "description": "If true, indicates a decision has been requested and/or a Waiver 5103 has been submitted",
                                "example": "false"
                              },
                              "lighthouseId": {
                                "type": "string",
                                "nullable": true,
                                "description": "Claim ID in Lighthouse",
                                "example": "0BAEFC26-1CE4-4046-9B3C-3071055603DB"
                              },
                              "status": {
                                "type": "string",
                                "description": "Status of claim",
                                "enum": [
                                  "PENDING",
                                  "CLAIM_RECEIVED",
                                  "INITIAL_REVIEW",
                                  "EVIDENCE_GATHERING_REVIEW_DECISION",
                                  "PREPARATION_FOR_NOTIFICATION",
                                  "COMPLETE",
                                  "ERRORED",
                                  "CANCELED"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/veterans/{veteranId}/claims/{id}": {
      "get": {
        "summary": "Find claim by ID",
        "tags": [
          "Claims"
        ],
        "operationId": "findClaimById",
        "security": [
          {
            "productionOauth": [
              "system/claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Retrieves a specific claim for a Veteran",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "example": "1234",
            "description": "The ID of the claim being requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "example": "1012667145V762142",
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "claim response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "555555555",
                    "type": "claim",
                    "attributes": {
                      "claimTypeCode": "400PREDSCHRG",
                      "claimDate": "2017-05-02",
                      "claimPhaseDates": {
                        "phaseChangeDate": "2017-10-18",
                        "currentPhaseBack": false,
                        "latestPhaseType": "COMPLETE",
                        "previousPhases": {
                          "phase7CompleteDate": "2017-10-18"
                        }
                      },
                      "claimType": "Compensation",
                      "closeDate": "2017-10-18",
                      "contentions": [
                        {
                          "name": "abnormal heart (New)"
                        },
                        {
                          "name": "abscess kidney (New)"
                        },
                        {
                          "name": "encephalitis lethargica residuals (New)"
                        },
                        {
                          "name": "dracunculiasis (New)"
                        },
                        {
                          "name": "gingivitis (New)"
                        },
                        {
                          "name": "abnormal weight loss (New)"
                        },
                        {
                          "name": "groin condition (New)"
                        },
                        {
                          "name": "metritis (New)"
                        }
                      ],
                      "decisionLetterSent": false,
                      "developmentLetterSent": false,
                      "documentsNeeded": false,
                      "endProductCode": "404",
                      "evidenceWaiverSubmitted5103": false,
                      "errors": [

                      ],
                      "jurisdiction": "National Work Queue",
                      "lighthouseId": null,
                      "maxEstClaimDate": null,
                      "minEstClaimDate": null,
                      "status": "COMPLETE",
                      "submitterApplicationCode": "EBN",
                      "submitterRoleCode": "VET",
                      "supportingDocuments": [
                        {
                          "documentId": "{54EF0C16-A9E7-4C3F-B876-B2C7BEC1F834}",
                          "documentTypeLabel": "Medical",
                          "originalFileName": null,
                          "trackedItemId": null,
                          "uploadDate": null
                        }
                      ],
                      "tempJurisdiction": null,
                      "trackedItems": [
                        {
                          "closedDate": "2021-06-04",
                          "description": null,
                          "displayName": "21-4142a",
                          "overdue": false,
                          "receivedDate": null,
                          "requestedDate": "2021-05-05",
                          "status": "NO_LONGER_REQUIRED",
                          "suspenseDate": "2021-06-04",
                          "id": 293440,
                          "uploadsAllowed": false
                        },
                        {
                          "closedDate": "2021-06-04",
                          "description": null,
                          "displayName": "Employment info needed",
                          "overdue": false,
                          "receivedDate": null,
                          "requestedDate": "2021-05-05",
                          "status": "NO_LONGER_REQUIRED",
                          "suspenseDate": "2021-06-04",
                          "id": 293443,
                          "uploadsAllowed": false
                        },
                        {
                          "closedDate": "2021-06-04",
                          "description": null,
                          "displayName": "Accidental injury - 21-4176 needed",
                          "overdue": false,
                          "receivedDate": null,
                          "requestedDate": "2021-05-05",
                          "status": "NO_LONGER_REQUIRED",
                          "suspenseDate": "2021-06-04",
                          "id": 293444,
                          "uploadsAllowed": false
                        },
                        {
                          "closedDate": "2021-06-04",
                          "description": null,
                          "displayName": "Buddy mentioned - No complete address",
                          "overdue": false,
                          "receivedDate": null,
                          "requestedDate": "2021-05-05",
                          "status": "NO_LONGER_REQUIRED",
                          "suspenseDate": "2021-06-04",
                          "id": 293446,
                          "uploadsAllowed": false
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "additionalProperties": false,
                      "description": "Claim with some details for the given Veteran info",
                      "properties": {
                        "id": {
                          "type": "string",
                          "nullable": true,
                          "description": "Claim ID in VBMS. If a claim was submitted with Lighthouse and not successfully established upstream, it could have a null claimId.",
                          "example": "600131328"
                        },
                        "type": {
                          "type": "string",
                          "example": "evss_claims"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "claimTypeCode",
                            "claimDate",
                            "claimPhaseDates",
                            "claimType",
                            "closeDate",
                            "contentions",
                            "decisionLetterSent",
                            "developmentLetterSent",
                            "documentsNeeded",
                            "endProductCode",
                            "evidenceWaiverSubmitted5103",
                            "errors",
                            "jurisdiction",
                            "lighthouseId",
                            "maxEstClaimDate",
                            "minEstClaimDate",
                            "status",
                            "submitterApplicationCode",
                            "submitterRoleCode",
                            "supportingDocuments",
                            "tempJurisdiction",
                            "trackedItems"
                          ],
                          "properties": {
                            "claimTypeCode": {
                              "type": "string",
                              "description": "Type Code of benefit claim",
                              "example": "400PREDSCHRG"
                            },
                            "claimType": {
                              "type": "string",
                              "description": "Name of claim type",
                              "example": "Compensation"
                            },
                            "contentions": {
                              "type": "array",
                              "description": "The contentions being submitted with a claim",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "abscess kidney (New)"
                                  }
                                }
                              }
                            },
                            "claimDate": {
                              "format": "date",
                              "type": "string",
                              "nullable": true,
                              "description": "The date a claim was filed",
                              "example": "2017-10-18"
                            },
                            "claimPhaseDates": {
                              "type": "object",
                              "properties": {
                                "currentPhaseBack": {
                                  "type": "boolean",
                                  "description": "Indicates whether the current phase is moving backward."
                                },
                                "latestPhaseType": {
                                  "type": "string",
                                  "enum": [
                                    "CLAIM_RECEIVED",
                                    "UNDER_REVIEW",
                                    "GATHERING_OF_EVIDENCE",
                                    "REVIEW_OF_EVIDENCE",
                                    "PREPARATION_FOR_DECISION",
                                    "PENDING_DECISION_APPROVAL",
                                    "PREPARATION_FOR_NOTIFICATION",
                                    "COMPLETE"
                                  ],
                                  "nullable": true,
                                  "description": "The most current phase for the claim"
                                },
                                "phaseChangeDate": {
                                  "format": "date",
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The date that the claim changed to its current phase",
                                  "example": "2017-10-18"
                                },
                                "previousPhases": {
                                  "type": "object",
                                  "properties": {
                                    "phase1CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the claim received phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase2CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the initial review phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase3CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the gathering of evidence phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase4CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the reviewing of evidence phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase5CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the preparation for decision phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase6CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the pending decision approval phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase7CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the preparation for notification phase.",
                                      "example": "2017-10-18"
                                    },
                                    "phase8CompleteDate": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "Completed date of the completed phase.",
                                      "example": "2017-10-18"
                                    }
                                  }
                                }
                              }
                            },
                            "closeDate": {
                              "format": "date",
                              "type": "string",
                              "nullable": true,
                              "description": "Date claim was closed",
                              "example": "2019-09-04"
                            },
                            "decisionLetterSent": {
                              "type": "boolean",
                              "description": "If true, a decision letter has been sent to the claimant regarding a benefit claim"
                            },
                            "developmentLetterSent": {
                              "type": "boolean",
                              "description": "If true, a development letter has been sent to the claimant regarding a benefit claim"
                            },
                            "documentsNeeded": {
                              "type": "boolean",
                              "description": "If true, the claim requires additional documents to be submitted"
                            },
                            "endProductCode": {
                              "type": "string",
                              "description": "End product code of claim",
                              "example": "930"
                            },
                            "evidenceWaiverSubmitted5103": {
                              "type": "boolean",
                              "nullable": true,
                              "description": "If true, indicates a decision has been requested and/or a Waiver 5103 has been submitted",
                              "example": "false"
                            },
                            "errors": {
                              "type": "array",
                              "description": "Error details if claim is in an errored state.",
                              "items": {
                                "properties": {
                                  "detail": {
                                    "type": "string",
                                    "example": "Something happened"
                                  },
                                  "source": {
                                    "type": "string",
                                    "example": "some/error/path"
                                  }
                                }
                              }
                            },
                            "jurisdiction": {
                              "type": "string",
                              "description": "Current station of jurisdiction"
                            },
                            "lighthouseId": {
                              "type": "string",
                              "nullable": true,
                              "description": "Claim ID in Lighthouse",
                              "example": "0BAEFC26-1CE4-4046-9B3C-3071055603DB"
                            },
                            "minEstClaimDate": {
                              "format": "date",
                              "type": "string",
                              "nullable": true,
                              "description": "Minimum Estimated Claim Completion Date",
                              "example": "2019-06-04"
                            },
                            "maxEstClaimDate": {
                              "format": "date",
                              "type": "string",
                              "nullable": true,
                              "description": "Maximum Estimated Claim Completion Date",
                              "example": "2019-09-04"
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of claim",
                              "enum": [
                                "PENDING",
                                "CLAIM_RECEIVED",
                                "INITIAL_REVIEW",
                                "EVIDENCE_GATHERING_REVIEW_DECISION",
                                "PREPARATION_FOR_NOTIFICATION",
                                "COMPLETE",
                                "ERRORED",
                                "CANCELED"
                              ]
                            },
                            "submitterApplicationCode": {
                              "type": "string",
                              "description": "Application Code of benefit claim submitter",
                              "example": "EBN"
                            },
                            "submitterRoleCode": {
                              "type": "string",
                              "description": "Role Code of benefit claim submitter",
                              "example": "VET"
                            },
                            "supportingDocuments": {
                              "type": "array",
                              "description": "Information regarding any supported documents attached to a claim",
                              "items": {
                                "properties": {
                                  "documentId": {
                                    "type": "string",
                                    "description": "Unique identifier of document"
                                  },
                                  "documentTypeLabel": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "originalFileName": {
                                    "type": "string",
                                    "description": "Name of document",
                                    "nullable": true
                                  },
                                  "trackedItemId": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "uploadDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date and time document was uploaded",
                                    "nullable": true
                                  }
                                }
                              }
                            },
                            "tempJurisdiction": {
                              "type": "string",
                              "description": "Temporary jurisdiction of claim"
                            },
                            "trackedItems": {
                              "type": "array",
                              "description": "",
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "closedDate": {
                                    "format": "date",
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Date the tracked item was closed",
                                    "example": "2017-10-18"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Description of the tracked item",
                                    "example": "Buddy mentioned - No complete address"
                                  },
                                  "requestedDate": {
                                    "format": "date",
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Date the tracked item was requested",
                                    "example": "2017-10-18"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "description": "ID of the tracked item",
                                    "example": 293454
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Description of the tracked item",
                                    "example": "Buddy mentioned - No complete address"
                                  },
                                  "receivedDate": {
                                    "format": "date",
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Date the tracked item was received",
                                    "example": "2017-10-18"
                                  },
                                  "overdue": {
                                    "type": "boolean",
                                    "nullable": true,
                                    "description": "True if the item is overdue",
                                    "example": true
                                  },
                                  "status": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Enum with the status of the tracked item",
                                    "example": "NO_LONGER_REQUIRED",
                                    "enum": [
                                      "ACCEPTED",
                                      "INITIAL_REVIEW_COMPLETE",
                                      "NEEDED_FROM_YOU",
                                      "NEEDED_FROM_OTHERS",
                                      "NO_LONGER_REQUIRED",
                                      "SUBMITTED_AWAITING_REVIEW"
                                    ]
                                  },
                                  "suspenseDate": {
                                    "format": "date",
                                    "type": "string",
                                    "nullable": true,
                                    "example": "2017-10-18"
                                  },
                                  "uploadsAllowed": {
                                    "type": "boolean",
                                    "example": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "Claim not found"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/veterans/{veteranId}/claims/{id}/5103": {
      "post": {
        "summary": "Submit Evidence Waiver 5103",
        "tags": [
          "5103 Waiver"
        ],
        "operationId": "submitEvidenceWaiver5103",
        "security": [
          {
            "productionOauth": [
              "system/claim.write"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Submit Evidence Waiver 5103 for Veteran.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "example": "1234",
            "description": "The ID of the claim being requested",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "example": "1012667145V762142",
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "example": {
                  "success": true
                },
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": "true"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/veterans/{veteranId}/intent-to-file/{type}": {
      "get": {
        "summary": "Returns last active Intent to File form submission for given 'type'.",
        "tags": [
          "Intent to File"
        ],
        "operationId": "active0966itf",
        "security": [
          {
            "productionOauth": [
              "system/claim.read"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns Veteran's last active Intent to File submission for given benefit type.",
        "parameters": [
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "example": "1012667145V762142",
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "Type of Intent to File to return. Available values - compensation, pension, survivor.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with active Intent to File",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "193685",
                    "type": "intent_to_file",
                    "attributes": {
                      "creationDate": "2021-03-16T19:15:21.000-05:00",
                      "expirationDate": "2022-03-16T19:15:20.000-05:00",
                      "type": "compensation",
                      "status": "active"
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Intent To File ID",
                          "example": "600131328"
                        },
                        "type": {
                          "type": "string",
                          "example": "intent_to_file"
                        },
                        "attributes": {
                          "required": [
                            "creationDate",
                            "expirationDate",
                            "status",
                            "type"
                          ],
                          "properties": {
                            "creationDate": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the Intent to File was received at the VA"
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the Intent to File expires, this is 1 year from the createdDate"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the Intent to File",
                              "example": "active"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Intent to File filed.",
                              "example": "compensation"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Resource not found",
                      "detail": "No active 'C' intent to file found."
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/veterans/{veteranId}/intent-to-file": {
      "post": {
        "summary": "Submit form 0966 Intent to File.",
        "tags": [
          "Intent to File"
        ],
        "operationId": "post0966itf",
        "security": [
          {
            "productionOauth": [
              "system/claim.read",
              "system/claim.write"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.read",
              "system/claim.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Establishes an Intent to File for disability compensation, pension, and survivor claims.",
        "parameters": [
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "example": "1012667145V762142",
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "0966 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "1",
                    "type": "intent_to_file",
                    "attributes": {
                      "creationDate": "2023-08-25",
                      "expirationDate": "2024-08-25",
                      "type": "compensation",
                      "status": "active"
                    }
                  }
                },
                "schema": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Intent To File ID",
                          "example": "600131328"
                        },
                        "type": {
                          "type": "string",
                          "example": "intent_to_file"
                        },
                        "attributes": {
                          "required": [
                            "creationDate",
                            "expirationDate",
                            "status",
                            "type"
                          ],
                          "properties": {
                            "creationDate": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the Intent to File was received at the VA"
                            },
                            "expirationDate": {
                              "type": "string",
                              "format": "date",
                              "description": "Date the Intent to File expires, this is 1 year from the createdDate"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status of the Intent to File",
                              "example": "active"
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of Intent to File filed.",
                              "example": "compensation"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "invalid value for type",
                      "detail": "some-invalid-value is not valid for type"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Unprocessable Entity",
                      "detail": "Invalid claimantSsn parameter"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "properties": {
                      "attributes": {
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "compensation",
                            "description": "Type of Intent To File being submitted. For type \"survivor\", the request must include claimantSsn and be made by a valid Veteran Representative. If the Representative is not a Veteran or a VA employee, this method is currently not available to them, and they should use the Benefits Intake API as an alternative.",
                            "enum": [
                              "compensation",
                              "pension",
                              "survivor"
                            ]
                          },
                          "claimantSsn": {
                            "type": "string",
                            "example": "001122334",
                            "description": "SSN of the Claimant."
                          }
                        },
                        "example": {
                          "type": "compensation"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "type": "intent_to_file",
                    "attributes": {
                      "type": "compensation"
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    },
    "/veterans/{veteranId}/intent-to-file/validate": {
      "post": {
        "summary": "Validate form 0966 Intent to File.",
        "tags": [
          "Intent to File"
        ],
        "operationId": "validate0966itf",
        "security": [
          {
            "productionOauth": [
              "system/claim.read",
              "system/claim.write"
            ]
          },
          {
            "sandboxOauth": [
              "system/claim.read",
              "system/claim.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Validates an Intent to File for disability compensation, pension, and survivor claims.",
        "parameters": [
          {
            "name": "veteranId",
            "in": "path",
            "required": true,
            "example": "1012667145V762142",
            "description": "ID of Veteran",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "0966 Response",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "type": "intent_to_file_validation",
                    "attributes": {
                      "status": "valid"
                    }
                  }
                },
                "schema": {
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "attributes"
                      ],
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "The status of the Intent to File",
                              "enum": [
                                "valid"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "invalid value for type",
                      "detail": "some-invalid-value is not valid for type"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Not authorized",
                      "detail": "Not authorized"
                    }
                  ]
                },
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "required": [
                          "title",
                          "detail"
                        ],
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "HTTP error title"
                          },
                          "detail": {
                            "type": "string",
                            "description": "HTTP error detail"
                          },
                          "source": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Source of error",
                            "properties": {
                              "pointer": {
                                "type": "string",
                                "description": "Pointer to source of error"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "required": [
                      "attributes"
                    ],
                    "properties": {
                      "attributes": {
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "example": "compensation",
                            "description": "Type of Intent To File being submitted. For type \"survivor\", the request must include claimantSsn and be made by a valid Veteran Representative. If the Representative is not a Veteran or a VA employee, this method is currently not available to them, and they should use the Benefits Intake API as an alternative.",
                            "enum": [
                              "compensation",
                              "pension",
                              "survivor"
                            ]
                          },
                          "claimantSsn": {
                            "type": "string",
                            "example": "001122334",
                            "description": "SSN of the Claimant."
                          }
                        },
                        "example": {
                          "type": "compensation"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "data": {
                    "type": "intent_to_file",
                    "attributes": {
                      "type": "compensation"
                    }
                  }
                }
              }
            }
          },
          "required": true
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://sandbox-api.va.gov/services/claims/{version}",
      "description": "VA.gov API sandbox environment",
      "variables": {
        "version": {
          "default": "v2"
        }
      }
    },
    {
      "url": "https://api.va.gov/services/claims/{version}",
      "description": "VA.gov API production environment",
      "variables": {
        "version": {
          "default": "v2"
        }
      }
    }
  ]
}