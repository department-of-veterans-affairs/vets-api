{
  "openapi": "3.0.0",
  "info": {
    "title": "Legacy Appeals",
    "version": "v0",
    "contact": {
      "name": "developer.va.gov"
    },
    "description": "The Legacy Appeals API returns a list of a claimant's active legacy appeals, which are not part of the Appeals Modernization Act (AMA) process. This list can be used to determine whether to opt in to the new decision review process. [Learn more about managing a legacy appeal](https://www.va.gov/decision-reviews/legacy-appeals/).\n\nTo check the status of all decision reviews and appeals for a specified individual, use the [Appeals Status API](/explore/api/appeals-status/docs).\n\nTo file an appeal or decision review, use one of these APIs:\n* [Higher-Level Reviews API](/explore/api/higher-level-reviews/docs)\n* [Notice of Disagreements API](/explore/api/notice-of-disagreements/docs)\n* [Supplemental Claims API](/explore/api/supplemental-claims/docs)\n\n## Technical overview\nThe Legacy Appeals API pulls data from Caseflow, a case management system. It provides decision review and appeal data that can be used for submitting a Higher Level Review, Notice of Disagreement, or Supplemental Claim.\n\n### Authorization and Access\nThe authentication model for the Legacy Appeals API uses OAuth 2.0/OpenID Connect. The following authorization models are supported:\n* [Authorization code flow](/explore/api/legacy-appeals/authorization-code)\n* [Client Credentials Grant (CCG)](/explore/api/legacy-appeals/client-credentials)\n\n**Important:** To get production access using client credentials grant, you must either work for VA or have specific VA agreements in place. If you have questions, [contact us](/support/contact-us).\n"
  },
  "tags": [
    {
      "name": "Legacy Appeals",
      "description": ""
    }
  ],
  "paths": {
    "/legacy-appeals": {
      "get": {
        "summary": "Returns eligible appeals in the legacy process for a Veteran.",
        "tags": [
          "Legacy Appeals"
        ],
        "operationId": "getLegacyAppeals",
        "security": [
          {
            "productionOauth": [
              "veteran/LegacyAppeals.read",
              "representative/LegacyAppeals.read",
              "system/LegacyAppeals.read"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/LegacyAppeals.read",
              "representative/LegacyAppeals.read",
              "system/LegacyAppeals.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns eligible legacy appeals for a Veteran. A legacy appeal is eligible if a statement of the case (SOC)  or supplemental statement of the case (SSOC) has been declared, and if the date of declaration is within the last 60 days.",
        "parameters": [
          {
            "in": "header",
            "name": "X-VA-SSN",
            "required": false,
            "description": "Either X-VA-SSN or X-VA-File-Number is required. Example X-VA-SSN: 123456789",
            "example": "706547821",
            "schema": {
              "$ref": "#/components/schemas/X-VA-SSN"
            }
          },
          {
            "in": "header",
            "name": "X-VA-File-Number",
            "required": false,
            "description": "Either X-VA-SSN or X-VA-File-Number is required. Example X-VA-File-Number: 123456789",
            "schema": {
              "$ref": "#/components/schemas/X-VA-File-Number"
            }
          },
          {
            "in": "header",
            "name": "X-VA-ICN",
            "required": true,
            "description": "Veteran's ICN",
            "example": "1013062086V794840",
            "schema": {
              "$ref": "#/components/schemas/X-VA-ICN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns eligible legacy appeals for a Veteran",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "id": "2760964",
                      "type": "legacyAppeal",
                      "attributes": {
                        "issues": [
                          {
                            "summary": "Service connection, pancreatitis"
                          }
                        ],
                        "veteranFullName": "Elda Z Quigley",
                        "decisionDate": "2021-05-04T00:00:00.000Z",
                        "latestSocSsocDate": "2021-06-12"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/legacyAppeals"
                }
              }
            }
          },
          "404": {
            "description": "Veteran record not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "status": "404",
                      "code": "veteran_not_found",
                      "title": "Veteran Not Found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "422": {
            "description": "Header Errors",
            "content": {
              "application/json": {
                "examples": {
                  "when X-VA-SSN and X-VA-File-Number are missing": {
                    "value": {
                      "errors": [
                        {
                          "title": "Validation error",
                          "detail": "Validation error",
                          "code": "100",
                          "source": {
                            "pointer": "/"
                          },
                          "status": "422"
                        },
                        {
                          "title": "Invalid length",
                          "detail": "'' did not fit within the defined length limits",
                          "code": "142",
                          "source": {
                            "pointer": "/X-VA-SSN"
                          },
                          "status": "422",
                          "meta": {
                            "max_length": 9,
                            "min_length": 9
                          }
                        },
                        {
                          "title": "Invalid pattern",
                          "detail": "'' did not match the defined pattern",
                          "code": "143",
                          "source": {
                            "pointer": "/X-VA-SSN"
                          },
                          "status": "422",
                          "meta": {
                            "regex": "^[0-9]{9}$"
                          }
                        },
                        {
                          "title": "Invalid pattern",
                          "detail": "'' did not match the defined pattern",
                          "code": "143",
                          "source": {
                            "pointer": "/X-VA-File-Number"
                          },
                          "status": "422",
                          "meta": {
                            "regex": "[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]"
                          }
                        },
                        {
                          "title": "Invalid length",
                          "detail": "'' did not fit within the defined length limits",
                          "code": "142",
                          "source": {
                            "pointer": "/X-VA-File-Number"
                          },
                          "status": "422",
                          "meta": {
                            "max_length": 9,
                            "min_length": 1
                          }
                        }
                      ]
                    }
                  },
                  "when X-VA-ICN is missing": {
                    "value": {
                      "errors": [
                        {
                          "title": "Invalid length",
                          "detail": "'' did not fit within the defined length limits",
                          "code": "142",
                          "source": {
                            "pointer": "/X-VA-ICN"
                          },
                          "status": "422",
                          "meta": {
                            "max_length": 17,
                            "min_length": 17
                          }
                        },
                        {
                          "title": "Invalid pattern",
                          "detail": "'' did not match the defined pattern",
                          "code": "143",
                          "source": {
                            "pointer": "/X-VA-ICN"
                          },
                          "status": "422",
                          "meta": {
                            "regex": "^[0-9]{10}V[0-9]{6}$"
                          }
                        }
                      ]
                    }
                  },
                  "when SSN formatted incorrectly": {
                    "value": {
                      "errors": [
                        {
                          "title": "Invalid length",
                          "detail": "'12n-~89' did not fit within the defined length limits",
                          "code": "142",
                          "source": {
                            "pointer": "/X-VA-SSN"
                          },
                          "status": "422",
                          "meta": {
                            "max_length": 9,
                            "min_length": 9
                          }
                        },
                        {
                          "title": "Invalid pattern",
                          "detail": "'12n-~89' did not match the defined pattern",
                          "code": "143",
                          "source": {
                            "pointer": "/X-VA-SSN"
                          },
                          "status": "422",
                          "meta": {
                            "regex": "^[0-9]{9}$"
                          }
                        }
                      ]
                    }
                  },
                  "when ICN formatted incorrectly": {
                    "value": {
                      "errors": [
                        {
                          "title": "Invalid length",
                          "detail": "'12345' did not fit within the defined length limits",
                          "code": "142",
                          "source": {
                            "pointer": "/X-VA-ICN"
                          },
                          "status": "422",
                          "meta": {
                            "max_length": 17,
                            "min_length": 17
                          }
                        },
                        {
                          "title": "Invalid pattern",
                          "detail": "'12345' did not match the defined pattern",
                          "code": "143",
                          "source": {
                            "pointer": "/X-VA-ICN"
                          },
                          "status": "422",
                          "meta": {
                            "regex": "^[0-9]{10}V[0-9]{6}$"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "502": {
            "description": "Unknown Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "502"
                          },
                          "detail": {
                            "type": "string",
                            "example": "Received a 500 response from the upstream server"
                          },
                          "code": {
                            "type": "string",
                            "example": "CASEFLOWSTATUS500"
                          },
                          "title": {
                            "type": "string",
                            "example": "Bad Gateway"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer_token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "productionOauth": {
        "type": "oauth2",
        "description": "The authentication model for the Legacy Appeals API uses OAuth 2.0/OpenID Connect. The following authorization models are supported: [Authorization code flow](https://dev-developer.va.gov/explore/api/legacy-appeals/authorization-code) and [Client Credentials Grant (CCG)](https://dev-developer.va.gov/explore/api/legacy-appeals/client-credentials).",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.va.gov/oauth2/appeals/v1/authorization",
            "tokenUrl": "https://api.va.gov/oauth2/appeals/v1/token",
            "scopes": {
              "veteran/LegacyAppeals.read": "Legacy appeals info",
              "veteran/appeals.read": "Appeals info",
              "representative/LegacyAppeals.read": "Legacy appeals info",
              "representative/appeals.read": "Appeals info"
            }
          },
          "clientCredentials": {
            "tokenUrl": "To get production access, you must either work for VA or have specific VA agreements in place. If you have questions, [contact us](https://dev-developer.va.gov/support/contact-us).",
            "scopes": {
              "system/LegacyAppeals.read": "Legacy appeals info",
              "system/appeals.read": "Appeals info"
            }
          }
        }
      },
      "sandboxOauth": {
        "type": "oauth2",
        "description": "The authentication model for the Legacy Appeals API uses OAuth 2.0/OpenID Connect. The following authorization models are supported: [Authorization code flow](https://dev-developer.va.gov/explore/api/legacy-appeals/authorization-code) and [Client Credentials Grant (CCG)](https://dev-developer.va.gov/explore/api/legacy-appeals/client-credentials).",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://sandbox-api.va.gov/oauth2/appeals/v1/authorization",
            "tokenUrl": "https://sandbox-api.va.gov/oauth2/appeals/v1/token",
            "scopes": {
              "veteran/LegacyAppeals.read": "Legacy appeals info",
              "veteran/appeals.read": "Appeals info",
              "representative/LegacyAppeals.read": "Legacy appeals info",
              "representative/appeals.read": "Appeals info"
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://deptva-eval.okta.com/oauth2/auskff5o6xsoQVngk2p7/v1/token",
            "scopes": {
              "system/LegacyAppeals.read": "Legacy appeals info",
              "system/appeals.read": "Appeals info"
            }
          }
        }
      }
    },
    "schemas": {
      "errorModel": {
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "additionalProperties": false,
              "required": [
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "HTTP error title"
                },
                "detail": {
                  "type": "string",
                  "description": "HTTP error detail"
                },
                "code": {
                  "type": "string",
                  "description": "HTTP error code"
                },
                "source": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "Source of error",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "description": "Pointer to source of error"
                    },
                    "parameter": {
                      "type": "string",
                      "description": "Invalid request parameter"
                    },
                    "header": {
                      "type": "string",
                      "description": "Invalid header"
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "HTTP error code"
                },
                "meta": {
                  "type": "object",
                  "description": "Meta infomation",
                  "properties": {
                    "missing_fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of missing fields"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "legacyAppeal": {
        "properties": {
          "type": {
            "type": "string",
            "example": "legacyAppeal"
          },
          "id": {
            "type": "string",
            "description": "ID from VACOLS (Veteran Appeals Control and Locator Service)",
            "example": "3085659"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "issues": {
                "type": "array",
                "description": "Issues on the Appeal.",
                "items": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string",
                      "description": "Summary of a single Issue.",
                      "example": "Service connection, hearing loss"
                    }
                  }
                }
              },
              "veteranFullName": {
                "type": "string",
                "example": "Junior L Fritsch"
              },
              "decisionDate": {
                "type": "string",
                "description": "Date of the Appeal's original decision.",
                "example": "2018-09-28T00:00:00.000Z"
              },
              "latestSocSsocDate": {
                "type": "string",
                "description": "Date of the Appeal's most recent SOC/SSOC (Statement of Case/Supplemental Statement of Case)",
                "example": "2018-12-29T00:00:00.000Z"
              }
            }
          }
        }
      },
      "legacyAppeals": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/legacyAppeal"
            }
          }
        }
      },
      "nonBlankString": {
        "type": "string",
        "pattern": "[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]"
      },
      "X-VA-File-Number": {
        "allOf": [
          {
            "description": "VA file number (c-file / css)"
          },
          {
            "maxLength": 9
          },
          {
            "$ref": "#/components/schemas/nonBlankString"
          }
        ]
      },
      "X-VA-ICN": {
        "description": "Veteran's Integration Control Number, a unique identifier established via the Master Person Index (MPI)",
        "type": "string",
        "minLength": 17,
        "maxLength": 17,
        "pattern": "^[0-9]{10}V[0-9]{6}$"
      },
      "X-VA-SSN": {
        "description": "social security number",
        "type": "string",
        "minLength": 9,
        "maxLength": 9,
        "pattern": "^[0-9]{9}$"
      }
    }
  },
  "servers": [
    {
      "url": "https://sandbox-api.va.gov/services/appeals/legacy-appeals/{version}",
      "description": "VA.gov API sandbox environment",
      "variables": {
        "version": {
          "default": "v0"
        }
      }
    },
    {
      "url": "https://api.va.gov/services/appeals/legacy-appeals/{version}",
      "description": "VA.gov API production environment",
      "variables": {
        "version": {
          "default": "v0"
        }
      }
    }
  ]
}
