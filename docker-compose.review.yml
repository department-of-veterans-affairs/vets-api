version: '3.4'

x-app: &common
  build:
    args:
      BUNDLE_ENTERPRISE__CONTRIBSYS__COM: "${BUNDLE_ENTERPRISE__CONTRIBSYS__COM}"
      USER_ID: ${VETS_API_USER_ID}
    context: .
  environment:
    RAILS_ENV: development
    BUNDLE_ENTERPRISE__CONTRIBSYS__COM: "${BUNDLE_ENTERPRISE__CONTRIBSYS__COM}"
    "Settings.database_url": "postgis://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DATABASE:-vets_api_development}?pool=4"
    "Settings.test_database_url": "postgis://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DATABASE:-vets_api_test}"
    "Settings.redis.app_data.url": "redis://redis:6379"
    "Settings.redis.sidekiq.url": "redis://redis:6379"
    "Settings.redis.rails_cache.url": "redis://redis:6379"
    "Settings.saml_ssoe.idp_metadata_file": "config/ssoe_idp_sqa_metadata_isam.xml"
    "Settings.betamocks.cache_dir": "config/vets-api-mockdata"
  image: vets-api:${DOCKER_IMAGE:-latest}
  restart: unless-stopped
  volumes:
    - "../vets-api-mockdata:/cache"
    - ../.secret:/app/secret:cached
    - ../.pki:/app/pki:cached
    - shared-vol:/tmp
  working_dir: /app
  depends_on:
    - clamav
    - postgres
    - redis
  links:
    - clamav
    - postgres
    - redis

services:
  clamav:
    image: clamav/clamav
    restart: unless-stopped
    ports:
      - 3310:3310
    volumes:
     - shared-vol:/vets-api
  redis:
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
  postgres:
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-password}"
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      PGDATA: /tmp
    image: postgis/postgis:14-3.3-alpine
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data:cached
  web:
    <<: *common
    command: bash -c "bundle exec rake db:migrate || bundle exec rake db:reset db:migrate && bundle exec rails s -b 0.0.0.0"
    ports:
      - 3000:3000
  worker:
    <<: *common
    command: bundle exec sidekiq -q critical,4 -q tasker,3 -q default,2 -q low,1

volumes:
 shared-vol:
