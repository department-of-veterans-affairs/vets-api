name: Income Limits Data Sync
on:
  workflow_dispatch: null
  schedule:
    - cron: "35 0 28 * *"
env:
  BUCKET_NAME: "sitewide-public-websites-income-limits-data"
  AWS_REGION: "us-gov-west-1"
  TEMP_FOLDER: "income_limits_files"
  NLS_LANG: "AMERICAN_AMERICA.AL32UTF8"
permissions:
  id-token: write
  contents: read 
jobs:
  income_limits_data_sync:
    runs-on: self-hosted
    container:
      image: public.ecr.aws/docker/library/ruby:3.3.3-bullseye
      env:
        SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
        NODE_EXTRA_CA_CERTS: /etc/ssl/certs/ca-certificates.crt
      ports:
        - 80
      volumes:
        - my_docker_volume:/home/runner
        - /etc/ssl/certs:/etc/ssl/certs
      options: --cpus 1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install

      - name: Get VES DB Username
        uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb
        with:
          ssm_parameter: /vets-api/income-limits/ves_db_username
          env_variable_name: VA_INCOME_LIMITS_VES_DB_USERNAME

      - name: Get VES DB Password
        uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb
        with:
          ssm_parameter: /vets-api/income-limits/ves_db_password
          env_variable_name: VA_INCOME_LIMITS_VES_DB_PASSWORD

      - name: Get VES DB SID
        uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb
        with:
          ssm_parameter: /vets-api/income-limits/ves_db_sid
          env_variable_name: VA_INCOME_LIMITS_VES_DB_SID

      - name: Get VES DB Server Name
        uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb
        with:
          ssm_parameter: /vets-api/income-limits/ves_db_server
          env_variable_name: VA_INCOME_LIMITS_VES_DB_SERVER

      - name: Get VES DB Port
        uses: department-of-veterans-affairs/action-inject-ssm-secrets@d8e6de3bde4dd728c9d732baef58b3c854b8c4bb
        with:
          ssm_parameter: /vets-api/income-limits/ves_db_port
          env_variable_name: VA_INCOME_LIMITS_VES_DB_PORT

      - name: Install Oracle Instant Client Libraries
        run: |
          cd /opt
          mkdir -p /opt/oracle
          cd /opt/oracle
          curl https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-basic-linux.x64-21.12.0.0.0dbru.zip -o /opt/oracle/instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
          curl https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-sdk-linux.x64-21.12.0.0.0dbru.zip -o /opt/oracle/instantclient-sdk-linux.x64-21.12.0.0.0dbru.zip
          unzip instantclient-basic-linux.x64-21.12.0.0.0dbru.zip
          unzip instantclient-sdk-linux.x64-21.12.0.0.0dbru.zip
          apt update
          apt install libaio1
          sh -c "echo /opt/oracle/instantclient_21_12 > /etc/ld.so.conf.d/oracle-instantclient.conf"
          ldconfig
          cd $GITHUB_WORKSPACE

      - name: Install Dependencies
        run: |
          gem install ruby-oci8
          gem install csv

      - name: Create Temp Directory
        run: mkdir ${{ env.TEMP_FOLDER }}

      - name: Run Oracle Queries
        run: ruby .github/scripts/income-limits-data-sync.rb

      - name: Copy files to the S3 bucket
        run: |
          aws s3 sync ${{ env.TEMP_FOLDER }} s3://${{ env.BUCKET_NAME }} --acl public-read
