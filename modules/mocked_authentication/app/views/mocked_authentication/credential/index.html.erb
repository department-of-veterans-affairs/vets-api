<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="robots" content="none" />
  <title>VA.gov | Mocked Authentication</title>
  <link
    href="https://unpkg.com/@department-of-veterans-affairs/formation/dist/formation.min.css"
    rel="stylesheet"
    crossorigin="anonymous"
  />
</head>
<style>
  body { min-height: 100vh; margin: 0; display: flex; flex-direction: column; }
  main { flex: 1 }
  .content div:first-of-type > h2 { margin-top: 0; }
  .container { margin: 0 auto; padding: 60px 16px; }
  
  .code-block {
    font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console",
      "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono",
      "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier,
      monospace;
    background: #d9d9d9;
    overflow-y: scroll;
    max-height: 600px;
  }

  pre {
    white-space: pre-wrap;
    overflow-x: auto;
    tab-size: 4;
  }

  code {
    overflow-wrap: break-word;
    display: block;
    color: #333;
    padding: 0 2em;
    margin: -24px 0;
  }

  .header-container {
    min-height: 85px;
    width: 100%;
    text-align: center;
    background: #112e51;
    color: #fff;
    position: relative;
  }

  .header-container h1 {
    margin: unset;
    line-height: 2;
  }

  footer {
    height: 2.5rem;
    width: 100%;
    bottom: 0;
    text-align: center;
  }

  @media screen and (min-width: 1600px) {
    main {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .container {
      max-width: 1400px;
      display: grid;
      grid-template-columns: 600px 700px;
      grid-template-rows: 1fr;
    }
  }
</style>
<body>
  <noscript>
    <p>
      Your browser does not support JavaScript or you do not have JavaScript
      enabled. Please press the Continue button once to proceed with sign-in.
    </p>
  </noscript>
  <header>
    <div
      class="header-container vads-u-display--flex vads-u-flex-direction--row vads-u-flex-wrap--wrap vads-u-align-items--center vads-u-justify-content--space-between"
    >
      <div class="vads-u-margin-left--2 medium-screen:vads-u-margin-left--4">
        <span
          title="VA | Identity"
          class="vads-u-color--white vads-u-text-decoration--none vads-u-font-size--xl small-desktop-screen:vads-u-font-size--2xl"
          ><span class="vads-u-font-weight--bold">VA</span> | Identity</span
        >
      </div>
      <div
        class="vads-u-display--none vads-u-width--full small-desktop-screen:vads-u-display--block medium-screen:vads-u-margin-x--auto small-desktop-screen:vads-u-font-size--2xl medium-screen:vads-u-position--absolute"
      >
        <h1>Mocked Authentication</h1>
      </div>
    </div>
  </header>
  <main>
    <div class="container">
      <section class="content">
        <div>
          <h2>Select a profile to continue</h2>
          <p>
            Select a mock user profile from the dropdown below to continue with
            the mocked authentication flow.
            <em>(*Available only in the local and development environments)</em>
          </p>
          <form>
            <label for="profiles">
              <select id="profiles_select">
                <option value="">Select a profile</option>
                <% @mock_profiles.each do |profile_name, profile| %>
                <option value="<%= profile[:encoded_credential] %>">
                  <%= profile[:credential_payload]['email'] %>
                </option>
                <% end %>
              </select>
            </label>
            <button id="authorize">Continue signing in</button>
          </form>
        </div>
        <div>
          <h2>Mock user profile not what you expected?</h2>
          <p>
            Use the instructions found in the
            <a
              href="https://github.com/department-of-veterans-affairs/vets-api-mockdata"
              rel="noopener noreferrer"
              target="_blank"
            >
              vets-api-mockdata repo</a
            >
            to create and/or update a mocked user.
          </p>
        </div>
        <div>
          <h2>What is Mocked Authentication?</h2>
          <p>
            Read through our
            <a
              href="https://github.com/department-of-veterans-affairs/va.gov-team/tree/master/products/identity/Mocked%20Authentication"
              rel="noopener noreferrer"
              target="_blank"
              >documentation</a
            >
            to find more information on how to use Mocked Authentication.
          </p>
        </div>
      </section>
      <div class="code-block">
        <pre>
        <code id="selected_profile"></code>
      </pre>
      </div>
    </div>
  </main>
  <footer>
    Need help? Reach out in the
    <a
      href="slack://app.slack.com/client/T03FECE8V/CSFV4QTKN"
      rel="noopener noreferrer"
      target="_blank"
    >
      #vsp-identity Slack
    </a>
    channel.
  </footer>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const profileSelectDropdown = document.getElementById('profiles_select')
      const selectedProfileCode = document.getElementById('selected_profile');
      const authorizeBtn = document.getElementById('authorize');
      const profiles = <%= raw(@mock_profiles.to_json) %>;
      const currentUri = new URL(window.location);
      let currentlySelected = {};

      if(!currentUri.searchParams.has('state') || !Object.keys(currentlySelected).length) {
        const copyOfCurrentlySelected =
        selectedProfileCode.innerText = JSON.stringify(currentlySelected.credential_payload || {}, null, 2);
        authorizeBtn.disabled = true;
      }

      profileSelectDropdown
        .addEventListener('change', e => {
          currentlySelected = Object.values(profiles).find(({ encoded_credential }) => encoded_credential === e.target.value) || {}
          selectedProfileCode.innerText = JSON.stringify(currentlySelected.credential_payload ?? {}, null, 2);
          authorizeBtn.disabled = !Object.keys(currentlySelected).length ? true : false;
        })

      authorizeBtn
        .addEventListener('click', e => {
          e.preventDefault();
          const url = `authorize/?state=<%= @state %>&credential_info=${currentlySelected.encoded_credential}`
          window.location = url;
        })
    })
  </script>
</body>
