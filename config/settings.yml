binaries:
  # you can specify a full path in settings.local.yml if necessary
  pdftk: pdftk
  clamdscan: /usr/bin/clamdscan

hostname: www.example.com

# For CORS requests; separate multiple origins with a comma
web_origin: http://localhost:3000,http://localhost:3001,null

db_encryption_key: f01ff8ebd1a2b053ad697ae1f0d86adb48ebb708021e4c76c3807d37f6b4e389d5aa45ea171f2f5074222784c1ee2bb8272390d1b9517a7a6987c22733ef00b2

database_url: postgres:///vets-api

relative_url_root: /

secret_key_base: 8af0fe1e378586520e4324694897eb269bd0fffa1c5be6cc3b4ffb9dbde095d0bef5c7fdab73cd05685d8fe1dd589287d78b38e4de7116fbe14461e414072677

review_instance_slug: ~

sidekiq_admin_panel: false

salesforce:
  env: dev
  signing_key_path: 'spec/fixtures/vic/private.key'
  consumer_key: d669f7d339fd25af442bf75bb643c4c45f0f05fb3cb39cc77521e2011c6bb84086bb624d7ef14d715736

# Settings for Education Benefits
edu:
  prefill: true
  sftp:
    host: ~
    pass: ~
    user: ~
    port: ~


pension_burial:
  prefill: true
  sftp:
    relative_path: '../VETSGOV_PENSION'
  upload:
    enabled: true
    host: 'icmhsgc-test.csrarad.com'
    token: '<PENSIONS_TOKEN>'


# Settings for Vet360
vet360:
  url: "https://int.vet360.va.gov"
  system_name: 'VETSGOV'
  contact_information:
    timeout: 30
    mock: false


# Settings for EVSS
evss:
  url: https://csraciapp6.evss.srarad.com
  cert_path: ~
  key_path: ~
  root_cert_path: ~
  versions:
    claims: 3.0
    common: 11.0
    documents: 3.6
  s3:
    uploads_enabled: false
    aws_access_key_id: EVSS_S3_AWS_ACCESS_KEY_ID_XYZ
    aws_secret_access_key: EVSS_S3_AWS_SECRET_ACCESS_KEY_XYZ
    bucket: evss_s3_bucket
    region: evss_s3_region
  letters:
    timeout: 55
  pciu:
    timeout: 30
  pciu_address:
    timeout: 30
  mock_claims: false
  mock_letters: false
  mock_gi_bill_status: false
  mock_pciu: true
  mock_pciu_address: false
  aws:
    url: http://fake.evss-reference-data-service.dev/v1
    cert_path: ~
    key_path: ~
    root_ca: ~
  jwt:
    issuer: fake_issuer
    key: fake_key
  reference_data_service:
    enabled: false

# Settings for GI Bill Data Service
gids:
  url: https://dev.vets.gov/gids

# Settings for Healthcare Application
# This CA chain is nonsense but allows local development to work with pre-prod environment.
hca:
  prefill: true
  endpoint: https://test-foo.vets.gov
  cert_path: /fake/client/cert/path
  key_path: /fake/client/key/path
  ca:
    - 'VA Internal Root CA.pem'
    - 'VA Internal Subordinate CA 1.pem'
    - 'VA-Internal-S2-ICA1-v1.pem'
    - 'VA-Internal-S2-RCA1-v1.pem'

# Settings for the facility locator
locators:
  vha: https://services3.arcgis.com/aqgBd3l68G8hEFFE/ArcGIS/rest/services/VHA_Facilities/FeatureServer/0
  nca: https://services3.arcgis.com/aqgBd3l68G8hEFFE/ArcGIS/rest/services/NCA_Facilities/FeatureServer/0
  vba: https://services3.arcgis.com/aqgBd3l68G8hEFFE/ArcGIS/rest/services/VBA_Facilities/FeatureServer/0
  vc: https://services3.arcgis.com/aqgBd3l68G8hEFFE/ArcGIS/rest/services/VHA_VetCenters/FeatureServer/0
  vha_access_satisfaction: https://www.accesstoshep.va.gov/
  vha_access_waittime: https://www.accesstopwt.va.gov/
  base_path: https://services3.arcgis.com/aqgBd3l68G8hEFFE/ArcGIS/rest/services/

# Settings for MyHealthEVet
mhv:
  facility_range: [[358,718],[720,758]]
  rx:
    host: https://mhv-api.example.com
    app_token: fake-app-token
    collection_caching_enabled: false
    mock: true
  sm:
    host: https://mhv-api.example.com
    app_token: fake-app-token
    mock: true
  bb:
    collection_caching_enabled: true

# Settings for Master Veteran Index
mvi:
  url: http://ps-dev.commserv.healthevet.va.gov:8110/psim_webservice/IdMWebService
  open_timeout: 2
  timeout: 10
  mock: false
  processing_code: T
  client_cert_path: /fake/client/cert/path
  client_key_path: /fake/client/key/path

# Settings for eMIS
# The certs used here can be obtained from the DevOps team. A different set is required for
# each environment when connecting to the service.
emis:
  mock: false
  host: https://vaausvrsapp81.aac.va.gov
  veteran_status_url: /VIERSService/eMIS/v1/VeteranStatusService
  payment_url: /VIERSService/eMIS/v1/PaymentService
  military_information_url: /VIERSService/eMIS/v1/MilitaryInformationService
  client_cert_path: /fake/client/cert/path
  client_key_path: /fake/client/key/path
  soap_namespaces:
    xmlns:xsd: http://www.w3.org/2001/XMLSchema
    xmlns:xsi: http://www.w3.org/2001/XMLSchema-instance
    xmlns:soap: http://www.w3.org/2003/05/soap-envelope
    xmlns:v1: http://viers.va.gov/cdi/CDI/commonService/v1
    xmlns:v12: http://viers.va.gov/cdi/eMIS/RequestResponse/v1
    xmlns:v13: http://viers.va.gov/cdi/eMIS/commonService/v1
  military_information:
    soap_namespaces:
      xmlns:v11: http://viers.va.gov/cdi/eMIS/RequestResponse/MilitaryInfo/v1
  payment:
    soap_namespaces:
      xmlns:v11: http://viers.va.gov/cdi/eMIS/RequestResponse/Payment/v1
  veteran_status:
    soap_namespaces:
      xmlns:v11: http://viers.va.gov/cdi/eMIS/RequestResponse/VetStatus/v1

appeals:
  mock: true
  app_token: PUBLICDEMO123
  host: https://dsva-appeals-certification-dev-1895622301.us-gov-west-1.elb.amazonaws.com

vic:
  url: https://some.fakesite.com
  signing_key_path: /fake/signing/key/path
  prefill: true

  s3:
    aws_access_key_id: 'aws_access_key_id'
    aws_secret_access_key: 'aws_secret_access_key'
    region: 'region'
    bucket: 'bucket'

# Settings for (preneeds) burials.
# TODO: enpoint needs to be set up for https and production api when available
preneeds:
  host: http://some.fakesite.com
  wsdl: 'config/preneeds/wsdl/preneeds.wsdl'
  burial_form_schema: 'config/preneeds/burial_form_schema.json'

# Settings for Redis
# TODO(knkski): Move all redis settings here?
redis:
  host: localhost
  port: 6379

# Settings for Education Benefits report uploading
reports:
  server: stage-tms.govdelivery.com
  token: ~
  aws:
    access_key_id: ~
    bucket: ~
    region: ~
    secret_access_key: ~

# Settings for SAML authentication
saml:
  cert_path: ~/.certs/vetsgov-localhost.crt
  cert_new_path: ~/.certs/vetsgov-localhost_new.crt
  key_path: ~/.certs/vetsgov-localhost.key
  # Loaded in `config/initializers/saml.rb`, based on `*_path` settings above
  # certificate: ~
  # key: ~
  issuer: saml-rp.vetsgov.localhost
  callback_url: http://localhost:3000/auth/saml/callback
  metadata_url: https://api.idmelabs.com/saml/metadata/provider
  relay: http://localhost:3001/auth/login/callback
  logout_relay: http://localhost:3001/logout

sentry:
  dsn: ~

statsd:
  host: ~
  port: ~

shrine:
  claims:
    type: local
    path: claims
github:
  api_key: abcd1234abcd1234abcd1234abcd1234abcd1234

# Settings for maintenance window API
# Services should be a map from logical service name to PagerDuty service id
maintenance:
  pagerduty_api_url: https://api.pagerduty.com
  pagerduty_api_token: FAKE
  services: ~

# Note: in addition to enabling / disabling betamocks here, you _must_ also
# change the 'mock' bool for each service you want to mock in this settings file
betamocks:
  enabled: true
  recording: false
  cache_dir: /cache
  services_config: config/betamocks/services_config.yml

faraday_socks_proxy:
  enabled: false
  uri: socks5://localhost:2002

