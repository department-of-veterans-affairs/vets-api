{
  "openapi": "3.0.0",
  "info": {
    "title": "Notice of Disagreements",
    "version": "v0",
    "contact": {
      "name": "developer.va.gov"
    },
    "description": "The Notice of Disagreements API lets you create and manage board appeals (known as Notice of Disagreements (NODs)). NODs can be requested after an initial claim, Supplemental Claim, or Higher-Level Review decision is made. [Learn more about Notice of Disagreements](https://www.va.gov/decision-reviews/board-appeal/).\n\nTo check the status of all decision reviews and appeals for a specified individual, use the [Appeals Status API](/explore/api/appeals-status/docs).\n\n## Technical overview\nThe Notice of Disagreements API pulls data from Caseflow, a case management system. It provides decision review and appeal data that can be used for submitting a Notice of Disagreement.\n\n### Authorization and Access\nThe authentication model for the Notice of Disagreements API uses OAuth 2.0/OpenID Connect. The following authorization models are supported:\n* [Authorization code flow](/explore/api/notice-of-disagreements/authorization-code)\n* [Client Credentials Grant (CCG)](/explore/api/notice-of-disagreements/client-credentials)\n\n**Important:** To get production access using client credentials grant, you must either work for VA or have specific VA agreements in place. If you have questions, [contact us](/support/contact-us).\n\n### Submission statuses\nUse the correct GET endpoint to check the status of a Notice of Disagreement submission.\n\nThese endpoints return the status of the submission in Caseflow but not the status of the submission in VBMS, which is the status visible to claimants. Therefore, VBMS statuses are different from the statuses this API returns.\n\nTo check the status of an appeal as it will appear to a claimant, use the [Appeals Status API](/explore/api/appeals-status/docs).\n\n| Status      | What it means |\n| ---        |     ---     |\n| pending      | Submission successfully received by the API but has not yet started processing. |\n| submitting   | Data is transferring to upstream systems but is not yet complete. |\n| submitted   | A submitted status means the data was successfully transferred to the central mail portal.<br /><br />A submitted status is confirmation from the central mail portal that they have received the PDF, but the data is not yet being processed. The Date of Receipt is set when this status is achieved.<br /><br />Submitted is the final status in the sandbox environment.<p> |\n| processing   | Indicates intake has begun, the Intake, Conversion and Mail Handling Services (ICMHS) group is processing the appeal data. |\n| success   | The centralized mail portal, Digital Mail Handling System (DHMS), has received the data. |\n| complete   | Final status. Indicates the document package has been successfully associated with the Veteran and has been received in the correct business area for processing. Claim is now established in VBMS.|\n| error   | An error occurred. See the error code and message for further information. |\n\n### Status simulation in sandbox and staging\nTest submissions do not progress through the same statuses as the production environment. In sandbox and staging, the final status of a submission is `submitted`; however, we allow passing a `Status-Simulation` header on the show endpoints so that you can simulate all production statuses.\n\nStatuses can also be simulated for evidence document uploads.\n\n### Evidence uploads\nOur NOD evidence submission endpoints allow a client to upload a document package (documents and metadata) of supporting evidence for their submission by following these steps.\n1. Use the endpoint `POST /evidence-submissions` to return a JSON service response with the attributes listed below.\n    * `guid`: An identifier used for subsequent evidence upload status requests (not to be confused with the NOD submission GUID)\n    * `location`: A URL to which the actual document package payload can be submitted in the next step. The URL is specific to this upload request, and should not be re-used for subsequent uploads. The URL is valid for 900 seconds (15 minutes) from the time of this response. If the location is not used within 15 minutes, the GUID will expire. Once expired, status checks on the GUID will return a status of `expired`.\n2. Client Request: PUT to the location URL returned in step 1.\n    * Request body should be encoded as binary multipart/form-data, equivalent to that generated by an HTML form submission or using \"curl -F...\".\n    * Authorization is embedded in the signed location URL.\n    * The metadata.json file uploaded to the location URL with the evidence documents MUST contain all required information. See example below. -The JSON key for the metadata.json file is \"metadata\", the initial file is \"content\". Any subsequent file will be \"attachment1\", \"attachment2\", and so forth.\n3. The service response will include:\n    * HTTP status to indicate whether the evidence document upload was successful.\n    * ETag header containing an MD5 hash of the submitted payload. This can be compared to the submitted payload to ensure data integrity of the upload.\n\nExample `metadata.json` file:\n```\n{\n    \"veteranFirstName\": \"Jane\",\n    \"veteranLastName\": \"Doe\",\n    \"fileNumber\": \"012345678\",\n    \"zipCode\": \"94402\",\n    \"source\": \"Vets.gov\",\n    \"docType\": \"316\"\n}\n```\n\nThe API will set the businessLine for your Evidence submission to ensure the documents are routed to the correct group within VA. You may check the status of your evidence document upload by using `GET /evidence-submissions/{id}`. If, after you've uploaded a document, the status hasn't changed to `uploaded` before 15 minutes has elapsed, we recommend retrying the submission to make sure the document properly reaches our servers.\n\nFor NODs, evidence may only be uploaded within 90 days of the NOD reaching submitted status. After 90 days an error will be returned if evidence uploads related to this NOD are attempted.\n\n#### Evidence upload statuses\nThe evidence document upload statuses begin with pending and end with vbms.\n\nNote that until a document status of \"received\", \"processing\", \"success\", or \"vbms\" is returned, a client cannot consider the document as received by VA. In particular a status of \"uploaded\" means that the document package has been transmitted, but possibly not validated. Any errors with the document package (unreadable PDF, etc) may cause the status to change to \"error\".\n\nThe metadata.json file only supports a limited set of characters within the ascii character space. Refer to the `documentUploadMetadata` schema for more details.\n\n| Status      | What it means |\n| ---        |     ---     |\n| pending      | Initial status of the submission when no supporting documents have been uploaded. |\n| uploaded   | Indicates document package has been successfully uploaded (PUT) from the vendor's application system to the API server but has not yet been validated. Date of Receipt is not yet established with this status. |\n| received   | Indicates document package has been received upstream of the API, but is not yet in processing. Date of Receipt is set when this status is achieved. (This is also the final status in the sandbox environment unless further progress is simulated.) |\n| processing   | Indicates intake has begun, the Intake, Conversion and Mail Handling Services (ICMHS) group is processing the appeal data. |\n| success   | The centralized mail portal, Digital Mail Handling System (DHMS), has received the data. |\n| vbms   | Final status. Indicates document package has been received by Veterans Benefits Management System (VBMS). |\n| error   | An error occurred. See the error code and message for further information. |\n\n### Status Caching\nDue to system limitations, status attribute data for these endpoints is cached for 1 hour: \n* GET `/forms/10182/{id}`\n* GET `/evidence-submissions/{id}`\n\nThe updated_at field indicates the last time the status for a given GUID was updated.\n"
  },
  "tags": [
    {
      "name": "Notice of Disagreements",
      "description": ""
    }
  ],
  "paths": {
    "/forms/10182": {
      "post": {
        "summary": "Creates a new Notice of Disagreement",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "createNod",
        "description": "Submits an appeal of type Notice of Disagreement. This endpoint is the same as submitting [VA Form 10182](https://www.va.gov/vaforms/va/pdf/VA10182.pdf) via mail or fax directly to the Board of Veteransâ€™ Appeals.",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Notice of Disagreement created",
            "content": {
              "application/json": {
                "examples": {
                  "minimum fields used": {
                    "value": {
                      "data": {
                        "id": "00000000-1111-2222-3333-444444444444",
                        "type": "noticeOfDisagreement",
                        "attributes": {
                          "status": "pending",
                          "createDate": "2020-01-02T03:04:05.067Z",
                          "updateDate": "2020-01-02T03:04:05.067Z",
                          "formData": {
                            "data": {
                              "type": "noticeOfDisagreement",
                              "attributes": {
                                "veteran": {
                                  "icn": "1234567890V123456",
                                  "fileNumber": "987654321",
                                  "firstName": "JÃ¤Ã±e",
                                  "lastName": "Doe",
                                  "birthDate": "1969-12-31",
                                  "homeless": true,
                                  "phone": {
                                    "areaCode": "555",
                                    "phoneNumber": "8001111"
                                  },
                                  "email": "jdoe@example.com",
                                  "timezone": "America/Chicago"
                                },
                                "boardReviewOption": "evidence_submission",
                                "requestingExtension": false,
                                "appealingVhaDenial": false
                              }
                            },
                            "included": [
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "tinnitus",
                                  "decisionDate": "1900-01-01",
                                  "decisionIssueId": 1,
                                  "ratingIssueReferenceId": "2"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "all fields used": {
                    "value": {
                      "data": {
                        "id": "00000000-1111-2222-3333-444444444444",
                        "type": "noticeOfDisagreement",
                        "attributes": {
                          "status": "pending",
                          "createDate": "2020-01-02T03:04:05.067Z",
                          "updateDate": "2020-01-02T03:04:05.067Z",
                          "formData": {
                            "data": {
                              "type": "noticeOfDisagreement",
                              "attributes": {
                                "veteran": {
                                  "icn": "1234567890V123456",
                                  "fileNumber": "987654321",
                                  "firstName": "JÃ¤Ã±e",
                                  "middleInitial": "Z",
                                  "lastName": "Doe",
                                  "birthDate": "1969-12-31",
                                  "homeless": false,
                                  "address": {
                                    "addressLine1": "123 Main St",
                                    "addressLine2": "Suite #1200",
                                    "addressLine3": "Box 4",
                                    "city": "North Pole",
                                    "countryCodeIso3": "CAN",
                                    "zipCode5": "00000",
                                    "internationalPostalCode": "A1B 23C"
                                  },
                                  "phone": {
                                    "countryCode": "6",
                                    "areaCode": "555",
                                    "phoneNumber": "8001111",
                                    "phoneNumberExt": "2"
                                  },
                                  "email": "bob@bobbytablesemail.com",
                                  "timezone": "America/Chicago"
                                },
                                "claimant": {
                                  "firstName": "First",
                                  "middleInitial": "D",
                                  "lastName": "Last",
                                  "homeless": false,
                                  "birthDate": "1972-05-08",
                                  "address": {
                                    "addressLine1": "456 First St",
                                    "addressLine2": "Apt 5",
                                    "addressLine3": "Box 1",
                                    "city": "Detroit",
                                    "countryCodeIso3": "USA",
                                    "stateCode": "MI",
                                    "zipCode5": "48070"
                                  },
                                  "phone": {
                                    "countryCode": "1",
                                    "areaCode": "555",
                                    "phoneNumber": "8111100",
                                    "phoneNumberExt": "4"
                                  },
                                  "email": "example@email.com",
                                  "timezone": "America/Detroit"
                                },
                                "representative": {
                                  "name": "First Last"
                                },
                                "boardReviewOption": "hearing",
                                "hearingTypePreference": "central_office",
                                "requestingExtension": true,
                                "extensionReason": "good cause substantive reason",
                                "appealingVhaDenial": true
                              }
                            },
                            "included": [
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "tinnitus",
                                  "decisionDate": "1900-01-01",
                                  "decisionIssueId": 1,
                                  "ratingIssueReferenceId": "2",
                                  "ratingDecisionReferenceId": "3",
                                  "disagreementArea": "Effective Date"
                                }
                              },
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "left knee",
                                  "decisionDate": "1900-01-02",
                                  "decisionIssueId": 4,
                                  "ratingIssueReferenceId": "5"
                                }
                              },
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "123456789",
                                  "decisionDate": "1900-01-03",
                                  "ratingIssueReferenceId": "6",
                                  "ratingDecisionReferenceId": "7",
                                  "disagreementArea": "Service"
                                }
                              },
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "PTSD",
                                  "decisionDate": "1900-01-04",
                                  "decisionIssueId": 8,
                                  "ratingDecisionReferenceId": "9"
                                }
                              },
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "Traumatic Brain Injury",
                                  "decisionDate": "1900-01-05",
                                  "decisionIssueId": 10
                                }
                              },
                              {
                                "type": "appealableIssue",
                                "attributes": {
                                  "issue": "right shoulder",
                                  "decisionDate": "1900-01-06",
                                  "disagreementArea": "Effective Date"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/nodCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Violates JSON schema",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Missing required fields",
                      "detail": "One or more expected fields were not found",
                      "code": "145",
                      "source": {
                        "pointer": "/data/attributes"
                      },
                      "status": "422",
                      "meta": {
                        "missing_fields": [
                          "boardReviewOption"
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nodCreate"
              },
              "examples": {
                "minimum fields used": {
                  "value": {
                    "data": {
                      "type": "noticeOfDisagreement",
                      "attributes": {
                        "veteran": {
                          "icn": "1234567890V123456",
                          "fileNumber": "987654321",
                          "firstName": "JÃ¤Ã±e",
                          "lastName": "Doe",
                          "birthDate": "1969-12-31",
                          "homeless": true,
                          "phone": {
                            "areaCode": "555",
                            "phoneNumber": "8001111"
                          },
                          "email": "jdoe@example.com",
                          "timezone": "America/Chicago"
                        },
                        "boardReviewOption": "evidence_submission",
                        "requestingExtension": false,
                        "appealingVhaDenial": false
                      }
                    },
                    "included": [
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "tinnitus",
                          "decisionDate": "1900-01-01",
                          "decisionIssueId": 1,
                          "ratingIssueReferenceId": "2"
                        }
                      }
                    ]
                  }
                },
                "all fields used": {
                  "value": {
                    "data": {
                      "type": "noticeOfDisagreement",
                      "attributes": {
                        "veteran": {
                          "icn": "1234567890V123456",
                          "fileNumber": "987654321",
                          "firstName": "JÃ¤Ã±e",
                          "middleInitial": "Z",
                          "lastName": "Doe",
                          "birthDate": "1969-12-31",
                          "homeless": false,
                          "address": {
                            "addressLine1": "123 Main St",
                            "addressLine2": "Suite #1200",
                            "addressLine3": "Box 4",
                            "city": "North Pole",
                            "countryCodeIso3": "CAN",
                            "zipCode5": "00000",
                            "internationalPostalCode": "A1B 23C"
                          },
                          "phone": {
                            "countryCode": "6",
                            "areaCode": "555",
                            "phoneNumber": "8001111",
                            "phoneNumberExt": "2"
                          },
                          "email": "bob@bobbytablesemail.com",
                          "timezone": "America/Chicago"
                        },
                        "claimant": {
                          "firstName": "First",
                          "middleInitial": "D",
                          "lastName": "Last",
                          "homeless": false,
                          "birthDate": "1972-05-08",
                          "address": {
                            "addressLine1": "456 First St",
                            "addressLine2": "Apt 5",
                            "addressLine3": "Box 1",
                            "city": "Detroit",
                            "countryCodeIso3": "USA",
                            "stateCode": "MI",
                            "zipCode5": "48070"
                          },
                          "phone": {
                            "countryCode": "1",
                            "areaCode": "555",
                            "phoneNumber": "8111100",
                            "phoneNumberExt": "4"
                          },
                          "email": "example@email.com",
                          "timezone": "America/Detroit"
                        },
                        "representative": {
                          "name": "First Last"
                        },
                        "boardReviewOption": "hearing",
                        "hearingTypePreference": "central_office",
                        "requestingExtension": true,
                        "extensionReason": "good cause substantive reason",
                        "appealingVhaDenial": true
                      }
                    },
                    "included": [
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "tinnitus",
                          "decisionDate": "1900-01-01",
                          "decisionIssueId": 1,
                          "ratingIssueReferenceId": "2",
                          "ratingDecisionReferenceId": "3",
                          "disagreementArea": "Effective Date"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "left knee",
                          "decisionDate": "1900-01-02",
                          "decisionIssueId": 4,
                          "ratingIssueReferenceId": "5"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "123456789",
                          "decisionDate": "1900-01-03",
                          "ratingIssueReferenceId": "6",
                          "ratingDecisionReferenceId": "7",
                          "disagreementArea": "Service"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "PTSD",
                          "decisionDate": "1900-01-04",
                          "decisionIssueId": 8,
                          "ratingDecisionReferenceId": "9"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "Traumatic Brain Injury",
                          "decisionDate": "1900-01-05",
                          "decisionIssueId": 10
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "right shoulder",
                          "decisionDate": "1900-01-06",
                          "disagreementArea": "Effective Date"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/forms/10182/{id}": {
      "get": {
        "summary": "Shows a specific Notice of Disagreement. (a.k.a. the Show endpoint)",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "showNod",
        "description": "Returns all of the data associated with a specific Notice of Disagreement.",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice of Disagreement UUID",
            "example": "02bbbe56-443c-42fa-aaf2-ef6200a6eddd",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Info about a single Notice of Disagreement",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "00000000-1111-2222-3333-444444444444",
                    "type": "noticeOfDisagreement",
                    "attributes": {
                      "status": "pending",
                      "createDate": "2020-01-02T03:04:05.067Z",
                      "updateDate": "2020-01-02T03:04:05.067Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/nodShowResponse"
                }
              }
            }
          },
          "404": {
            "description": "Notice of Disagreement not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "404",
                      "detail": "NoticeOfDisagreement with uuid 00000000-0000-0000-0000-000000000000 not found",
                      "status": "404",
                      "title": "Record not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        }
      }
    },
    "/forms/10182/{id}/download": {
      "get": {
        "summary": "Download a watermarked copy of a submitted Notice of Disagreement",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "downloadNod",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "description": "Returns a watermarked copy of a Notice of Disagreement PDF as submitted to the VA. PDFs are available\nwith the following caveats:\n\n1. The PDF download will become available only after after the Notice of Disagreement has progressed to\n   the 'submitted' state.\n2. The PDF will stop being available one week after the Notice of Disagreement has progressed to the\n   'completed' state. This is when the Veteran's personally identifying information is purged from our servers.\n",
        "parameters": [
          {
            "name": "icn",
            "description": "ICN of the Veteran associated with the Notice of Disagreement",
            "example": "0123456789V012345",
            "schema": {
              "type": "string",
              "pattern": "^[0-9]{10}V[0-9]{6}$",
              "minLength": 17,
              "maxLength": 17
            },
            "in": "query",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Notice of Disagreement ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "44444444-5555-6666-7777-888888888888",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "file"
                }
              }
            }
          },
          "404": {
            "description": "Notice of Disagreement record was not found, or the provided 'icn' query parameter does not match the record's ICN",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "404",
                      "detail": "NoticeOfDisagreement with uuid 44444444-5555-6666-7777-888888888888 not found",
                      "status": "404",
                      "title": "Record not found"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "410": {
            "description": "Personally identifying information gone",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "code": "410",
                      "detail": "PDF for NoticeOfDisagreement with id 44444444-5555-6666-7777-888888888888 cannot be downloaded because the form data was deleted from the server after the PII retention period expired",
                      "status": "410",
                      "title": "PDF download expired"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "422": {
            "description": "Missing 'icn' query parameter",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Unprocessable Entity",
                      "detail": "'icn' parameter is required",
                      "code": "422",
                      "status": "422"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        }
      }
    },
    "/schemas/{schema_type}": {
      "get": {
        "summary": "Gets the Notice of Disagreement JSON Schema.",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "nodSchema",
        "description": "Returns the [JSON Schema](https://json-schema.org/) for the `POST /forms/10182` endpoint.",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "schema_type",
            "in": "path",
            "description": "Schema type. Can be: `10182`, `address`, `nonBlankString`, `phone`, `timezone`",
            "required": true,
            "examples": {
              "10182": {
                "value": "10182"
              },
              "address": {
                "value": "address"
              },
              "nonBlankString": {
                "value": "nonBlankString"
              },
              "phone": {
                "value": "phone"
              },
              "timezone": {
                "value": "timezone"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The JSON schema for the given `schema_type` parameter",
            "content": {
              "application/json": {
                "examples": {
                  "10182": {
                    "value": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "JSON Schema for VA Form 10182",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "noticeOfDisagreement"
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "veteran": {
                                  "type": "object",
                                  "properties": {
                                    "ssn": {
                                      "allOf": [
                                        {
                                          "$ref": "ssn.json"
                                        },
                                        {
                                          "description": "Veteran's SSN"
                                        }
                                      ]
                                    },
                                    "icn": {
                                      "$ref": "icn.json"
                                    },
                                    "firstName": {
                                      "allOf": [
                                        {
                                          "description": "Veteran's first name",
                                          "minLength": 1,
                                          "maxLength": 255
                                        },
                                        {
                                        },
                                        {
                                          "$ref": "nonBlankString.json"
                                        }
                                      ]
                                    },
                                    "middleInitial": {
                                      "allOf": [
                                        {
                                          "description": "Veteran's middle initial",
                                          "minLength": 1,
                                          "maxLength": 1
                                        },
                                        {
                                          "$ref": "nonBlankString.json"
                                        }
                                      ]
                                    },
                                    "lastName": {
                                      "allOf": [
                                        {
                                          "description": "Veteran's last name",
                                          "minLength": 1,
                                          "maxLength": 255
                                        },
                                        {
                                          "$ref": "nonBlankString.json"
                                        }
                                      ]
                                    },
                                    "fileNumber": {
                                      "$ref": "fileNumber.json"
                                    },
                                    "birthDate": {
                                      "description": "Veteran's birth date",
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "homeless": {
                                      "type": "boolean"
                                    },
                                    "address": {
                                      "$ref": "address.json"
                                    },
                                    "phone": {
                                      "$ref": "phone.json"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "minLength": 6,
                                      "maxLength": 255
                                    },
                                    "timezone": {
                                      "description": "Veteran's timezone. Used for adding the current date to the signature according to the veteran's local time. If not specified, the current UTC date will be used for the signature (which may be ahead or behind the local date).",
                                      "$ref": "timezone.json"
                                    }
                                  },
                                  "required": [
                                    "icn",
                                    "fileNumber",
                                    "firstName",
                                    "lastName",
                                    "birthDate",
                                    "homeless",
                                    "phone",
                                    "email"
                                  ],
                                  "if": {
                                    "properties": {
                                      "homeless": {
                                        "const": false
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "address"
                                    ]
                                  }
                                },
                                "claimant": {
                                  "type": "object",
                                  "description": "If the claimant is a non-Veteran, claimant information is required. Without this information, we will be unable to identify the claimant. If you're a healthcare provider or an employee of a healthcare provider requesting review of a VA payment decision, you must identify the healthcare provider as the claimant and complete all relevant information in the claimant object.",
                                  "properties": {
                                    "firstName": {
                                      "allOf": [
                                        {
                                          "description": "Non-Veteran claimant's first name",
                                          "minLength": 1,
                                          "maxLength": 255
                                        },
                                        {
                                          "$ref": "nonBlankString.json"
                                        },
                                        {
                                        }
                                      ]
                                    },
                                    "middleInitial": {
                                      "allOf": [
                                        {
                                          "description": "Non-Veteran Claimant's middle initial",
                                          "minLength": 1,
                                          "maxLength": 1
                                        },
                                        {
                                          "$ref": "nonBlankString.json"
                                        }
                                      ]
                                    },
                                    "lastName": {
                                      "allOf": [
                                        {
                                          "description": "Non-Veteran Claimant's last name",
                                          "minLength": 1,
                                          "maxLength": 255
                                        },
                                        {
                                          "$ref": "nonBlankString.json"
                                        }
                                      ]
                                    },
                                    "birthDate": {
                                      "description": "Non-Veteran claimant's birth date",
                                      "type": "string",
                                      "format": "date"
                                    },
                                    "homeless": {
                                      "type": "boolean"
                                    },
                                    "address": {
                                      "$ref": "address.json"
                                    },
                                    "phone": {
                                      "$ref": "phone.json"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "minLength": 6,
                                      "maxLength": 255
                                    },
                                    "timezone": {
                                      "description": "Veteran's timezone. Used for adding the current date to the signature according to the veteran's local time. If not specified, the current UTC date will be used for the signature (which may be ahead or behind the local date).",
                                      "$ref": "timezone.json"
                                    }
                                  },
                                  "required": [
                                    "homeless",
                                    "phone",
                                    "email"
                                  ],
                                  "if": {
                                    "properties": {
                                      "homeless": {
                                        "const": false
                                      }
                                    }
                                  },
                                  "then": {
                                    "required": [
                                      "address"
                                    ]
                                  }
                                },
                                "representative": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "minLength": 1,
                                      "maxLength": 120
                                    }
                                  }
                                },
                                "boardReviewOption": {
                                  "type": "string",
                                  "enum": [
                                    "direct_review",
                                    "evidence_submission",
                                    "hearing"
                                  ]
                                },
                                "hearingTypePreference": {
                                  "type": "string",
                                  "enum": [
                                    "virtual_hearing",
                                    "video_conference",
                                    "central_office"
                                  ]
                                },
                                "requestingExtension": {
                                  "type": "boolean",
                                  "description": "Set to true to request a filing extension. An extensionReason must be provided if true."
                                },
                                "extensionReason": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 2300,
                                  "description": "Explanation why you believe there is good cause for the extension. If an extensionReason is provided, requestingExtension must be true."
                                },
                                "appealingVhaDenial": {
                                  "type": "boolean",
                                  "description": "Set to true if you are appealing a denial of benefits by the Veterans Health Administration (VHA)."
                                }
                              },
                              "required": [
                                "boardReviewOption"
                              ],
                              "if": {
                                "properties": {
                                  "requestingExtension": {
                                    "const": true
                                  }
                                }
                              },
                              "then": {
                                "required": [
                                  "extensionReason"
                                ]
                              }
                            }
                          },
                          "required": [
                            "type",
                            "attributes"
                          ]
                        },
                        "included": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "appealableIssue"
                                ]
                              },
                              "attributes": {
                                "type": "object",
                                "properties": {
                                  "issue": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 180
                                  },
                                  "decisionDate": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "decisionIssueId": {
                                    "type": "integer"
                                  },
                                  "ratingIssueReferenceId": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "ratingDecisionReferenceId": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 255
                                  },
                                  "disagreementArea": {
                                    "type": "string",
                                    "maxLength": 90
                                  }
                                },
                                "required": [
                                  "issue",
                                  "decisionDate"
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "attributes"
                            ]
                          },
                          "minItems": 1,
                          "maxItems": 100,
                          "uniqueItems": true
                        }
                      },
                      "required": [
                        "data",
                        "included"
                      ]
                    }
                  },
                  "address": {
                    "value": {
                      "$schema": "http://json-schema.org/draft-2020-12/schema#",
                      "description": "JSON Schema for VA Decision Review Forms: 'address'",
                      "properties": {
                        "address": {
                          "type": "object",
                          "properties": {
                            "addressLine1": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 60
                            },
                            "addressLine2": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 30
                            },
                            "addressLine3": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 10
                            },
                            "city": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 60
                            },
                            "stateCode": {
                              "type": "string",
                              "enum": [
                                "AL",
                                "AK",
                                "AS",
                                "AZ",
                                "AR",
                                "AA",
                                "AE",
                                "AP",
                                "CA",
                                "CO",
                                "CT",
                                "DE",
                                "DC",
                                "FM",
                                "FL",
                                "GA",
                                "GU",
                                "HI",
                                "ID",
                                "IL",
                                "IN",
                                "IA",
                                "KS",
                                "KY",
                                "LA",
                                "ME",
                                "MH",
                                "MD",
                                "MA",
                                "MI",
                                "MN",
                                "MS",
                                "MO",
                                "MT",
                                "NE",
                                "NV",
                                "NH",
                                "NJ",
                                "NM",
                                "NY",
                                "NC",
                                "ND",
                                "MP",
                                "OH",
                                "OK",
                                "OR",
                                "PW",
                                "PA",
                                "PR",
                                "RI",
                                "SC",
                                "SD",
                                "TN",
                                "TX",
                                "UT",
                                "VT",
                                "VI",
                                "VA",
                                "WA",
                                "WV",
                                "WI",
                                "WY"
                              ]
                            },
                            "countryCodeIso3": {
                              "description": "Three letter ISO 3166-1 country code",
                              "type": "string",
                              "pattern": "^[A-Z]{3}$",
                              "minLength": 3,
                              "maxLength": 3,
                              "example": "USA"
                            },
                            "zipCode5": {
                              "type": "string",
                              "description": "Five digit zipcode. Use \"00000\" if address is outside the United States",
                              "pattern": "^[0-9]{5}$",
                              "minLength": 5,
                              "maxLength": 5
                            },
                            "internationalPostalCode": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 16
                            }
                          },
                          "required": [
                            "addressLine1",
                            "city",
                            "countryCodeIso3",
                            "zipCode5"
                          ]
                        }
                      }
                    }
                  },
                  "nonBlankString": {
                    "value": {
                      "$schema": "http://json-schema.org/draft-2020-12/schema#",
                      "description": "JSON Schema for VA Decision Review Forms: 'nonBlankString'",
                      "properties": {
                        "nonBlankString": {
                          "type": "string",
                          "pattern": "[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]"
                        }
                      }
                    }
                  },
                  "phone": {
                    "value": {
                      "$schema": "http://json-schema.org/draft-2020-12/schema#",
                      "description": "JSON Schema for VA Decision Review Forms: 'phone'",
                      "properties": {
                        "phone": {
                          "type": "object",
                          "properties": {
                            "countryCode": {
                              "type": "string",
                              "pattern": "^[0-9]+$",
                              "minLength": 1,
                              "maxLength": 3
                            },
                            "areaCode": {
                              "type": "string",
                              "pattern": "^[0-9]{1,4}$",
                              "minLength": 1,
                              "maxLength": 4
                            },
                            "phoneNumber": {
                              "type": "string",
                              "pattern": "^[0-9]{1,14}$",
                              "minLength": 1,
                              "maxLength": 14
                            },
                            "phoneNumberExt": {
                              "type": "string",
                              "pattern": "^[a-zA-Z0-9]{1,10}$",
                              "minLength": 1,
                              "maxLength": 10
                            }
                          },
                          "required": [
                            "areaCode",
                            "phoneNumber"
                          ]
                        }
                      }
                    }
                  },
                  "timezone": {
                    "value": {
                      "$schema": "http://json-schema.org/draft-2020-12/schema#",
                      "description": "JSON Schema for VA Decision Review Forms: 'timezone'",
                      "properties": {
                        "timezone": {
                          "type": "string",
                          "enum": [
                            "Abu Dhabi",
                            "Adelaide",
                            "Africa/Abidjan",
                            "Africa/Accra",
                            "Africa/Addis_Ababa",
                            "Africa/Algiers",
                            "Africa/Asmara",
                            "Africa/Asmera",
                            "Africa/Bamako",
                            "Africa/Bangui",
                            "Africa/Banjul",
                            "Africa/Bissau",
                            "Africa/Blantyre",
                            "Africa/Brazzaville",
                            "Africa/Bujumbura",
                            "Africa/Cairo",
                            "Africa/Casablanca",
                            "Africa/Ceuta",
                            "Africa/Conakry",
                            "Africa/Dakar",
                            "Africa/Dar_es_Salaam",
                            "Africa/Djibouti",
                            "Africa/Douala",
                            "Africa/El_Aaiun",
                            "Africa/Freetown",
                            "Africa/Gaborone",
                            "Africa/Harare",
                            "Africa/Johannesburg",
                            "Africa/Juba",
                            "Africa/Kampala",
                            "Africa/Khartoum",
                            "Africa/Kigali",
                            "Africa/Kinshasa",
                            "Africa/Lagos",
                            "Africa/Libreville",
                            "Africa/Lome",
                            "Africa/Luanda",
                            "Africa/Lubumbashi",
                            "Africa/Lusaka",
                            "Africa/Malabo",
                            "Africa/Maputo",
                            "Africa/Maseru",
                            "Africa/Mbabane",
                            "Africa/Mogadishu",
                            "Africa/Monrovia",
                            "Africa/Nairobi",
                            "Africa/Ndjamena",
                            "Africa/Niamey",
                            "Africa/Nouakchott",
                            "Africa/Ouagadougou",
                            "Africa/Porto-Novo",
                            "Africa/Sao_Tome",
                            "Africa/Timbuktu",
                            "Africa/Tripoli",
                            "Africa/Tunis",
                            "Africa/Windhoek",
                            "Alaska",
                            "Almaty",
                            "America/Adak",
                            "America/Anchorage",
                            "America/Anguilla",
                            "America/Antigua",
                            "America/Araguaina",
                            "America/Argentina/Buenos_Aires",
                            "America/Argentina/Catamarca",
                            "America/Argentina/ComodRivadavia",
                            "America/Argentina/Cordoba",
                            "America/Argentina/Jujuy",
                            "America/Argentina/La_Rioja",
                            "America/Argentina/Mendoza",
                            "America/Argentina/Rio_Gallegos",
                            "America/Argentina/Salta",
                            "America/Argentina/San_Juan",
                            "America/Argentina/San_Luis",
                            "America/Argentina/Tucuman",
                            "America/Argentina/Ushuaia",
                            "America/Aruba",
                            "America/Asuncion",
                            "America/Atikokan",
                            "America/Atka",
                            "America/Bahia",
                            "America/Bahia_Banderas",
                            "America/Barbados",
                            "America/Belem",
                            "America/Belize",
                            "America/Blanc-Sablon",
                            "America/Boa_Vista",
                            "America/Bogota",
                            "America/Boise",
                            "America/Buenos_Aires",
                            "America/Cambridge_Bay",
                            "America/Campo_Grande",
                            "America/Cancun",
                            "America/Caracas",
                            "America/Catamarca",
                            "America/Cayenne",
                            "America/Cayman",
                            "America/Chicago",
                            "America/Chihuahua",
                            "America/Coral_Harbour",
                            "America/Cordoba",
                            "America/Costa_Rica",
                            "America/Creston",
                            "America/Cuiaba",
                            "America/Curacao",
                            "America/Danmarkshavn",
                            "America/Dawson",
                            "America/Dawson_Creek",
                            "America/Denver",
                            "America/Detroit",
                            "America/Dominica",
                            "America/Edmonton",
                            "America/Eirunepe",
                            "America/El_Salvador",
                            "America/Ensenada",
                            "America/Fort_Nelson",
                            "America/Fort_Wayne",
                            "America/Fortaleza",
                            "America/Glace_Bay",
                            "America/Godthab",
                            "America/Goose_Bay",
                            "America/Grand_Turk",
                            "America/Grenada",
                            "America/Guadeloupe",
                            "America/Guatemala",
                            "America/Guayaquil",
                            "America/Guyana",
                            "America/Halifax",
                            "America/Havana",
                            "America/Hermosillo",
                            "America/Indiana/Indianapolis",
                            "America/Indiana/Knox",
                            "America/Indiana/Marengo",
                            "America/Indiana/Petersburg",
                            "America/Indiana/Tell_City",
                            "America/Indiana/Vevay",
                            "America/Indiana/Vincennes",
                            "America/Indiana/Winamac",
                            "America/Indianapolis",
                            "America/Inuvik",
                            "America/Iqaluit",
                            "America/Jamaica",
                            "America/Jujuy",
                            "America/Juneau",
                            "America/Kentucky/Louisville",
                            "America/Kentucky/Monticello",
                            "America/Knox_IN",
                            "America/Kralendijk",
                            "America/La_Paz",
                            "America/Lima",
                            "America/Los_Angeles",
                            "America/Louisville",
                            "America/Lower_Princes",
                            "America/Maceio",
                            "America/Managua",
                            "America/Manaus",
                            "America/Marigot",
                            "America/Martinique",
                            "America/Matamoros",
                            "America/Mazatlan",
                            "America/Mendoza",
                            "America/Menominee",
                            "America/Merida",
                            "America/Metlakatla",
                            "America/Mexico_City",
                            "America/Miquelon",
                            "America/Moncton",
                            "America/Monterrey",
                            "America/Montevideo",
                            "America/Montreal",
                            "America/Montserrat",
                            "America/Nassau",
                            "America/New_York",
                            "America/Nipigon",
                            "America/Nome",
                            "America/Noronha",
                            "America/North_Dakota/Beulah",
                            "America/North_Dakota/Center",
                            "America/North_Dakota/New_Salem",
                            "America/Ojinaga",
                            "America/Panama",
                            "America/Pangnirtung",
                            "America/Paramaribo",
                            "America/Phoenix",
                            "America/Port-au-Prince",
                            "America/Port_of_Spain",
                            "America/Porto_Acre",
                            "America/Porto_Velho",
                            "America/Puerto_Rico",
                            "America/Punta_Arenas",
                            "America/Rainy_River",
                            "America/Rankin_Inlet",
                            "America/Recife",
                            "America/Regina",
                            "America/Resolute",
                            "America/Rio_Branco",
                            "America/Rosario",
                            "America/Santa_Isabel",
                            "America/Santarem",
                            "America/Santiago",
                            "America/Santo_Domingo",
                            "America/Sao_Paulo",
                            "America/Scoresbysund",
                            "America/Shiprock",
                            "America/Sitka",
                            "America/St_Barthelemy",
                            "America/St_Johns",
                            "America/St_Kitts",
                            "America/St_Lucia",
                            "America/St_Thomas",
                            "America/St_Vincent",
                            "America/Swift_Current",
                            "America/Tegucigalpa",
                            "America/Thule",
                            "America/Thunder_Bay",
                            "America/Tijuana",
                            "America/Toronto",
                            "America/Tortola",
                            "America/Vancouver",
                            "America/Virgin",
                            "America/Whitehorse",
                            "America/Winnipeg",
                            "America/Yakutat",
                            "America/Yellowknife",
                            "American Samoa",
                            "Amsterdam",
                            "Antarctica/Casey",
                            "Antarctica/Davis",
                            "Antarctica/DumontDUrville",
                            "Antarctica/Macquarie",
                            "Antarctica/Mawson",
                            "Antarctica/McMurdo",
                            "Antarctica/Palmer",
                            "Antarctica/Rothera",
                            "Antarctica/South_Pole",
                            "Antarctica/Syowa",
                            "Antarctica/Troll",
                            "Antarctica/Vostok",
                            "Arctic/Longyearbyen",
                            "Arizona",
                            "Asia/Aden",
                            "Asia/Almaty",
                            "Asia/Amman",
                            "Asia/Anadyr",
                            "Asia/Aqtau",
                            "Asia/Aqtobe",
                            "Asia/Ashgabat",
                            "Asia/Ashkhabad",
                            "Asia/Atyrau",
                            "Asia/Baghdad",
                            "Asia/Bahrain",
                            "Asia/Baku",
                            "Asia/Bangkok",
                            "Asia/Barnaul",
                            "Asia/Beirut",
                            "Asia/Bishkek",
                            "Asia/Brunei",
                            "Asia/Calcutta",
                            "Asia/Chita",
                            "Asia/Choibalsan",
                            "Asia/Chongqing",
                            "Asia/Chungking",
                            "Asia/Colombo",
                            "Asia/Dacca",
                            "Asia/Damascus",
                            "Asia/Dhaka",
                            "Asia/Dili",
                            "Asia/Dubai",
                            "Asia/Dushanbe",
                            "Asia/Famagusta",
                            "Asia/Gaza",
                            "Asia/Harbin",
                            "Asia/Hebron",
                            "Asia/Ho_Chi_Minh",
                            "Asia/Hong_Kong",
                            "Asia/Hovd",
                            "Asia/Irkutsk",
                            "Asia/Istanbul",
                            "Asia/Jakarta",
                            "Asia/Jayapura",
                            "Asia/Jerusalem",
                            "Asia/Kabul",
                            "Asia/Kamchatka",
                            "Asia/Karachi",
                            "Asia/Kashgar",
                            "Asia/Kathmandu",
                            "Asia/Katmandu",
                            "Asia/Khandyga",
                            "Asia/Kolkata",
                            "Asia/Krasnoyarsk",
                            "Asia/Kuala_Lumpur",
                            "Asia/Kuching",
                            "Asia/Kuwait",
                            "Asia/Macao",
                            "Asia/Macau",
                            "Asia/Magadan",
                            "Asia/Makassar",
                            "Asia/Manila",
                            "Asia/Muscat",
                            "Asia/Nicosia",
                            "Asia/Novokuznetsk",
                            "Asia/Novosibirsk",
                            "Asia/Omsk",
                            "Asia/Oral",
                            "Asia/Phnom_Penh",
                            "Asia/Pontianak",
                            "Asia/Pyongyang",
                            "Asia/Qatar",
                            "Asia/Qostanay",
                            "Asia/Qyzylorda",
                            "Asia/Rangoon",
                            "Asia/Riyadh",
                            "Asia/Saigon",
                            "Asia/Sakhalin",
                            "Asia/Samarkand",
                            "Asia/Seoul",
                            "Asia/Shanghai",
                            "Asia/Singapore",
                            "Asia/Srednekolymsk",
                            "Asia/Taipei",
                            "Asia/Tashkent",
                            "Asia/Tbilisi",
                            "Asia/Tehran",
                            "Asia/Tel_Aviv",
                            "Asia/Thimbu",
                            "Asia/Thimphu",
                            "Asia/Tokyo",
                            "Asia/Tomsk",
                            "Asia/Ujung_Pandang",
                            "Asia/Ulaanbaatar",
                            "Asia/Ulan_Bator",
                            "Asia/Urumqi",
                            "Asia/Ust-Nera",
                            "Asia/Vientiane",
                            "Asia/Vladivostok",
                            "Asia/Yakutsk",
                            "Asia/Yangon",
                            "Asia/Yekaterinburg",
                            "Asia/Yerevan",
                            "Astana",
                            "Athens",
                            "Atlantic Time (Canada)",
                            "Atlantic/Azores",
                            "Atlantic/Bermuda",
                            "Atlantic/Canary",
                            "Atlantic/Cape_Verde",
                            "Atlantic/Faeroe",
                            "Atlantic/Faroe",
                            "Atlantic/Jan_Mayen",
                            "Atlantic/Madeira",
                            "Atlantic/Reykjavik",
                            "Atlantic/South_Georgia",
                            "Atlantic/St_Helena",
                            "Atlantic/Stanley",
                            "Auckland",
                            "Australia/ACT",
                            "Australia/Adelaide",
                            "Australia/Brisbane",
                            "Australia/Broken_Hill",
                            "Australia/Canberra",
                            "Australia/Currie",
                            "Australia/Darwin",
                            "Australia/Eucla",
                            "Australia/Hobart",
                            "Australia/LHI",
                            "Australia/Lindeman",
                            "Australia/Lord_Howe",
                            "Australia/Melbourne",
                            "Australia/NSW",
                            "Australia/North",
                            "Australia/Perth",
                            "Australia/Queensland",
                            "Australia/South",
                            "Australia/Sydney",
                            "Australia/Tasmania",
                            "Australia/Victoria",
                            "Australia/West",
                            "Australia/Yancowinna",
                            "Azores",
                            "Baghdad",
                            "Baku",
                            "Bangkok",
                            "Beijing",
                            "Belgrade",
                            "Berlin",
                            "Bern",
                            "Bogota",
                            "Brasilia",
                            "Bratislava",
                            "Brazil/Acre",
                            "Brazil/DeNoronha",
                            "Brazil/East",
                            "Brazil/West",
                            "Brisbane",
                            "Brussels",
                            "Bucharest",
                            "Budapest",
                            "Buenos Aires",
                            "CET",
                            "CST6CDT",
                            "Cairo",
                            "Canada/Atlantic",
                            "Canada/Central",
                            "Canada/Eastern",
                            "Canada/Mountain",
                            "Canada/Newfoundland",
                            "Canada/Pacific",
                            "Canada/Saskatchewan",
                            "Canada/Yukon",
                            "Canberra",
                            "Cape Verde Is.",
                            "Caracas",
                            "Casablanca",
                            "Central America",
                            "Central Time (US & Canada)",
                            "Chatham Is.",
                            "Chennai",
                            "Chihuahua",
                            "Chile/Continental",
                            "Chile/EasterIsland",
                            "Chongqing",
                            "Copenhagen",
                            "Cuba",
                            "Darwin",
                            "Dhaka",
                            "Dublin",
                            "EET",
                            "EST",
                            "EST5EDT",
                            "Eastern Time (US & Canada)",
                            "Edinburgh",
                            "Egypt",
                            "Eire",
                            "Ekaterinburg",
                            "Etc/GMT",
                            "Etc/GMT+0",
                            "Etc/GMT+1",
                            "Etc/GMT+10",
                            "Etc/GMT+11",
                            "Etc/GMT+12",
                            "Etc/GMT+2",
                            "Etc/GMT+3",
                            "Etc/GMT+4",
                            "Etc/GMT+5",
                            "Etc/GMT+6",
                            "Etc/GMT+7",
                            "Etc/GMT+8",
                            "Etc/GMT+9",
                            "Etc/GMT-0",
                            "Etc/GMT-1",
                            "Etc/GMT-10",
                            "Etc/GMT-11",
                            "Etc/GMT-12",
                            "Etc/GMT-13",
                            "Etc/GMT-14",
                            "Etc/GMT-2",
                            "Etc/GMT-3",
                            "Etc/GMT-4",
                            "Etc/GMT-5",
                            "Etc/GMT-6",
                            "Etc/GMT-7",
                            "Etc/GMT-8",
                            "Etc/GMT-9",
                            "Etc/GMT0",
                            "Etc/Greenwich",
                            "Etc/UCT",
                            "Etc/UTC",
                            "Etc/Universal",
                            "Etc/Zulu",
                            "Europe/Amsterdam",
                            "Europe/Andorra",
                            "Europe/Astrakhan",
                            "Europe/Athens",
                            "Europe/Belfast",
                            "Europe/Belgrade",
                            "Europe/Berlin",
                            "Europe/Bratislava",
                            "Europe/Brussels",
                            "Europe/Bucharest",
                            "Europe/Budapest",
                            "Europe/Busingen",
                            "Europe/Chisinau",
                            "Europe/Copenhagen",
                            "Europe/Dublin",
                            "Europe/Gibraltar",
                            "Europe/Guernsey",
                            "Europe/Helsinki",
                            "Europe/Isle_of_Man",
                            "Europe/Istanbul",
                            "Europe/Jersey",
                            "Europe/Kaliningrad",
                            "Europe/Kiev",
                            "Europe/Kirov",
                            "Europe/Lisbon",
                            "Europe/Ljubljana",
                            "Europe/London",
                            "Europe/Luxembourg",
                            "Europe/Madrid",
                            "Europe/Malta",
                            "Europe/Mariehamn",
                            "Europe/Minsk",
                            "Europe/Monaco",
                            "Europe/Moscow",
                            "Europe/Nicosia",
                            "Europe/Oslo",
                            "Europe/Paris",
                            "Europe/Podgorica",
                            "Europe/Prague",
                            "Europe/Riga",
                            "Europe/Rome",
                            "Europe/Samara",
                            "Europe/San_Marino",
                            "Europe/Sarajevo",
                            "Europe/Saratov",
                            "Europe/Simferopol",
                            "Europe/Skopje",
                            "Europe/Sofia",
                            "Europe/Stockholm",
                            "Europe/Tallinn",
                            "Europe/Tirane",
                            "Europe/Tiraspol",
                            "Europe/Ulyanovsk",
                            "Europe/Uzhgorod",
                            "Europe/Vaduz",
                            "Europe/Vatican",
                            "Europe/Vienna",
                            "Europe/Vilnius",
                            "Europe/Volgograd",
                            "Europe/Warsaw",
                            "Europe/Zagreb",
                            "Europe/Zaporozhye",
                            "Europe/Zurich",
                            "Factory",
                            "Fiji",
                            "GB",
                            "GB-Eire",
                            "GMT",
                            "GMT+0",
                            "GMT-0",
                            "GMT0",
                            "Georgetown",
                            "Greenland",
                            "Greenwich",
                            "Guadalajara",
                            "Guam",
                            "HST",
                            "Hanoi",
                            "Harare",
                            "Hawaii",
                            "Helsinki",
                            "Hobart",
                            "Hong Kong",
                            "Hongkong",
                            "Iceland",
                            "Indian/Antananarivo",
                            "Indian/Chagos",
                            "Indian/Christmas",
                            "Indian/Cocos",
                            "Indian/Comoro",
                            "Indian/Kerguelen",
                            "Indian/Mahe",
                            "Indian/Maldives",
                            "Indian/Mauritius",
                            "Indian/Mayotte",
                            "Indian/Reunion",
                            "Indiana (East)",
                            "International Date Line West",
                            "Iran",
                            "Irkutsk",
                            "Islamabad",
                            "Israel",
                            "Istanbul",
                            "Jakarta",
                            "Jamaica",
                            "Japan",
                            "Jerusalem",
                            "Kabul",
                            "Kaliningrad",
                            "Kamchatka",
                            "Karachi",
                            "Kathmandu",
                            "Kolkata",
                            "Krasnoyarsk",
                            "Kuala Lumpur",
                            "Kuwait",
                            "Kwajalein",
                            "Kyiv",
                            "La Paz",
                            "Libya",
                            "Lima",
                            "Lisbon",
                            "Ljubljana",
                            "London",
                            "MET",
                            "MST",
                            "MST7MDT",
                            "Madrid",
                            "Magadan",
                            "Marshall Is.",
                            "Mazatlan",
                            "Melbourne",
                            "Mexico City",
                            "Mexico/BajaNorte",
                            "Mexico/BajaSur",
                            "Mexico/General",
                            "Mid-Atlantic",
                            "Midway Island",
                            "Minsk",
                            "Monrovia",
                            "Monterrey",
                            "Montevideo",
                            "Moscow",
                            "Mountain Time (US & Canada)",
                            "Mumbai",
                            "Muscat",
                            "NZ",
                            "NZ-CHAT",
                            "Nairobi",
                            "Navajo",
                            "New Caledonia",
                            "New Delhi",
                            "Newfoundland",
                            "Novosibirsk",
                            "Nuku'alofa",
                            "Osaka",
                            "PRC",
                            "PST8PDT",
                            "Pacific Time (US & Canada)",
                            "Pacific/Apia",
                            "Pacific/Auckland",
                            "Pacific/Bougainville",
                            "Pacific/Chatham",
                            "Pacific/Chuuk",
                            "Pacific/Easter",
                            "Pacific/Efate",
                            "Pacific/Enderbury",
                            "Pacific/Fakaofo",
                            "Pacific/Fiji",
                            "Pacific/Funafuti",
                            "Pacific/Galapagos",
                            "Pacific/Gambier",
                            "Pacific/Guadalcanal",
                            "Pacific/Guam",
                            "Pacific/Honolulu",
                            "Pacific/Johnston",
                            "Pacific/Kiritimati",
                            "Pacific/Kosrae",
                            "Pacific/Kwajalein",
                            "Pacific/Majuro",
                            "Pacific/Marquesas",
                            "Pacific/Midway",
                            "Pacific/Nauru",
                            "Pacific/Niue",
                            "Pacific/Norfolk",
                            "Pacific/Noumea",
                            "Pacific/Pago_Pago",
                            "Pacific/Palau",
                            "Pacific/Pitcairn",
                            "Pacific/Pohnpei",
                            "Pacific/Ponape",
                            "Pacific/Port_Moresby",
                            "Pacific/Rarotonga",
                            "Pacific/Saipan",
                            "Pacific/Samoa",
                            "Pacific/Tahiti",
                            "Pacific/Tarawa",
                            "Pacific/Tongatapu",
                            "Pacific/Truk",
                            "Pacific/Wake",
                            "Pacific/Wallis",
                            "Pacific/Yap",
                            "Paris",
                            "Perth",
                            "Poland",
                            "Port Moresby",
                            "Portugal",
                            "Prague",
                            "Pretoria",
                            "Puerto Rico",
                            "Quito",
                            "ROC",
                            "ROK",
                            "Rangoon",
                            "Riga",
                            "Riyadh",
                            "Rome",
                            "Samara",
                            "Samoa",
                            "Santiago",
                            "Sapporo",
                            "Sarajevo",
                            "Saskatchewan",
                            "Seoul",
                            "Singapore",
                            "Skopje",
                            "Sofia",
                            "Solomon Is.",
                            "Srednekolymsk",
                            "Sri Jayawardenepura",
                            "St. Petersburg",
                            "Stockholm",
                            "Sydney",
                            "Taipei",
                            "Tallinn",
                            "Tashkent",
                            "Tbilisi",
                            "Tehran",
                            "Tijuana",
                            "Tokelau Is.",
                            "Tokyo",
                            "Turkey",
                            "UCT",
                            "US/Alaska",
                            "US/Aleutian",
                            "US/Arizona",
                            "US/Central",
                            "US/East-Indiana",
                            "US/Eastern",
                            "US/Hawaii",
                            "US/Indiana-Starke",
                            "US/Michigan",
                            "US/Mountain",
                            "US/Pacific",
                            "US/Pacific-New",
                            "US/Samoa",
                            "UTC",
                            "Ulaanbaatar",
                            "Universal",
                            "Urumqi",
                            "Vienna",
                            "Vilnius",
                            "Vladivostok",
                            "Volgograd",
                            "W-SU",
                            "WET",
                            "Warsaw",
                            "Wellington",
                            "West Central Africa",
                            "Yakutsk",
                            "Yerevan",
                            "Zagreb",
                            "Zulu",
                            "Zurich"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "`schema_type` not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "not_found",
                      "detail": "The 'invalid_schema_type' request parameter is invalid",
                      "code": "InvalidSchemaType",
                      "status": "404",
                      "source": {
                        "parameter": "invalid_schema_type"
                      },
                      "meta": {
                        "available_options": [
                          "10182",
                          "address",
                          "fileNumber",
                          "icn",
                          "nonBlankString",
                          "phone",
                          "ssn",
                          "timezone"
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        }
      }
    },
    "/forms/10182/validate": {
      "post": {
        "summary": "Validates a POST request body against the JSON schema.",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "nodValidate",
        "description": "Like the POST /forms/10182, but only does the validations <b>â€”does not submit anything.</b>",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Info about a single Notice of Disagreement",
            "content": {
              "application/json": {
                "examples": {
                  "minimum fields used": {
                    "value": {
                      "data": {
                        "type": "noticeOfDisagreementValidation",
                        "attributes": {
                          "status": "valid"
                        }
                      }
                    }
                  },
                  "all fields used": {
                    "value": {
                      "data": {
                        "type": "noticeOfDisagreementValidation",
                        "attributes": {
                          "status": "valid"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "noticeOfDisagreementValidation"
                          ]
                        },
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "valid"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Not JSON object": {
                    "value": {
                      "errors": [
                        {
                          "code": "109",
                          "detail": "The request body isn't a JSON object",
                          "status": "400",
                          "title": "Bad Request"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "422": {
            "description": "Error",
            "content": {
              "application/json": {
                "examples": {
                  "Violates JSON schema": {
                    "value": {
                      "errors": [
                        {
                          "title": "Missing required fields",
                          "detail": "One or more expected fields were not found",
                          "code": "145",
                          "source": {
                            "pointer": "/data/attributes"
                          },
                          "status": "422",
                          "meta": {
                            "missing_fields": [
                              "boardReviewOption"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/nodCreate"
              },
              "examples": {
                "minimum fields used": {
                  "value": {
                    "data": {
                      "type": "noticeOfDisagreement",
                      "attributes": {
                        "veteran": {
                          "icn": "1234567890V123456",
                          "fileNumber": "987654321",
                          "firstName": "JÃ¤Ã±e",
                          "lastName": "Doe",
                          "birthDate": "1969-12-31",
                          "homeless": true,
                          "phone": {
                            "areaCode": "555",
                            "phoneNumber": "8001111"
                          },
                          "email": "jdoe@example.com",
                          "timezone": "America/Chicago"
                        },
                        "boardReviewOption": "evidence_submission",
                        "requestingExtension": false,
                        "appealingVhaDenial": false
                      }
                    },
                    "included": [
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "tinnitus",
                          "decisionDate": "1900-01-01",
                          "decisionIssueId": 1,
                          "ratingIssueReferenceId": "2"
                        }
                      }
                    ]
                  }
                },
                "all fields used": {
                  "value": {
                    "data": {
                      "type": "noticeOfDisagreement",
                      "attributes": {
                        "veteran": {
                          "icn": "1234567890V123456",
                          "fileNumber": "987654321",
                          "firstName": "JÃ¤Ã±e",
                          "middleInitial": "Z",
                          "lastName": "Doe",
                          "birthDate": "1969-12-31",
                          "homeless": false,
                          "address": {
                            "addressLine1": "123 Main St",
                            "addressLine2": "Suite #1200",
                            "addressLine3": "Box 4",
                            "city": "North Pole",
                            "countryCodeIso3": "CAN",
                            "zipCode5": "00000",
                            "internationalPostalCode": "A1B 23C"
                          },
                          "phone": {
                            "countryCode": "6",
                            "areaCode": "555",
                            "phoneNumber": "8001111",
                            "phoneNumberExt": "2"
                          },
                          "email": "bob@bobbytablesemail.com",
                          "timezone": "America/Chicago"
                        },
                        "claimant": {
                          "firstName": "First",
                          "middleInitial": "D",
                          "lastName": "Last",
                          "homeless": false,
                          "birthDate": "1972-05-08",
                          "address": {
                            "addressLine1": "456 First St",
                            "addressLine2": "Apt 5",
                            "addressLine3": "Box 1",
                            "city": "Detroit",
                            "countryCodeIso3": "USA",
                            "stateCode": "MI",
                            "zipCode5": "48070"
                          },
                          "phone": {
                            "countryCode": "1",
                            "areaCode": "555",
                            "phoneNumber": "8111100",
                            "phoneNumberExt": "4"
                          },
                          "email": "example@email.com",
                          "timezone": "America/Detroit"
                        },
                        "representative": {
                          "name": "First Last"
                        },
                        "boardReviewOption": "hearing",
                        "hearingTypePreference": "central_office",
                        "requestingExtension": true,
                        "extensionReason": "good cause substantive reason",
                        "appealingVhaDenial": true
                      }
                    },
                    "included": [
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "tinnitus",
                          "decisionDate": "1900-01-01",
                          "decisionIssueId": 1,
                          "ratingIssueReferenceId": "2",
                          "ratingDecisionReferenceId": "3",
                          "disagreementArea": "Effective Date"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "left knee",
                          "decisionDate": "1900-01-02",
                          "decisionIssueId": 4,
                          "ratingIssueReferenceId": "5"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "123456789",
                          "decisionDate": "1900-01-03",
                          "ratingIssueReferenceId": "6",
                          "ratingDecisionReferenceId": "7",
                          "disagreementArea": "Service"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "PTSD",
                          "decisionDate": "1900-01-04",
                          "decisionIssueId": 8,
                          "ratingDecisionReferenceId": "9"
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "Traumatic Brain Injury",
                          "decisionDate": "1900-01-05",
                          "decisionIssueId": 10
                        }
                      },
                      {
                        "type": "appealableIssue",
                        "attributes": {
                          "issue": "right shoulder",
                          "decisionDate": "1900-01-06",
                          "disagreementArea": "Effective Date"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/evidence-submissions": {
      "post": {
        "summary": "Get a location for subsequent evidence submission document upload PUT request",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "postNoticeOfDisagreementEvidenceSubmission",
        "description": "This is the first step to submitting supporting evidence for an NOD.  (See the Evidence Uploads section above for additional information.)\nThe Notice of Disagreement GUID that is returned when the NOD is submitted, is supplied to this endpoint to ensure the NOD is in a valid state for sending supporting evidence documents.  Only NODs that selected the Evidence Submission lane are allowed to submit evidence documents up to 90 days after the NOD is received by VA.\n",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [

        ],
        "responses": {
          "201": {
            "description": "Location created",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "55555555-6666-7777-8888-999999999999",
                    "type": "evidenceSubmission",
                    "attributes": {
                      "status": "pending",
                      "code": null,
                      "detail": null,
                      "location": "http://path.to.upload/location/uuid",
                      "appealId": "00000000-1111-2222-3333-444444444444",
                      "appealType": "NoticeOfDisagreement",
                      "createDate": "2020-01-02T03:04:05.067Z",
                      "updateDate": "2020-01-02T03:04:05.067Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/nodEvidenceSubmissionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Associated Notice of Disagreement not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "not_found",
                      "detail": "NoticeOfDisagreement with uuid 00000000-0000-0000-0000-000000000000 not found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Not JSON object": {
                    "value": {
                      "errors": [
                        {
                          "code": "109",
                          "detail": "The request body isn't a JSON object",
                          "status": "400",
                          "title": "Bad Request"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation errors",
            "content": {
              "application/json": {
                "examples": {
                  "Missing Notice of Disagreement ID": {
                    "value": {
                      "errors": [
                        {
                          "title": "Missing required fields",
                          "detail": "One or more expected fields were not found",
                          "code": "145",
                          "source": {
                            "pointer": "/"
                          },
                          "status": "422",
                          "meta": {
                            "missing_fields": [
                              "nodId"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "Missing File Number": {
                    "value": {
                      "errors": [
                        {
                          "title": "Missing required fields",
                          "detail": "One or more expected fields were not found",
                          "code": "145",
                          "source": {
                            "pointer": "/"
                          },
                          "status": "422",
                          "meta": {
                            "missing_fields": [
                              "fileNumber"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "Notice of Disagreement does not indicate an evidence submission": {
                    "value": {
                      "errors": [
                        {
                          "title": "unprocessable_entity",
                          "detail": "Corresponding Notice of Disagreement 'boardReviewOption' must be 'evidence_submission'",
                          "code": "InvalidReviewOption",
                          "status": "422"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/nodEvidenceSubmissionCreate"
              }
            }
          }
        }
      }
    },
    "/nod-upload-path": {
      "put": {
        "summary": "Accepts Notice of Disagreement Evidence Submission document upload.",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "putNoticeOfDisagreementEvidenceSubmission",
        "description": "Accepts document metadata, document binary, and attachment binaries. Full URL, including\nquery parameters, provided from POST `/*/evidence_submissions`.\nPlease see the `documentUploadMetadata` schema for the required payload schema.\n\n## Example Payload\n\nThe following demonstrates a (redacted) multipart payload suitable for submitting to the PUT\nendpoint. Most programming languages should have provisions for assembling a multipart\npayload like this without having to do so manually.\n\n```\n--17de1ed8f01442b2a2d7a93506314b76\nContent-Disposition: form-data; name=\"metadata\"\nContent-Type: application/json\n\n{\"veteranFirstName\": \"Jane\",\n\"veteranLastName\": \"Doe\",\n\"fileNumber\": \"012345678\",\n\"zipCode\": \"94402\",\n\"source\": \"Vets.gov\",\n\"docType\": \"316\"\n\"businessLine\": \"BVA\"}\n--17de1ed8f01442b2a2d7a93506314b76\nContent-Disposition: form-data; name=\"content\"\nContent-Type: application/pdf\n\n<Binary PDF contents>\n--17de1ed8f01442b2a2d7a93506314b76\nContent-Disposition: form-data; name=\"attachment1\"\nContent-Type: application/pdf\n\n<Binary PDF attachment contents>\n--17de1ed8f01442b2a2d7a93506314b76--\n```\n\nThis PUT request would have an overall HTTP Content-Type header:\n\n```\nContent-Type: multipart/form-data; boundary=17de1ed8f01442b2a2d7a93506314b76\n```\n\nNote that the Content-Disposition parameter \"name\" in each part must be the expected values\n\"metadata\", \"content\", \"attachment1\"...\"attachmentN\"\n",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.write",
              "representative/NoticeOfDisagreements.write",
              "system/NoticeOfDisagreements.write"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "Content-MD5",
            "in": "header",
            "description": "Base64-encoded 128-bit MD5 digest of the message. Use for integrity control.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document upload staged"
          },
          "400": {
            "description": "Document upload failed",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "description": "Document upload failed",
                  "xml": {
                    "name": "Error"
                  },
                  "properties": {
                    "Code": {
                      "type": "string",
                      "description": "Error code",
                      "example": "Bad Digest"
                    },
                    "Message": {
                      "type": "string",
                      "description": "Error detail",
                      "example": "A client error (InvalidDigest) occurred when calling the PutObject operation - The Content-MD5 you specified was invalid."
                    },
                    "Resource": {
                      "type": "string",
                      "description": "Resource description",
                      "example": "/example_path_here/6d8433c1-cd55-4c24-affd-f592287a7572.upload"
                    },
                    "RequestId": {
                      "type": "string",
                      "description": "Identifier for debug purposes"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        }
      }
    },
    "/evidence-submissions/{id}": {
      "get": {
        "summary": "Returns all of the data associated with a specific Notice of Disagreement Evidence Submission.",
        "tags": [
          "Notice of Disagreements"
        ],
        "operationId": "getNoticeOfDisagreementEvidenceSubmission",
        "description": "Returns all of the data associated with a specific Notice of Disagreement Evidence Submission.",
        "security": [
          {
            "productionOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "sandboxOauth": [
              "veteran/NoticeOfDisagreements.read",
              "representative/NoticeOfDisagreements.read",
              "system/NoticeOfDisagreements.read"
            ]
          },
          {
            "bearer_token": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Notice of Disagreement UUID Evidence Submission",
            "example": "b77404cf-ef08-45e4-8201-d5b7622f63df",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Info about a single Notice of Disagreement Evidence Submission.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "55555555-6666-7777-8888-999999999999",
                    "type": "evidenceSubmission",
                    "attributes": {
                      "status": "pending",
                      "code": null,
                      "detail": null,
                      "location": null,
                      "appealId": "00000000-1111-2222-3333-444444444444",
                      "appealType": "NoticeOfDisagreement",
                      "createDate": "2020-01-02T03:04:05.067Z",
                      "updateDate": "2020-01-02T03:04:05.067Z"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/nodEvidenceSubmissionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Notice of Disagreement Evidence Submission not found",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Record not found",
                      "detail": "The record identified by 00000000-0000-0000-0000-000000000000 could not be found",
                      "code": "404",
                      "status": "404"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    {
                      "title": "Internal server error",
                      "detail": "Internal server error",
                      "code": "500",
                      "status": "500"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/errorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearer_token": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "productionOauth": {
        "type": "oauth2",
        "description": "The authentication model for the Notice of Disagreements API uses OAuth 2.0/OpenID Connect. The following authorization models are supported: [Authorization code flow](https://dev-developer.va.gov/explore/api/notice-of-disagreements/authorization-code) and [Client Credentials Grant (CCG)](https://dev-developer.va.gov/explore/api/notice-of-disagreements/client-credentials).",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://api.va.gov/oauth2/appeals/v1/authorization",
            "tokenUrl": "https://api.va.gov/oauth2/appeals/v1/token",
            "scopes": {
              "veteran/NoticeOfDisagreements.read": "Board Appeals info",
              "veteran/NoticeOfDisagreements.write": "Ability to submit Board Appeals",
              "veteran/appeals.read": "Appeals info",
              "veteran/appeals.write": "Ability to submit appeals",
              "representative/NoticeOfDisagreements.read": "Board Appeals info",
              "representative/NoticeOfDisagreements.write": "Ability to submit Board Appeals",
              "representative/appeals.read": "Appeals info",
              "representative/appeals.write": "Ability to submit appeals"
            }
          },
          "clientCredentials": {
            "tokenUrl": "To get production access, you must either work for VA or have specific VA agreements in place. If you have questions, [contact us](https://dev-developer.va.gov/support/contact-us).",
            "scopes": {
              "system/NoticeOfDisagreements.read": "Board Appeals info",
              "system/NoticeOfDisagreements.write": "Ability to submit Board Appeals",
              "system/appeals.read": "Appeals info",
              "system/appeals.write": "Ability to submit appeals"
            }
          }
        }
      },
      "sandboxOauth": {
        "type": "oauth2",
        "description": "The authentication model for the Notice of Disagreements API uses OAuth 2.0/OpenID Connect. The following authorization models are supported: [Authorization code flow](https://dev-developer.va.gov/explore/api/notice-of-disagreements/authorization-code) and [Client Credentials Grant (CCG)](https://dev-developer.va.gov/explore/api/notice-of-disagreements/client-credentials).",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://sandbox-api.va.gov/oauth2/appeals/v1/authorization",
            "tokenUrl": "https://sandbox-api.va.gov/oauth2/appeals/v1/token",
            "scopes": {
              "veteran/NoticeOfDisagreements.read": "Board Appeals info",
              "veteran/NoticeOfDisagreements.write": "Ability to submit Board Appeals",
              "veteran/appeals.read": "Appeals info",
              "veteran/appeals.write": "Ability to submit appeals",
              "representative/NoticeOfDisagreements.read": "Board Appeals info",
              "representative/NoticeOfDisagreements.write": "Ability to submit Board Appeals",
              "representative/appeals.read": "Appeals info",
              "representative/appeals.write": "Ability to submit appeals"
            }
          },
          "clientCredentials": {
            "tokenUrl": "https://deptva-eval.okta.com/oauth2/auskff5o6xsoQVngk2p7/v1/token",
            "scopes": {
              "system/NoticeOfDisagreements.read": "Board Appeals info",
              "system/NoticeOfDisagreements.write": "Ability to submit Board Appeals",
              "system/appeals.read": "Appeals info",
              "system/appeals.write": "Ability to submit appeals"
            }
          }
        }
      }
    },
    "schemas": {
      "appealableIssue": {
        "type": "object",
        "description": "An appealable issue (to appeal this, you include it as a RequestIssue when creating a HigherLevelReview, SupplementalClaim, or Appeal)",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "appealableIssue"
            ]
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "object",
            "properties": {
              "ratingIssueReferenceId": {
                "type": "string",
                "nullable": true,
                "description": "RatingIssue ID",
                "example": "2385"
              },
              "ratingIssueProfileDate": {
                "type": "string",
                "nullable": true,
                "format": "date",
                "description": "(yyyy-mm-dd) RatingIssue profile date",
                "example": "2006-05-31"
              },
              "ratingIssueDiagnosticCode": {
                "type": "string",
                "nullable": true,
                "description": "RatingIssue diagnostic code",
                "example": "5005"
              },
              "ratingDecisionReferenceId": {
                "type": "string",
                "nullable": true,
                "description": "The BGS ID for the appealable rating decision. This may be populated while ratingIssueReferenceId is nil",
                "example": null
              },
              "decisionIssueId": {
                "type": "integer",
                "nullable": true,
                "description": "DecisionIssue ID",
                "example": null
              },
              "approxDecisionDate": {
                "type": "string",
                "nullable": true,
                "format": "date",
                "description": "(yyyy-mm-dd) Approximate decision date",
                "example": "2006-11-27"
              },
              "description": {
                "type": "string",
                "nullable": true,
                "description": "Description",
                "example": "Service connection for hypertension is granted with an evaluation of 10 percent effective July 24, 2005."
              },
              "rampClaimId": {
                "type": "string",
                "nullable": true,
                "description": "RampClaim ID",
                "example": null
              },
              "titleOfActiveReview": {
                "type": "string",
                "nullable": true,
                "description": "Title of DecisionReview that this issue is still active on",
                "example": null
              },
              "sourceReviewType": {
                "type": "string",
                "nullable": true,
                "description": "The type of DecisionReview (HigherLevelReview, SupplementalClaim, Appeal) the issue was last decided on (if any)",
                "example": null
              },
              "timely": {
                "type": "boolean",
                "description": "An issue is timely if the receipt date is within 372 dates of the decision date.",
                "example": false
              },
              "latestIssuesInChain": {
                "type": "array",
                "description": "Shows the chain of decision and rating issues that preceded this issue. Only the most recent issue can be appealed (the object itself that contains the latestIssuesInChain attribute).",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "oneOf": [
                        {
                          "type": "string",
                          "nullable": true
                        },
                        {
                          "type": "integer"
                        }
                      ],
                      "example": null
                    },
                    "approxDecisionDate": {
                      "type": "string",
                      "nullable": true,
                      "format": "date",
                      "example": "2006-11-27"
                    }
                  }
                }
              },
              "ratingIssueSubjectText": {
                "type": "string",
                "nullable": true,
                "description": "Short description of RatingIssue",
                "example": "Hypertension"
              },
              "ratingIssuePercentNumber": {
                "type": "string",
                "nullable": true,
                "description": "Numerical rating for RatingIssue",
                "example": "10"
              },
              "isRating": {
                "type": "boolean",
                "description": "Whether or not this is a RatingIssue",
                "example": true
              }
            }
          }
        }
      },
      "errorModel": {
        "required": [
          "errors"
        ],
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "additionalProperties": false,
              "required": [
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "HTTP error title"
                },
                "detail": {
                  "type": "string",
                  "description": "HTTP error detail"
                },
                "code": {
                  "type": "string",
                  "description": "HTTP error code"
                },
                "source": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "Source of error",
                  "properties": {
                    "pointer": {
                      "type": "string",
                      "description": "Pointer to source of error"
                    },
                    "parameter": {
                      "type": "string",
                      "description": "Invalid request parameter"
                    },
                    "header": {
                      "type": "string",
                      "description": "Invalid header"
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "HTTP error code"
                },
                "meta": {
                  "type": "object",
                  "description": "Meta infomation",
                  "properties": {
                    "missing_fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of missing fields"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "nodCreate": {
        "type": "object",
        "description": "JSON Schema for VA Form 10182",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "noticeOfDisagreement"
                ]
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "veteran": {
                    "type": "object",
                    "properties": {
                      "ssn": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/ssn"
                          },
                          {
                            "description": "Veteran's SSN"
                          }
                        ]
                      },
                      "icn": {
                        "$ref": "#/components/schemas/icn"
                      },
                      "firstName": {
                        "allOf": [
                          {
                            "description": "Veteran's first name",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          {
                            "$comment": "can be whitespace, to accommodate those with 1 legal name"
                          },
                          {
                            "$ref": "#/components/schemas/nonBlankString"
                          }
                        ]
                      },
                      "middleInitial": {
                        "allOf": [
                          {
                            "description": "Veteran's middle initial",
                            "minLength": 1,
                            "maxLength": 1
                          },
                          {
                            "$ref": "#/components/schemas/nonBlankString"
                          }
                        ]
                      },
                      "lastName": {
                        "allOf": [
                          {
                            "description": "Veteran's last name",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          {
                            "$ref": "#/components/schemas/nonBlankString"
                          }
                        ]
                      },
                      "fileNumber": {
                        "$ref": "#/components/schemas/fileNumber"
                      },
                      "birthDate": {
                        "description": "Veteran's birth date",
                        "type": "string",
                        "format": "date"
                      },
                      "homeless": {
                        "type": "boolean"
                      },
                      "address": {
                        "$ref": "#/components/schemas/address"
                      },
                      "phone": {
                        "$ref": "#/components/schemas/phone",
                        "$comment": "the phone fields must not exceed 20 chars, when concatenated"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 6,
                        "maxLength": 255
                      },
                      "timezone": {
                        "description": "Veteran's timezone. Used for adding the current date to the signature according to the veteran's local time. If not specified, the current UTC date will be used for the signature (which may be ahead or behind the local date).",
                        "$ref": "#/components/schemas/timezone"
                      }
                    },
                    "required": [
                      "icn",
                      "fileNumber",
                      "firstName",
                      "lastName",
                      "birthDate",
                      "homeless",
                      "phone",
                      "email"
                    ],
                    "if": {
                      "properties": {
                        "homeless": {
                          "const": false
                        }
                      }
                    },
                    "then": {
                      "required": [
                        "address"
                      ]
                    }
                  },
                  "claimant": {
                    "type": "object",
                    "description": "If the claimant is a non-Veteran, claimant information is required. Without this information, we will be unable to identify the claimant. If you're a healthcare provider or an employee of a healthcare provider requesting review of a VA payment decision, you must identify the healthcare provider as the claimant and complete all relevant information in the claimant object.",
                    "properties": {
                      "firstName": {
                        "allOf": [
                          {
                            "description": "Non-Veteran claimant's first name",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          {
                            "$ref": "#/components/schemas/nonBlankString"
                          },
                          {
                            "$comment": "Can be whitespace to accommodate those with 1 legal name"
                          }
                        ]
                      },
                      "middleInitial": {
                        "allOf": [
                          {
                            "description": "Non-Veteran Claimant's middle initial",
                            "minLength": 1,
                            "maxLength": 1
                          },
                          {
                            "$ref": "#/components/schemas/nonBlankString"
                          }
                        ]
                      },
                      "lastName": {
                        "allOf": [
                          {
                            "description": "Non-Veteran Claimant's last name",
                            "minLength": 1,
                            "maxLength": 255
                          },
                          {
                            "$ref": "#/components/schemas/nonBlankString"
                          }
                        ]
                      },
                      "birthDate": {
                        "description": "Non-Veteran claimant's birth date",
                        "type": "string",
                        "format": "date"
                      },
                      "homeless": {
                        "type": "boolean"
                      },
                      "address": {
                        "$ref": "#/components/schemas/address"
                      },
                      "phone": {
                        "$ref": "#/components/schemas/phone",
                        "$comment": "the phone fields must not exceed 20 chars, when concatenated"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "minLength": 6,
                        "maxLength": 255
                      },
                      "timezone": {
                        "description": "Veteran's timezone. Used for adding the current date to the signature according to the veteran's local time. If not specified, the current UTC date will be used for the signature (which may be ahead or behind the local date).",
                        "$ref": "#/components/schemas/timezone"
                      }
                    },
                    "required": [
                      "homeless",
                      "phone",
                      "email"
                    ],
                    "if": {
                      "properties": {
                        "homeless": {
                          "const": false
                        }
                      }
                    },
                    "then": {
                      "required": [
                        "address"
                      ]
                    }
                  },
                  "representative": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                      }
                    }
                  },
                  "boardReviewOption": {
                    "type": "string",
                    "enum": [
                      "direct_review",
                      "evidence_submission",
                      "hearing"
                    ]
                  },
                  "hearingTypePreference": {
                    "type": "string",
                    "enum": [
                      "virtual_hearing",
                      "video_conference",
                      "central_office"
                    ]
                  },
                  "requestingExtension": {
                    "type": "boolean",
                    "description": "Set to true to request a filing extension. An extensionReason must be provided if true."
                  },
                  "extensionReason": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2300,
                    "description": "Explanation why you believe there is good cause for the extension. If an extensionReason is provided, requestingExtension must be true."
                  },
                  "appealingVhaDenial": {
                    "type": "boolean",
                    "description": "Set to true if you are appealing a denial of benefits by the Veterans Health Administration (VHA)."
                  }
                },
                "required": [
                  "boardReviewOption"
                ],
                "if": {
                  "properties": {
                    "requestingExtension": {
                      "const": true
                    }
                  }
                },
                "then": {
                  "required": [
                    "extensionReason"
                  ]
                }
              }
            },
            "required": [
              "type",
              "attributes"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "appealableIssue"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "issue": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 180
                    },
                    "decisionDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "decisionIssueId": {
                      "type": "integer"
                    },
                    "ratingIssueReferenceId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255
                    },
                    "ratingDecisionReferenceId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 255
                    },
                    "disagreementArea": {
                      "type": "string",
                      "maxLength": 90
                    }
                  },
                  "required": [
                    "issue",
                    "decisionDate"
                  ]
                }
              },
              "required": [
                "type",
                "attributes"
              ]
            },
            "minItems": 1,
            "maxItems": 100,
            "uniqueItems": true
          }
        },
        "required": [
          "data",
          "included"
        ]
      },
      "nodCreateResponse": {
        "description": "Successful response of a 10182 form submission",
        "type": "object",
        "properties": {
          "data": {
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique ID of created NOD",
                "example": "97751cb6-d06d-4179-87f6-75e3fc9d875c"
              },
              "type": {
                "type": "string",
                "description": "Name of record class",
                "example": "noticeOfDisagreement"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status of NOD",
                    "example": "pending",
                    "enum": [
                      "pending",
                      "submitting",
                      "submitted",
                      "processing",
                      "success",
                      "complete",
                      "error"
                    ]
                  },
                  "createDate": {
                    "type": "string",
                    "description": "Created timestamp of the NOD",
                    "example": "2020-12-16T19:52:23.909Z"
                  },
                  "updateDate": {
                    "type": "string",
                    "description": "Updated timestamp of the NOD",
                    "example": "2020-12-16T19:52:23.909Z"
                  }
                }
              },
              "formData": {
                "$ref": "#/components/schemas/nodCreate"
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/appealableIssue"
            }
          }
        }
      },
      "nodEvidenceSubmissionCreate": {
        "type": "object",
        "description": "JSON Schema for evidence submissions for VA Form 10182",
        "properties": {
          "nodId": {
            "description": "Associated Notice of Disagreement UUID",
            "type": "string",
            "format": "uuid",
            "example": "9dbc8f83-a778-417e-9f8b-a9a36d710f70"
          },
          "fileNumber": {
            "description": "Veteran's VA file number (c-file / css)",
            "type": "string",
            "minLength": 7,
            "maxLength": 9,
            "example": "987654321"
          }
        },
        "required": [
          "nodId",
          "fileNumber"
        ]
      },
      "nodEvidenceSubmissionResponse": {
        "type": "object",
        "properties": {
          "data": {
            "properties": {
              "id": {
                "description": "The document upload identifier",
                "type": "string",
                "format": "uuid",
                "example": "6d8433c1-cd55-4c24-affd-f592287a7572"
              },
              "type": {
                "description": "JSON API type specification",
                "type": "string",
                "example": "evidenceSubmission"
              },
              "attributes": {
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "received",
                    "enum": [
                      "received",
                      "processing",
                      "success",
                      "pending",
                      "uploaded",
                      "vbms",
                      "error",
                      "expired"
                    ]
                  },
                  "code": {
                    "type": "string",
                    "nullable": true
                  },
                  "detail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Human readable error detail. Only present if status = \"error\""
                  },
                  "appealType": {
                    "description": "Type of associated appeal",
                    "type": "string",
                    "example": "NoticeOfDisagreement"
                  },
                  "appealId": {
                    "description": "GUID of associated appeal",
                    "type": "string",
                    "format": "uuid",
                    "example": "2926ad2a-9372-48cf-8ec1-69e08e4799ef"
                  },
                  "location": {
                    "type": "string",
                    "nullable": true,
                    "description": "Location to which to PUT document Payload",
                    "format": "uri",
                    "example": "https://sandbox-api.va.gov/example_path_here/6d8433c1-cd55-4c24-affd-f592287a7572"
                  },
                  "updateDate": {
                    "description": "The last time the submission was updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-07-30T17:31:15.958Z"
                  },
                  "createDate": {
                    "description": "The time the submission was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-07-30T17:31:15.958Z"
                  }
                }
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "nodShowResponse": {
        "type": "object",
        "properties": {
          "data": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/uuid"
              },
              "type": {
                "type": "string",
                "enum": [
                  "noticeOfDisagreement"
                ]
              },
              "attributes": {
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "pending",
                    "enum": [
                      "pending",
                      "submitting",
                      "submitted",
                      "processing",
                      "success",
                      "complete",
                      "error"
                    ]
                  },
                  "updateDate": {
                    "description": "The last time the submission was updated",
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-07-30T17:31:15.958Z"
                  },
                  "createDate": {
                    "description": "The time the submission was created",
                    "type": "string",
                    "format": "date-time",
                    "example": "2018-07-30T17:31:15.958Z"
                  }
                }
              }
            },
            "required": [
              "id",
              "type",
              "attributes"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "uuid": {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
      }
    }
  },
  "servers": [
    {
      "url": "https://sandbox-api.va.gov/services/appeals/notice-of-disagreements/{version}",
      "description": "VA.gov API sandbox environment",
      "variables": {
        "version": {
          "default": "v0"
        }
      }
    },
    {
      "url": "https://api.va.gov/services/appeals/notice-of-disagreements/{version}",
      "description": "VA.gov API production environment",
      "variables": {
        "version": {
          "default": "v0"
        }
      }
    }
  ]
}
