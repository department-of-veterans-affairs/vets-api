{{- if .Values.web.dbMigrate.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: db-migrate
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: db-migrate
          image: '{{ .Values.image.value }}:{{ .Values.image.tag }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bundle"]
          args:  ["exec", "rails", "db:migrate"]
          volumeMounts:
            - name: vets-api-mockdata
              mountPath: /app/config/vets-api-mockdata
            - name: ddsocket
              mountPath: /var/run/datadog
            - name: clamav-volume
              mountPath: /app/clamav_tmp
{{ toYaml .Values.common.volumeMounts | indent 12 }}
          env:
            - name: GIT_REVISION
              value: {{ .Values.image.tag}}
{{ toYaml .Values.web.dbMigrate.envSecrets | indent 12 }}
          {{- range $keys, $key := .Values.common.secrets }}
          {{- range $secrets, $secret := $key }}
            - name: {{ $secret.env_var }}
              valueFrom:
                secretKeyRef:
                  name: {{ $keys }}
                  key: {{ $secret.name }}
          {{- end }}
          {{- end }}
          {{- range $varName := .Values.parameters }}
            - name: {{ $varName }}
              valueFrom:
                secretKeyRef:
                  name: common-environment-vars
                  key: {{ $varName }}
          {{- end }}

      restartPolicy: Never
      securityContext:
        fsGroup: {{ .Values.fsGroup }}
      volumes:
        - name: vets-api-mockdata
          emptyDir: { }
        - name: clamav-volume
          emptyDir: { }
        - name: ddsocket
          hostPath:
            path: /var/run/datadog
{{ toYaml .Values.common.volumes | indent 8 }}
  backoffLimit: 1
{{- end }}
