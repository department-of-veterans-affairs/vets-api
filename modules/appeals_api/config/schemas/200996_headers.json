{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "JSON Schema for Higher-Level Review Creation endpoint headers (Decision Reviews API)",
  "type": "object",
  "properties": {
    "X-VA-SSN": { "type": "string", "pattern": "^[0-9]{9}$" },
    "X-VA-First-Name": {
      "$comment": "can be whitespace, to accomodate those with 1 legal name",
      "type": "string",
      "maxLength": 12
    },
    "X-VA-Middle-Initial": { "$ref": "#/definitions/nonBlankStringMaxLength1" },
    "X-VA-Last-Name": { "$ref": "#/definitions/nonBlankStringMaxLength18" },
    "X-VA-Birth-Date": { "$ref": "#/definitions/date" },
    "X-VA-File-Number": { "$ref": "#/definitions/nonBlankStringMaxLength9" },
    "X-VA-Service-Number": { "$ref": "#/definitions/nonBlankStringMaxLength9" },
    "X-VA-Insurance-Policy-Number": { "$ref": "#/definitions/nonBlankStringMaxLength18" }
  },
  "additionalProperties": false,
  "required": [
    "X-VA-SSN",
    "X-VA-First-Name",
    "X-VA-Last-Name",
    "X-VA-Birth-Date"
  ],
  "definitions": {
    "nonBlankString": {
      "type": "string",
      "pattern": "[^ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]",
      "$comment": "The pattern used ensures that a string has at least one non-whitespace character. The pattern comes from JavaScript's \\s character class. \"\\s Matches a single white space character, including space, tab, form feed, line feed, and other Unicode spaces. Equivalent to [ \\f\\n\\r\\t\\v\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff].\": https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes  We are using simple character classes at JSON Schema's recommendation: https://tools.ietf.org/html/draft-handrews-json-schema-validation-01#section-4.3"
    },
    "nonBlankStringMaxLength18": {
      "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 18 } ]
    },
    "nonBlankStringMaxLength9": {
      "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 9 } ]
    },
    "nonBlankStringMaxLength1": {
      "allOf": [ { "$ref": "#/definitions/nonBlankString" }, { "maxLength": 1 } ]
    },
    "date": {
      "type": "string",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
    }
  }
}
