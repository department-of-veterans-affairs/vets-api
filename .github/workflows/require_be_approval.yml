name: Check Backend Review Group Approval

on:
  pull_request:
    types: [opened, reopened, edited, synchronize, review_requested, submitted]

jobs:
  check-backend-review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set up environment variables
        run: |
          echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Get requested reviewer teams from PR payload
        id: requested_teams
        run: |
          echo "pr_requested_teams=$(echo '${{ toJSON(github.event.pull_request.requested_teams.*.slug) }}' | jq -c '.')" >> "$GITHUB_OUTPUT"

      - name: Check if backend-review-group is requested
        id: check_backend_requested
        run: |
          echo "Requested teams: ${{ steps.requested_teams.outputs.pr_requested_teams }}"
          echo '${{ steps.requested_teams.outputs.pr_requested_teams }}' | grep -q '"backend-review-group"' && \
            echo "team_requested=true" >> "$GITHUB_OUTPUT" || \
            echo "team_requested=false" >> "$GITHUB_OUTPUT"

      - name: Exit early if backend-review-group is NOT requested
        if: steps.check_backend_requested.outputs.team_requested == 'false'
        run: echo "Skipping backend review check since backend-review-group is not requested"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE }}
          aws-region: "us-gov-west-1"

      - name: Get bot token from Parameter Store
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Get backend-review-group members
        if: steps.check_backend_requested.outputs.team_requested == 'true'
        run: |
          gh api /orgs/department-of-veterans-affairs/teams/backend-review-group/members --jq '.[].login' > members.txt
          echo "Backend team members:"
          cat members.txt
        env:
          GITHUB_TOKEN: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}

      - name: Check if any backend-review-group member approved the PR
        if: steps.check_backend_requested.outputs.team_requested == 'true'
        run: |
          gh pr view "$PR_NUMBER" --repo "$REPO" --json reviews -q '.reviews[] | select(.state=="APPROVED") | .author.login' > approvals.txt
          echo "Approvals by:"
          cat approvals.txt

          PASSED=false
          while IFS= read -r member; do
            if grep -Fxq "$member" approvals.txt; then
              echo "✅ $member from backend-review-group has approved"
              PASSED=true
              break
            fi
          done < members.txt

          if [[ "$PASSED" == "true" ]]; then
            echo "Backend team approval satisfied."
          else
            echo "❌ No approvals from backend-review-group. Failing job."
            exit 1
          fi
